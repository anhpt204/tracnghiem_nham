--
-- PostgreSQL database dump
--

-- Dumped from database version 8.4.11
-- Dumped by pg_dump version 9.2.0
-- Started on 2013-03-20 13:12:28

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

--
-- TOC entry 3543 (class 1262 OID 3458376)
-- Dependencies: 3542
-- Name: pwvm; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON DATABASE pwvm IS 'Sebastian';


--
-- TOC entry 1830 (class 2612 OID 3458379)
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: -
--

CREATE OR REPLACE PROCEDURAL LANGUAGE plpgsql;


SET search_path = public, pg_catalog;

--
-- TOC entry 1433 (class 1247 OID 3459315)
-- Name: att_unit; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE att_unit AS ENUM (
    'nominal',
    'meter',
    'decimeter',
    'hectar',
    'kilovolt',
    'text',
    'not_applicable'
);


--
-- TOC entry 1404 (class 0 OID 0)
-- Name: box2d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d;


--
-- TOC entry 342 (class 1255 OID 3458456)
-- Name: box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- TOC entry 1028 (class 1255 OID 3458457)
-- Name: box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- TOC entry 1403 (class 1247 OID 3458433)
-- Name: box2d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d (
    INTERNALLENGTH = 16,
    INPUT = box2d_in,
    OUTPUT = box2d_out,
    ALIGNMENT = int4,
    STORAGE = plain
);


--
-- TOC entry 1392 (class 0 OID 0)
-- Name: box3d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d;


--
-- TOC entry 1021 (class 1255 OID 3458425)
-- Name: box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- TOC entry 314 (class 1255 OID 3458426)
-- Name: box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- TOC entry 1391 (class 1247 OID 3458422)
-- Name: box3d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d (
    INTERNALLENGTH = 48,
    INPUT = box3d_in,
    OUTPUT = box3d_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- TOC entry 1396 (class 0 OID 0)
-- Name: box3d_extent; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent;


--
-- TOC entry 308 (class 1255 OID 3458429)
-- Name: box3d_extent_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_in(cstring) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- TOC entry 309 (class 1255 OID 3458430)
-- Name: box3d_extent_out(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_out(box3d_extent) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_out';


--
-- TOC entry 1395 (class 1247 OID 3458428)
-- Name: box3d_extent; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent (
    INTERNALLENGTH = 48,
    INPUT = box3d_extent_in,
    OUTPUT = box3d_extent_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- TOC entry 1400 (class 0 OID 0)
-- Name: chip; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE chip;


--
-- TOC entry 343 (class 1255 OID 3458449)
-- Name: chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- TOC entry 344 (class 1255 OID 3458450)
-- Name: chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- TOC entry 1399 (class 1247 OID 3458448)
-- Name: chip; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE chip (
    INTERNALLENGTH = variable,
    INPUT = chip_in,
    OUTPUT = chip_out,
    ALIGNMENT = double,
    STORAGE = extended
);


--
-- TOC entry 1436 (class 1247 OID 3459327)
-- Name: dlm_objtyp; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE dlm_objtyp AS ENUM (
    'P',
    'L',
    'F',
    'K'
);


--
-- TOC entry 1423 (class 0 OID 0)
-- Name: geography; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geography;


--
-- TOC entry 838 (class 1255 OID 3459183)
-- Name: geography_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'geography_analyze';


--
-- TOC entry 836 (class 1255 OID 3459181)
-- Name: geography_in(cstring, oid, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_in(cstring, oid, integer) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_in';


--
-- TOC entry 837 (class 1255 OID 3459182)
-- Name: geography_out(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_out(geography) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_out';


--
-- TOC entry 834 (class 1255 OID 3459178)
-- Name: geography_typmod_in(cstring[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_in(cstring[]) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_in';


--
-- TOC entry 835 (class 1255 OID 3459179)
-- Name: geography_typmod_out(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_out(integer) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_out';


--
-- TOC entry 1422 (class 1247 OID 3459180)
-- Name: geography; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geography (
    INTERNALLENGTH = variable,
    INPUT = geography_in,
    OUTPUT = geography_out,
    TYPMOD_IN = geography_typmod_in,
    TYPMOD_OUT = geography_typmod_out,
    ANALYZE = geography_analyze,
    ALIGNMENT = double,
    STORAGE = main
);


--
-- TOC entry 1388 (class 0 OID 0)
-- Name: geometry; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry;


--
-- TOC entry 298 (class 1255 OID 3458394)
-- Name: geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- TOC entry 299 (class 1255 OID 3458392)
-- Name: geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- TOC entry 300 (class 1255 OID 3458393)
-- Name: geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- TOC entry 301 (class 1255 OID 3458395)
-- Name: geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- TOC entry 302 (class 1255 OID 3458396)
-- Name: geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- TOC entry 1387 (class 1247 OID 3458386)
-- Name: geometry; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry (
    INTERNALLENGTH = variable,
    INPUT = geometry_in,
    OUTPUT = geometry_out,
    RECEIVE = geometry_recv,
    SEND = geometry_send,
    ANALYZE = geometry_analyze,
    DELIMITER = ':',
    ALIGNMENT = int4,
    STORAGE = main
);


--
-- TOC entry 1407 (class 1247 OID 3458708)
-- Name: geometry_dump; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry_dump AS (
	path integer[],
	geom geometry
);


--
-- TOC entry 1427 (class 0 OID 0)
-- Name: gidx; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx;


--
-- TOC entry 839 (class 1255 OID 3459186)
-- Name: gidx_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_in(cstring) RETURNS gidx
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_in';


--
-- TOC entry 840 (class 1255 OID 3459187)
-- Name: gidx_out(gidx); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_out(gidx) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_out';


--
-- TOC entry 1426 (class 1247 OID 3459185)
-- Name: gidx; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx (
    INTERNALLENGTH = variable,
    INPUT = gidx_in,
    OUTPUT = gidx_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- TOC entry 1419 (class 0 OID 0)
-- Name: pgis_abs; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs;


--
-- TOC entry 604 (class 1255 OID 3458887)
-- Name: pgis_abs_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_in(cstring) RETURNS pgis_abs
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_in';


--
-- TOC entry 605 (class 1255 OID 3458888)
-- Name: pgis_abs_out(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_out(pgis_abs) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_out';


--
-- TOC entry 1418 (class 1247 OID 3458886)
-- Name: pgis_abs; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs (
    INTERNALLENGTH = 8,
    INPUT = pgis_abs_in,
    OUTPUT = pgis_abs_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- TOC entry 1384 (class 0 OID 0)
-- Name: spheroid; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid;


--
-- TOC entry 304 (class 1255 OID 3458383)
-- Name: spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- TOC entry 305 (class 1255 OID 3458384)
-- Name: spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- TOC entry 1383 (class 1247 OID 3458380)
-- Name: spheroid; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid (
    INTERNALLENGTH = 65,
    INPUT = spheroid_in,
    OUTPUT = spheroid_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- TOC entry 682 (class 1255 OID 3458979)
-- Name: _st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGeoJson';


--
-- TOC entry 903 (class 1255 OID 3459268)
-- Name: _st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_geojson';


--
-- TOC entry 654 (class 1255 OID 3458962)
-- Name: _st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGML';


--
-- TOC entry 889 (class 1255 OID 3459254)
-- Name: _st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_gml';


--
-- TOC entry 977 (class 1255 OID 3458971)
-- Name: _st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asKML';


--
-- TOC entry 897 (class 1255 OID 3459262)
-- Name: _st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_kml';


--
-- TOC entry 793 (class 1255 OID 3459300)
-- Name: _st_bestsrid(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_BestSRID($1,$1)$_$;


--
-- TOC entry 934 (class 1255 OID 3459299)
-- Name: _st_bestsrid(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_bestsrid';


--
-- TOC entry 568 (class 1255 OID 3458856)
-- Name: _st_buffer(geometry, double precision, cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_buffer(geometry, double precision, cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- TOC entry 979 (class 1255 OID 3458929)
-- Name: _st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'contains';


--
-- TOC entry 627 (class 1255 OID 3458935)
-- Name: _st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'containsproperly';


--
-- TOC entry 629 (class 1255 OID 3458931)
-- Name: _st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'coveredby';


--
-- TOC entry 981 (class 1255 OID 3458933)
-- Name: _st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'covers';


--
-- TOC entry 927 (class 1255 OID 3459292)
-- Name: _st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_covers';


--
-- TOC entry 630 (class 1255 OID 3458923)
-- Name: _st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'crosses';


--
-- TOC entry 821 (class 1255 OID 3459145)
-- Name: _st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dfullywithin';


--
-- TOC entry 911 (class 1255 OID 3459276)
-- Name: _st_distance(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_distance(geography, geography, double precision, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_distance';


--
-- TOC entry 491 (class 1255 OID 3458713)
-- Name: _st_dumppoints(geometry, integer[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) RETURNS SETOF geometry_dump
    LANGUAGE plpgsql
    AS $$
DECLARE
  tmp geometry_dump;
  tmp2 geometry_dump;
  nb_points integer;
  nb_geom integer;
  i integer;
  j integer;
  g geometry;
  
BEGIN
  
  RAISE DEBUG '%,%', cur_path, ST_GeometryType(the_geom);

  -- Special case (MULTI* OR GEOMETRYCOLLECTION) : iterate and return the DumpPoints of the geometries
  SELECT ST_NumGeometries(the_geom) INTO nb_geom;

  IF (nb_geom IS NOT NULL) THEN
    
    i = 1;
    FOR tmp2 IN SELECT (ST_Dump(the_geom)).* LOOP

      FOR tmp IN SELECT * FROM _ST_DumpPoints(tmp2.geom, cur_path || tmp2.path) LOOP
	    RETURN NEXT tmp;
      END LOOP;
      i = i + 1;
      
    END LOOP;

    RETURN;
  END IF;
  

  -- Special case (POLYGON) : return the points of the rings of a polygon
  IF (ST_GeometryType(the_geom) = 'ST_Polygon') THEN

    FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_ExteriorRing(the_geom), cur_path || ARRAY[1]) LOOP
      RETURN NEXT tmp;
    END LOOP;
    
    j := ST_NumInteriorRings(the_geom);
    FOR i IN 1..j LOOP
        FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_InteriorRingN(the_geom, i), cur_path || ARRAY[i+1]) LOOP
          RETURN NEXT tmp;
        END LOOP;
    END LOOP;
    
    RETURN;
  END IF;

    
  -- Special case (POINT) : return the point
  IF (ST_GeometryType(the_geom) = 'ST_Point') THEN

    tmp.path = cur_path || ARRAY[1];
    tmp.geom = the_geom;

    RETURN NEXT tmp;
    RETURN;

  END IF;


  -- Use ST_NumPoints rather than ST_NPoints to have a NULL value if the_geom isn't
  -- a LINESTRING or CIRCULARSTRING.
  SELECT ST_NumPoints(the_geom) INTO nb_points;

  -- This should never happen
  IF (nb_points IS NULL) THEN
    RAISE EXCEPTION 'Unexpected error while dumping geometry %', ST_AsText(the_geom);
  END IF;

  FOR i IN 1..nb_points LOOP
    tmp.path = cur_path || ARRAY[i];
    tmp.geom := ST_PointN(the_geom, i);
    RETURN NEXT tmp;
  END LOOP;
   
END
$$;


--
-- TOC entry 626 (class 1255 OID 3458917)
-- Name: _st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_dwithin';


--
-- TOC entry 912 (class 1255 OID 3459277)
-- Name: _st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_dwithin';


--
-- TOC entry 650 (class 1255 OID 3458951)
-- Name: _st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- TOC entry 916 (class 1255 OID 3459281)
-- Name: _st_expand(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_expand(geography, double precision) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_expand';


--
-- TOC entry 631 (class 1255 OID 3458920)
-- Name: _st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersects';


--
-- TOC entry 597 (class 1255 OID 3458862)
-- Name: _st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'ST_LineCrossingDirection';


--
-- TOC entry 819 (class 1255 OID 3459143)
-- Name: _st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longestline2d';


--
-- TOC entry 768 (class 1255 OID 3459139)
-- Name: _st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- TOC entry 833 (class 1255 OID 3459167)
-- Name: _st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_same';


--
-- TOC entry 982 (class 1255 OID 3458938)
-- Name: _st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- TOC entry 926 (class 1255 OID 3459291)
-- Name: _st_pointoutside(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_pointoutside(geography) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_point_outside';


--
-- TOC entry 632 (class 1255 OID 3458915)
-- Name: _st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'touches';


--
-- TOC entry 633 (class 1255 OID 3458926)
-- Name: _st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'within';


--
-- TOC entry 992 (class 1255 OID 3459156)
-- Name: addauth(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addauth(text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	lockid alias for $1;
	okay boolean;
	myrec record;
BEGIN
	-- check to see if table exists
	--  if not, CREATE TEMP TABLE mylock (transid xid, lockcode text)
	okay := 'f';
	FOR myrec IN SELECT * FROM pg_class WHERE relname = 'temp_lock_have_table' LOOP
		okay := 't';
	END LOOP; 
	IF (okay <> 't') THEN 
		CREATE TEMP TABLE temp_lock_have_table (transid xid, lockcode text);
			-- this will only work from pgsql7.4 up
			-- ON COMMIT DELETE ROWS;
	END IF;

	--  INSERT INTO mylock VALUES ( $1)
--	EXECUTE 'INSERT INTO temp_lock_have_table VALUES ( '||
--		quote_literal(getTransactionID()) || ',' ||
--		quote_literal(lockid) ||')';

	INSERT INTO temp_lock_have_table VALUES (getTransactionID(), lockid);

	RETURN true::boolean;
END;
$_$;


--
-- TOC entry 995 (class 1255 OID 3458555)
-- Name: addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- TOC entry 528 (class 1255 OID 3458757)
-- Name: addgeometrycolumn(character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('','',$1,$2,$3,$4,$5) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 527 (class 1255 OID 3458756)
-- Name: addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STABLE STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('',$1,$2,$3,$4,$5,$6) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 1011 (class 1255 OID 3458755)
-- Name: addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	new_type alias for $6;
	new_dim alias for $7;
	rec RECORD;
	sr varchar;
	real_schema name;
	sql text;

BEGIN

	-- Verify geometry type
	IF ( NOT ( (new_type = 'GEOMETRY') OR
			   (new_type = 'GEOMETRYCOLLECTION') OR
			   (new_type = 'POINT') OR
			   (new_type = 'MULTIPOINT') OR
			   (new_type = 'POLYGON') OR
			   (new_type = 'MULTIPOLYGON') OR
			   (new_type = 'LINESTRING') OR
			   (new_type = 'MULTILINESTRING') OR
			   (new_type = 'GEOMETRYCOLLECTIONM') OR
			   (new_type = 'POINTM') OR
			   (new_type = 'MULTIPOINTM') OR
			   (new_type = 'POLYGONM') OR
			   (new_type = 'MULTIPOLYGONM') OR
			   (new_type = 'LINESTRINGM') OR
			   (new_type = 'MULTILINESTRINGM') OR
			   (new_type = 'CIRCULARSTRING') OR
			   (new_type = 'CIRCULARSTRINGM') OR
			   (new_type = 'COMPOUNDCURVE') OR
			   (new_type = 'COMPOUNDCURVEM') OR
			   (new_type = 'CURVEPOLYGON') OR
			   (new_type = 'CURVEPOLYGONM') OR
			   (new_type = 'MULTICURVE') OR
			   (new_type = 'MULTICURVEM') OR
			   (new_type = 'MULTISURFACE') OR
			   (new_type = 'MULTISURFACEM')) )
	THEN
		RAISE EXCEPTION 'Invalid type name - valid ones are:
	POINT, MULTIPOINT,
	LINESTRING, MULTILINESTRING,
	POLYGON, MULTIPOLYGON,
	CIRCULARSTRING, COMPOUNDCURVE, MULTICURVE,
	CURVEPOLYGON, MULTISURFACE,
	GEOMETRY, GEOMETRYCOLLECTION,
	POINTM, MULTIPOINTM,
	LINESTRINGM, MULTILINESTRINGM,
	POLYGONM, MULTIPOLYGONM,
	CIRCULARSTRINGM, COMPOUNDCURVEM, MULTICURVEM
	CURVEPOLYGONM, MULTISURFACEM,
	or GEOMETRYCOLLECTIONM';
		RETURN 'fail';
	END IF;


	-- Verify dimension
	IF ( (new_dim >4) OR (new_dim <0) ) THEN
		RAISE EXCEPTION 'invalid dimension';
		RETURN 'fail';
	END IF;

	IF ( (new_type LIKE '%M') AND (new_dim!=3) ) THEN
		RAISE EXCEPTION 'TypeM needs 3 dimensions';
		RETURN 'fail';
	END IF;


	-- Verify SRID
	IF ( new_srid != -1 ) THEN
		SELECT SRID INTO sr FROM spatial_ref_sys WHERE SRID = new_srid;
		IF NOT FOUND THEN
			RAISE EXCEPTION 'AddGeometryColumns() - invalid SRID';
			RETURN 'fail';
		END IF;
	END IF;


	-- Verify schema
	IF ( schema_name IS NOT NULL AND schema_name != '' ) THEN
		sql := 'SELECT nspname FROM pg_namespace ' ||
			'WHERE text(nspname) = ' || quote_literal(schema_name) ||
			'LIMIT 1';
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Schema % is not a valid schemaname', quote_literal(schema_name);
			RETURN 'fail';
		END IF;
	END IF;

	IF ( real_schema IS NULL ) THEN
		RAISE DEBUG 'Detecting schema';
		sql := 'SELECT n.nspname AS schemaname ' ||
			'FROM pg_catalog.pg_class c ' ||
			  'JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace ' ||
			'WHERE c.relkind = ' || quote_literal('r') ||
			' AND n.nspname NOT IN (' || quote_literal('pg_catalog') || ', ' || quote_literal('pg_toast') || ')' ||
			' AND pg_catalog.pg_table_is_visible(c.oid)' ||
			' AND c.relname = ' || quote_literal(table_name);
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Table % does not occur in the search_path', quote_literal(table_name);
			RETURN 'fail';
		END IF;
	END IF;


	-- Add geometry column to table
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD COLUMN ' || quote_ident(column_name) ||
		' geometry ';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Delete stale record in geometry_columns (if any)
	sql := 'DELETE FROM geometry_columns WHERE
		f_table_catalog = ' || quote_literal('') ||
		' AND f_table_schema = ' ||
		quote_literal(real_schema) ||
		' AND f_table_name = ' || quote_literal(table_name) ||
		' AND f_geometry_column = ' || quote_literal(column_name);
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add record in geometry_columns
	sql := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema,f_table_name,' ||
										  'f_geometry_column,coord_dimension,srid,type)' ||
		' VALUES (' ||
		quote_literal('') || ',' ||
		quote_literal(real_schema) || ',' ||
		quote_literal(table_name) || ',' ||
		quote_literal(column_name) || ',' ||
		new_dim::text || ',' ||
		new_srid::text || ',' ||
		quote_literal(new_type) || ')';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add table CHECKs
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_srid_' || column_name)
		|| ' CHECK (ST_SRID(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_dims_' || column_name)
		|| ' CHECK (ST_NDims(' || quote_ident(column_name) ||
		') = ' || new_dim::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	IF ( NOT (new_type = 'GEOMETRY')) THEN
		sql := 'ALTER TABLE ' ||
			quote_ident(real_schema) || '.' || quote_ident(table_name) || ' ADD CONSTRAINT ' ||
			quote_ident('enforce_geotype_' || column_name) ||
			' CHECK (GeometryType(' ||
			quote_ident(column_name) || ')=' ||
			quote_literal(new_type) || ' OR (' ||
			quote_ident(column_name) || ') is null)';
		RAISE DEBUG '%', sql;
		EXECUTE sql;
	END IF;

	RETURN
		real_schema || '.' ||
		table_name || '.' || column_name ||
		' SRID:' || new_srid::text ||
		' TYPE:' || new_type ||
		' DIMS:' || new_dim::text || ' ';
END;
$_$;


--
-- TOC entry 1013 (class 1255 OID 3458686)
-- Name: addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- TOC entry 1012 (class 1255 OID 3458688)
-- Name: addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- TOC entry 297 (class 1255 OID 3458400)
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- TOC entry 1016 (class 1255 OID 3458398)
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- TOC entry 1017 (class 1255 OID 3458607)
-- Name: area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- TOC entry 1020 (class 1255 OID 3458605)
-- Name: area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- TOC entry 1022 (class 1255 OID 3459028)
-- Name: asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- TOC entry 1010 (class 1255 OID 3459030)
-- Name: asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- TOC entry 462 (class 1255 OID 3458654)
-- Name: asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- TOC entry 1014 (class 1255 OID 3458660)
-- Name: asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- TOC entry 463 (class 1255 OID 3458652)
-- Name: asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- TOC entry 658 (class 1255 OID 3458965)
-- Name: asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- TOC entry 657 (class 1255 OID 3458963)
-- Name: asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- TOC entry 464 (class 1255 OID 3458656)
-- Name: ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- TOC entry 465 (class 1255 OID 3458658)
-- Name: ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- TOC entry 660 (class 1255 OID 3458974)
-- Name: askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), 15)$_$;


--
-- TOC entry 659 (class 1255 OID 3458972)
-- Name: askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), $2)$_$;


--
-- TOC entry 1015 (class 1255 OID 3458975)
-- Name: askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, transform($2,4326), $3)$_$;


--
-- TOC entry 663 (class 1255 OID 3458960)
-- Name: assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 662 (class 1255 OID 3458958)
-- Name: assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 661 (class 1255 OID 3458956)
-- Name: assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 713 (class 1255 OID 3459032)
-- Name: astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- TOC entry 1019 (class 1255 OID 3458617)
-- Name: azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- TOC entry 823 (class 1255 OID 3459149)
-- Name: bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- TOC entry 824 (class 1255 OID 3459147)
-- Name: bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- TOC entry 1024 (class 1255 OID 3458871)
-- Name: boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- TOC entry 1026 (class 1255 OID 3458801)
-- Name: box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- TOC entry 1023 (class 1255 OID 3458804)
-- Name: box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- TOC entry 311 (class 1255 OID 3458434)
-- Name: box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- TOC entry 1027 (class 1255 OID 3458799)
-- Name: box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- TOC entry 541 (class 1255 OID 3458802)
-- Name: box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- TOC entry 542 (class 1255 OID 3458800)
-- Name: box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- TOC entry 543 (class 1255 OID 3458803)
-- Name: box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- TOC entry 310 (class 1255 OID 3458432)
-- Name: box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- TOC entry 1025 (class 1255 OID 3458806)
-- Name: box3dtobox(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3dtobox(box3d) RETURNS box
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT box($1)$_$;


--
-- TOC entry 569 (class 1255 OID 3458854)
-- Name: buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- TOC entry 1030 (class 1255 OID 3458859)
-- Name: buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Buffer($1, $2, $3)$_$;


--
-- TOC entry 495 (class 1255 OID 3458699)
-- Name: buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- TOC entry 570 (class 1255 OID 3458812)
-- Name: bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- TOC entry 664 (class 1255 OID 3458942)
-- Name: centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- TOC entry 826 (class 1255 OID 3459158)
-- Name: checkauth(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text) RETURNS integer
    LANGUAGE sql
    AS $_$ SELECT CheckAuth('', $1, $2) $_$;


--
-- TOC entry 825 (class 1255 OID 3459157)
-- Name: checkauth(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text, text) RETURNS integer
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	schema text;
BEGIN
	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	if ( $1 != '' ) THEN
		schema = $1;
	ELSE
		SELECT current_schema() into schema;
	END IF;

	-- TODO: check for an already existing trigger ?

	EXECUTE 'CREATE TRIGGER check_auth BEFORE UPDATE OR DELETE ON ' 
		|| quote_ident(schema) || '.' || quote_ident($2)
		||' FOR EACH ROW EXECUTE PROCEDURE CheckAuthTrigger('
		|| quote_literal($3) || ')';

	RETURN 0;
END;
$_$;


--
-- TOC entry 1018 (class 1255 OID 3459159)
-- Name: checkauthtrigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauthtrigger() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'check_authorization';


--
-- TOC entry 612 (class 1255 OID 3458879)
-- Name: collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- TOC entry 496 (class 1255 OID 3458715)
-- Name: combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- TOC entry 493 (class 1255 OID 3458717)
-- Name: combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- TOC entry 1031 (class 1255 OID 3458721)
-- Name: combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- TOC entry 399 (class 1255 OID 3458574)
-- Name: compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- TOC entry 1032 (class 1255 OID 3458928)
-- Name: contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'contains';


--
-- TOC entry 613 (class 1255 OID 3458860)
-- Name: convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- TOC entry 634 (class 1255 OID 3458922)
-- Name: crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'crosses';


--
-- TOC entry 1029 (class 1255 OID 3458572)
-- Name: datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- TOC entry 614 (class 1255 OID 3458869)
-- Name: difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- TOC entry 967 (class 1255 OID 3458994)
-- Name: dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- TOC entry 972 (class 1255 OID 3459163)
-- Name: disablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;

BEGIN

	--
	-- Drop all triggers applied by CheckAuth()
	--
	FOR rec IN
		SELECT c.relname, t.tgname, t.tgargs FROM pg_trigger t, pg_class c, pg_proc p
		WHERE p.proname = 'checkauthtrigger' and t.tgfoid = p.oid and t.tgrelid = c.oid
	LOOP
		EXECUTE 'DROP TRIGGER ' || quote_ident(rec.tgname) ||
			' ON ' || quote_ident(rec.relname);
	END LOOP;

	--
	-- Drop the authorization_table table
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table' LOOP
		DROP TABLE authorization_table;
	END LOOP;

	--
	-- Drop the authorized_tables view
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables' LOOP
		DROP VIEW authorized_tables;
	END LOOP;

	RETURN 'Long transactions support disabled';
END;
$$;


--
-- TOC entry 635 (class 1255 OID 3458912)
-- Name: disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- TOC entry 431 (class 1255 OID 3458613)
-- Name: distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- TOC entry 400 (class 1255 OID 3458611)
-- Name: distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- TOC entry 401 (class 1255 OID 3458609)
-- Name: distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- TOC entry 373 (class 1255 OID 3458557)
-- Name: dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- TOC entry 531 (class 1255 OID 3458760)
-- Name: dropgeometrycolumn(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('','',$1,$2) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 530 (class 1255 OID 3458759)
-- Name: dropgeometrycolumn(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 525 (class 1255 OID 3458758)
-- Name: dropgeometrycolumn(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	myrec RECORD;
	okay boolean;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE NOTICE 'Invalid schema name - using current_schema()';
			SELECT current_schema() into real_schema;
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT current_schema() into real_schema;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Remove ref from geometry_columns table
	EXECUTE 'delete from geometry_columns where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Remove table column
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) || '.' ||
		quote_ident(table_name) || ' DROP COLUMN ' ||
		quote_ident(column_name);

	RETURN real_schema || '.' || table_name || '.' || column_name ||' effectively removed.';

END;
$_$;


--
-- TOC entry 534 (class 1255 OID 3458763)
-- Name: dropgeometrytable(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('','',$1) $_$;


--
-- TOC entry 533 (class 1255 OID 3458762)
-- Name: dropgeometrytable(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('',$1,$2) $_$;


--
-- TOC entry 529 (class 1255 OID 3458761)
-- Name: dropgeometrytable(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	real_schema name;

BEGIN

	IF ( schema_name = '' ) THEN
		SELECT current_schema() into real_schema;
	ELSE
		real_schema = schema_name;
	END IF;

	-- Remove refs from geometry_columns table
	EXECUTE 'DELETE FROM geometry_columns WHERE ' ||
		'f_table_schema = ' || quote_literal(real_schema) ||
		' AND ' ||
		' f_table_name = ' || quote_literal(table_name);

	-- Remove table
	EXECUTE 'DROP TABLE '
		|| quote_ident(real_schema) || '.' ||
		quote_ident(table_name);

	RETURN
		real_schema || '.' ||
		table_name ||' dropped.';

END;
$_$;


--
-- TOC entry 497 (class 1255 OID 3458709)
-- Name: dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- TOC entry 498 (class 1255 OID 3458711)
-- Name: dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- TOC entry 994 (class 1255 OID 3459161)
-- Name: enablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION enablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	"query" text;
	exists bool;
	rec RECORD;

BEGIN

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists
	THEN
		"query" = 'CREATE TABLE authorization_table (
			toid oid, -- table oid
			rid text, -- row id
			expires timestamp,
			authid text
		)';
		EXECUTE "query";
	END IF;

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists THEN
		"query" = 'CREATE VIEW authorized_tables AS ' ||
			'SELECT ' ||
			'n.nspname as schema, ' ||
			'c.relname as table, trim(' ||
			quote_literal(chr(92) || '000') ||
			' from t.tgargs) as id_column ' ||
			'FROM pg_trigger t, pg_class c, pg_proc p ' ||
			', pg_namespace n ' ||
			'WHERE p.proname = ' || quote_literal('checkauthtrigger') ||
			' AND c.relnamespace = n.oid' ||
			' AND t.tgfoid = p.oid and t.tgrelid = c.oid';
		EXECUTE "query";
	END IF;

	RETURN 'Long transactions support enabled';
END;
$$;


--
-- TOC entry 714 (class 1255 OID 3459018)
-- Name: endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- TOC entry 432 (class 1255 OID 3458640)
-- Name: envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- TOC entry 665 (class 1255 OID 3458950)
-- Name: equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- TOC entry 998 (class 1255 OID 3458727)
-- Name: estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- TOC entry 997 (class 1255 OID 3458725)
-- Name: estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- TOC entry 993 (class 1255 OID 3458634)
-- Name: expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- TOC entry 433 (class 1255 OID 3458636)
-- Name: expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- TOC entry 434 (class 1255 OID 3458638)
-- Name: expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- TOC entry 1000 (class 1255 OID 3458996)
-- Name: exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- TOC entry 374 (class 1255 OID 3458568)
-- Name: factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- TOC entry 517 (class 1255 OID 3458731)
-- Name: find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- TOC entry 1001 (class 1255 OID 3458729)
-- Name: find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- TOC entry 991 (class 1255 OID 3458767)
-- Name: find_srid(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_srid(character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schem text;
	tabl text;
	sr int4;
BEGIN
	IF $1 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - schema is NULL!';
	END IF;
	IF $2 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - table name is NULL!';
	END IF;
	IF $3 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - column name is NULL!';
	END IF;
	schem = $1;
	tabl = $2;
-- if the table contains a . and the schema is empty
-- split the table into a schema and a table
-- otherwise drop through to default behavior
	IF ( schem = '' and tabl LIKE '%.%' ) THEN
	 schem = substr(tabl,1,strpos(tabl,'.')-1);
	 tabl = substr(tabl,length(schem)+2);
	ELSE
	 schem = schem || '%';
	END IF;

	select SRID into sr from geometry_columns where f_table_schema like schem and f_table_name = tabl and f_geometry_column = $3;
	IF NOT FOUND THEN
	   RAISE EXCEPTION 'find_srid() - couldnt find the corresponding SRID - is the geometry registered in the GEOMETRY_COLUMNS table?  Is there an uppercase/lowercase missmatch?';
	END IF;
	return sr;
END;
$_$;


--
-- TOC entry 518 (class 1255 OID 3458750)
-- Name: fix_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION fix_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	mislinked record;
	result text;
	linked integer;
	deleted integer;
	foundschema integer;
BEGIN

	-- Since 7.3 schema support has been added.
	-- Previous postgis versions used to put the database name in
	-- the schema column. This needs to be fixed, so we try to
	-- set the correct schema for each geometry_colums record
	-- looking at table, column, type and srid.
	UPDATE geometry_columns SET f_table_schema = n.nspname
		FROM pg_namespace n, pg_class c, pg_attribute a,
			pg_constraint sridcheck, pg_constraint typecheck
			WHERE ( f_table_schema is NULL
		OR f_table_schema = ''
			OR f_table_schema NOT IN (
					SELECT nspname::varchar
					FROM pg_namespace nn, pg_class cc, pg_attribute aa
					WHERE cc.relnamespace = nn.oid
					AND cc.relname = f_table_name::name
					AND aa.attrelid = cc.oid
					AND aa.attname = f_geometry_column::name))
			AND f_table_name::name = c.relname
			AND c.oid = a.attrelid
			AND c.relnamespace = n.oid
			AND f_geometry_column::name = a.attname

			AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid(% = %)'
			AND sridcheck.consrc ~ textcat(' = ', srid::text)

			AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype(%) = ''%''::text) OR (% IS NULL))'
			AND typecheck.consrc ~ textcat(' = ''', type::text)

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS foundschema = ROW_COUNT;

	-- no linkage to system table needed
	return 'fixed:'||foundschema::text;

END;
$$;


--
-- TOC entry 435 (class 1255 OID 3458619)
-- Name: force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- TOC entry 436 (class 1255 OID 3458623)
-- Name: force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- TOC entry 999 (class 1255 OID 3458625)
-- Name: force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- TOC entry 437 (class 1255 OID 3458621)
-- Name: force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- TOC entry 438 (class 1255 OID 3458627)
-- Name: force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- TOC entry 439 (class 1255 OID 3458629)
-- Name: force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- TOC entry 440 (class 1255 OID 3458644)
-- Name: forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- TOC entry 867 (class 1255 OID 3459206)
-- Name: geography(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geometry) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_geometry';


--
-- TOC entry 841 (class 1255 OID 3459189)
-- Name: geography(geography, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geography, integer, boolean) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_enforce_typmod';


--
-- TOC entry 884 (class 1255 OID 3459236)
-- Name: geography_cmp(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_cmp(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_cmp';


--
-- TOC entry 883 (class 1255 OID 3459235)
-- Name: geography_eq(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_eq(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_eq';


--
-- TOC entry 882 (class 1255 OID 3459234)
-- Name: geography_ge(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_ge(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_ge';


--
-- TOC entry 870 (class 1255 OID 3459211)
-- Name: geography_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_compress';


--
-- TOC entry 869 (class 1255 OID 3459210)
-- Name: geography_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_consistent';


--
-- TOC entry 875 (class 1255 OID 3459216)
-- Name: geography_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_decompress';


--
-- TOC entry 877 (class 1255 OID 3459218)
-- Name: geography_gist_join_selectivity(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_join_selectivity';


--
-- TOC entry 871 (class 1255 OID 3459212)
-- Name: geography_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_penalty';


--
-- TOC entry 872 (class 1255 OID 3459213)
-- Name: geography_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_picksplit';


--
-- TOC entry 874 (class 1255 OID 3459215)
-- Name: geography_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_same';


--
-- TOC entry 876 (class 1255 OID 3459217)
-- Name: geography_gist_selectivity(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_selectivity(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_selectivity';


--
-- TOC entry 873 (class 1255 OID 3459214)
-- Name: geography_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_union';


--
-- TOC entry 881 (class 1255 OID 3459233)
-- Name: geography_gt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_gt';


--
-- TOC entry 880 (class 1255 OID 3459232)
-- Name: geography_le(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_le(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_le';


--
-- TOC entry 879 (class 1255 OID 3459231)
-- Name: geography_lt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_lt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_lt';


--
-- TOC entry 878 (class 1255 OID 3459219)
-- Name: geography_overlaps(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_overlaps(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_overlaps';


--
-- TOC entry 864 (class 1255 OID 3459198)
-- Name: geography_typmod_dims(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_dims(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_dims';


--
-- TOC entry 865 (class 1255 OID 3459199)
-- Name: geography_typmod_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_srid(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_srid';


--
-- TOC entry 866 (class 1255 OID 3459200)
-- Name: geography_typmod_type(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_type(integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_type';


--
-- TOC entry 1005 (class 1255 OID 3459085)
-- Name: geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1003 (class 1255 OID 3459083)
-- Name: geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 794 (class 1255 OID 3459136)
-- Name: geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1004 (class 1255 OID 3459134)
-- Name: geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 312 (class 1255 OID 3458435)
-- Name: geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- TOC entry 571 (class 1255 OID 3458807)
-- Name: geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- TOC entry 996 (class 1255 OID 3458808)
-- Name: geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- TOC entry 572 (class 1255 OID 3458809)
-- Name: geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- TOC entry 573 (class 1255 OID 3458810)
-- Name: geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- TOC entry 574 (class 1255 OID 3458811)
-- Name: geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- TOC entry 868 (class 1255 OID 3459208)
-- Name: geometry(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(geography) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_from_geography';


--
-- TOC entry 375 (class 1255 OID 3458509)
-- Name: geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- TOC entry 1002 (class 1255 OID 3458510)
-- Name: geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- TOC entry 345 (class 1255 OID 3458470)
-- Name: geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- TOC entry 376 (class 1255 OID 3458511)
-- Name: geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- TOC entry 377 (class 1255 OID 3458512)
-- Name: geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- TOC entry 346 (class 1255 OID 3458469)
-- Name: geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- TOC entry 1006 (class 1255 OID 3458468)
-- Name: geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- TOC entry 339 (class 1255 OID 3458502)
-- Name: geometry_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- TOC entry 338 (class 1255 OID 3458501)
-- Name: geometry_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- TOC entry 347 (class 1255 OID 3458467)
-- Name: geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- TOC entry 348 (class 1255 OID 3458466)
-- Name: geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- TOC entry 378 (class 1255 OID 3458507)
-- Name: geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- TOC entry 349 (class 1255 OID 3458465)
-- Name: geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- TOC entry 379 (class 1255 OID 3458505)
-- Name: geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- TOC entry 1007 (class 1255 OID 3458506)
-- Name: geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- TOC entry 380 (class 1255 OID 3458513)
-- Name: geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- TOC entry 381 (class 1255 OID 3458503)
-- Name: geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- TOC entry 382 (class 1255 OID 3458504)
-- Name: geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- TOC entry 383 (class 1255 OID 3458508)
-- Name: geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- TOC entry 350 (class 1255 OID 3458500)
-- Name: geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- TOC entry 368 (class 1255 OID 3458514)
-- Name: geometry_samebox(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_samebox(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- TOC entry 715 (class 1255 OID 3459034)
-- Name: geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 716 (class 1255 OID 3459036)
-- Name: geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 691 (class 1255 OID 3458992)
-- Name: geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- TOC entry 692 (class 1255 OID 3459004)
-- Name: geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getTYPE';


--
-- TOC entry 466 (class 1255 OID 3458662)
-- Name: geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- TOC entry 467 (class 1255 OID 3458664)
-- Name: geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- TOC entry 1009 (class 1255 OID 3459038)
-- Name: geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1)$_$;


--
-- TOC entry 717 (class 1255 OID 3459040)
-- Name: geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1, $2)$_$;


--
-- TOC entry 769 (class 1255 OID 3459087)
-- Name: geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- TOC entry 770 (class 1255 OID 3459089)
-- Name: geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT setSRID(GeomFromWKB($1), $2)$_$;


--
-- TOC entry 615 (class 1255 OID 3458877)
-- Name: geomunion(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomunion(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- TOC entry 524 (class 1255 OID 3458768)
-- Name: get_proj4_from_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION get_proj4_from_srid(integer) RETURNS text
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
BEGIN
	RETURN proj4text::text FROM spatial_ref_sys WHERE srid= $1;
END;
$_$;


--
-- TOC entry 1008 (class 1255 OID 3458560)
-- Name: getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- TOC entry 384 (class 1255 OID 3458559)
-- Name: getsrid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsrid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- TOC entry 848 (class 1255 OID 3459160)
-- Name: gettransactionid(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettransactionid() RETURNS xid
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'getTransactionID';


--
-- TOC entry 385 (class 1255 OID 3458562)
-- Name: hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- TOC entry 386 (class 1255 OID 3458566)
-- Name: height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- TOC entry 693 (class 1255 OID 3459002)
-- Name: interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- TOC entry 575 (class 1255 OID 3458852)
-- Name: intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersection';


--
-- TOC entry 636 (class 1255 OID 3458919)
-- Name: intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersects';


--
-- TOC entry 969 (class 1255 OID 3459359)
-- Name: is_nominal(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION is_nominal(attcode character varying) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    AS $_$
	SELECT EXISTS (
	SELECT
	1
	FROM
	dlm_att
	WHERE
	code = $1
	AND unit = 'nominal'
	)
$_$;


--
-- TOC entry 3545 (class 0 OID 0)
-- Dependencies: 969
-- Name: FUNCTION is_nominal(attcode character varying); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION is_nominal(attcode character varying) IS 'Returns true if the objatt <objart, attcode> is nominal, else false.';


--
-- TOC entry 718 (class 1255 OID 3459020)
-- Name: isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- TOC entry 719 (class 1255 OID 3459022)
-- Name: isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- TOC entry 970 (class 1255 OID 3458944)
-- Name: isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- TOC entry 666 (class 1255 OID 3458948)
-- Name: issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- TOC entry 667 (class 1255 OID 3458940)
-- Name: isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- TOC entry 975 (class 1255 OID 3458591)
-- Name: length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- TOC entry 402 (class 1255 OID 3458589)
-- Name: length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- TOC entry 403 (class 1255 OID 3458597)
-- Name: length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- TOC entry 404 (class 1255 OID 3458587)
-- Name: length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- TOC entry 405 (class 1255 OID 3458593)
-- Name: length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- TOC entry 976 (class 1255 OID 3458595)
-- Name: length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- TOC entry 978 (class 1255 OID 3458841)
-- Name: line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- TOC entry 576 (class 1255 OID 3458845)
-- Name: line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- TOC entry 577 (class 1255 OID 3458843)
-- Name: line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- TOC entry 983 (class 1255 OID 3458682)
-- Name: linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- TOC entry 980 (class 1255 OID 3459046)
-- Name: linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'LINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 720 (class 1255 OID 3459048)
-- Name: linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 772 (class 1255 OID 3459097)
-- Name: linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 771 (class 1255 OID 3459095)
-- Name: linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 499 (class 1255 OID 3458704)
-- Name: linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- TOC entry 387 (class 1255 OID 3459050)
-- Name: linestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1)$_$;


--
-- TOC entry 743 (class 1255 OID 3459051)
-- Name: linestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1, $2)$_$;


--
-- TOC entry 774 (class 1255 OID 3459101)
-- Name: linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 773 (class 1255 OID 3459099)
-- Name: linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 578 (class 1255 OID 3458849)
-- Name: locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- TOC entry 579 (class 1255 OID 3458847)
-- Name: locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- TOC entry 827 (class 1255 OID 3459154)
-- Name: lockrow(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, now()::timestamp+'1:00'); $_$;


--
-- TOC entry 828 (class 1255 OID 3459153)
-- Name: lockrow(text, text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow($1, $2, $3, $4, now()::timestamp+'1:00'); $_$;


--
-- TOC entry 829 (class 1255 OID 3459155)
-- Name: lockrow(text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, $4); $_$;


--
-- TOC entry 1034 (class 1255 OID 3459152)
-- Name: lockrow(text, text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	myschema alias for $1;
	mytable alias for $2;
	myrid   alias for $3;
	authid alias for $4;
	expires alias for $5;
	ret int;
	mytoid oid;
	myrec RECORD;
	
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table WHERE expires < now()'; 

	SELECT c.oid INTO mytoid FROM pg_class c, pg_namespace n
		WHERE c.relname = mytable
		AND c.relnamespace = n.oid
		AND n.nspname = myschema;

	-- RAISE NOTICE 'toid: %', mytoid;

	FOR myrec IN SELECT * FROM authorization_table WHERE 
		toid = mytoid AND rid = myrid
	LOOP
		IF myrec.authid != authid THEN
			RETURN 0;
		ELSE
			RETURN 1;
		END IF;
	END LOOP;

	EXECUTE 'INSERT INTO authorization_table VALUES ('||
		quote_literal(mytoid::text)||','||quote_literal(myrid)||
		','||quote_literal(expires::text)||
		','||quote_literal(authid) ||')';

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- TOC entry 846 (class 1255 OID 3459162)
-- Name: longtransactionsenabled(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION longtransactionsenabled() RETURNS boolean
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;
BEGIN
	FOR rec IN SELECT oid FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		return 't';
	END LOOP;
	return 'f';
END;
$$;


--
-- TOC entry 1035 (class 1255 OID 3458528)
-- Name: lwgeom_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_compress';


--
-- TOC entry 388 (class 1255 OID 3458527)
-- Name: lwgeom_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_consistent';


--
-- TOC entry 389 (class 1255 OID 3458533)
-- Name: lwgeom_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_decompress';


--
-- TOC entry 390 (class 1255 OID 3458529)
-- Name: lwgeom_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_penalty';


--
-- TOC entry 391 (class 1255 OID 3458530)
-- Name: lwgeom_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_picksplit';


--
-- TOC entry 392 (class 1255 OID 3458532)
-- Name: lwgeom_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_same';


--
-- TOC entry 1036 (class 1255 OID 3458531)
-- Name: lwgeom_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_union';


--
-- TOC entry 721 (class 1255 OID 3459014)
-- Name: m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- TOC entry 468 (class 1255 OID 3458675)
-- Name: makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- TOC entry 469 (class 1255 OID 3458677)
-- Name: makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- TOC entry 470 (class 1255 OID 3458684)
-- Name: makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- TOC entry 471 (class 1255 OID 3458679)
-- Name: makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- TOC entry 1038 (class 1255 OID 3458667)
-- Name: makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 472 (class 1255 OID 3458669)
-- Name: makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 473 (class 1255 OID 3458671)
-- Name: makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 474 (class 1255 OID 3458673)
-- Name: makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- TOC entry 1039 (class 1255 OID 3458697)
-- Name: makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- TOC entry 500 (class 1255 OID 3458695)
-- Name: makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- TOC entry 795 (class 1255 OID 3459138)
-- Name: max_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION max_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- TOC entry 406 (class 1255 OID 3458579)
-- Name: mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- TOC entry 744 (class 1255 OID 3459062)
-- Name: mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTILINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1041 (class 1255 OID 3459060)
-- Name: mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 797 (class 1255 OID 3459124)
-- Name: mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 796 (class 1255 OID 3459122)
-- Name: mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 746 (class 1255 OID 3459070)
-- Name: mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 745 (class 1255 OID 3459068)
-- Name: mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1,$2)) = 'MULTIPOINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 798 (class 1255 OID 3459113)
-- Name: mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1033 (class 1255 OID 3459111)
-- Name: mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 748 (class 1255 OID 3459077)
-- Name: mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 747 (class 1255 OID 3459075)
-- Name: mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 799 (class 1255 OID 3459128)
-- Name: mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1037 (class 1255 OID 3459126)
-- Name: mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 1040 (class 1255 OID 3458632)
-- Name: multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- TOC entry 800 (class 1255 OID 3459120)
-- Name: multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 792 (class 1255 OID 3459119)
-- Name: multilinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 749 (class 1255 OID 3459064)
-- Name: multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- TOC entry 750 (class 1255 OID 3459066)
-- Name: multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- TOC entry 741 (class 1255 OID 3459073)
-- Name: multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- TOC entry 1042 (class 1255 OID 3459072)
-- Name: multipointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1, $2)$_$;


--
-- TOC entry 802 (class 1255 OID 3459117)
-- Name: multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 801 (class 1255 OID 3459115)
-- Name: multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 1043 (class 1255 OID 3459132)
-- Name: multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 803 (class 1255 OID 3459130)
-- Name: multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 752 (class 1255 OID 3459081)
-- Name: multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- TOC entry 751 (class 1255 OID 3459079)
-- Name: multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- TOC entry 475 (class 1255 OID 3458650)
-- Name: ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- TOC entry 441 (class 1255 OID 3458646)
-- Name: noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- TOC entry 407 (class 1255 OID 3458583)
-- Name: npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- TOC entry 408 (class 1255 OID 3458585)
-- Name: nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- TOC entry 1045 (class 1255 OID 3458990)
-- Name: numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- TOC entry 694 (class 1255 OID 3459000)
-- Name: numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- TOC entry 695 (class 1255 OID 3458998)
-- Name: numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- TOC entry 696 (class 1255 OID 3458988)
-- Name: numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- TOC entry 668 (class 1255 OID 3458937)
-- Name: overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "overlaps"(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- TOC entry 1046 (class 1255 OID 3459361)
-- Name: pc_chartoint(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pc_chartoint(chartoconvert character varying) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT CASE WHEN trim($1) SIMILAR TO '[0-9]+' 
        THEN CAST(trim($1) AS integer)
       WHEN trim($1) SIMILAR TO '-[0-9]+'
        THEN CAST(trim($1) AS integer) 
    ELSE NULL END;

$_$;


--
-- TOC entry 1054 (class 1255 OID 3459362)
-- Name: pc_getabschnittfromwz03(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pc_getabschnittfromwz03(wz2003 character varying) RETURNS character
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT CASE WHEN trim($1) SIMILAR TO '0[12][0-9\\.]*'
        THEN 'A'
       WHEN trim($1) SIMILAR TO '05[0-9\\.]*'
        THEN 'B'
       WHEN trim($1) SIMILAR TO '1[01234][0-9\\.]*'
        THEN 'C'
       WHEN trim($1) SIMILAR TO '1[56789][0-9\\.]*|2[0-9][0-9\\.]*|3[0-7][0-9\\.]*'
        THEN 'D'
       WHEN trim($1) SIMILAR TO '4[01][0-9\\.]*'
        THEN 'E'
       WHEN trim($1) SIMILAR TO '45[0-9\\.]*'
        THEN 'F'
       WHEN trim($1) SIMILAR TO '5[012][0-9\\.]*'
        THEN 'G'
       WHEN trim($1) SIMILAR TO '55[0-9\\.]*'
        THEN 'H'
       WHEN trim($1) SIMILAR TO '6[0-4][0-9\\.]*'
        THEN 'I'
       WHEN trim($1) SIMILAR TO '6[567][0-9\\.]*'
        THEN 'J'
       WHEN trim($1) SIMILAR TO '7[0-4][0-9\\.]*'
        THEN 'K'
       WHEN trim($1) SIMILAR TO '75[0-9\\.]*'
        THEN 'L'
       WHEN trim($1) SIMILAR TO '80[0-9\\.]*'
        THEN 'M'
       WHEN trim($1) SIMILAR TO '85[0-9\\.]*'
        THEN 'N'
       WHEN trim($1) SIMILAR TO '9[0-3][0-9\\.]*'
        THEN 'O'
       WHEN trim($1) SIMILAR TO '95[0-9\\.]*'
        THEN 'P'
       WHEN trim($1) SIMILAR TO '99[0-9\\.]*'
        THEN 'Q'
       WHEN trim($1) SIMILAR TO '[A-Z]+'
        THEN trim($1)
    ELSE NULL END;

$_$;


--
-- TOC entry 409 (class 1255 OID 3458603)
-- Name: perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- TOC entry 410 (class 1255 OID 3458601)
-- Name: perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- TOC entry 1055 (class 1255 OID 3458599)
-- Name: perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- TOC entry 607 (class 1255 OID 3458891)
-- Name: pgis_geometry_accum_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_finalfn(pgis_abs) RETURNS geometry[]
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_finalfn';


--
-- TOC entry 606 (class 1255 OID 3458890)
-- Name: pgis_geometry_accum_transfn(pgis_abs, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) RETURNS pgis_abs
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_transfn';


--
-- TOC entry 609 (class 1255 OID 3458893)
-- Name: pgis_geometry_collect_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_collect_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_collect_finalfn';


--
-- TOC entry 611 (class 1255 OID 3458895)
-- Name: pgis_geometry_makeline_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_makeline_finalfn';


--
-- TOC entry 610 (class 1255 OID 3458894)
-- Name: pgis_geometry_polygonize_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_polygonize_finalfn';


--
-- TOC entry 608 (class 1255 OID 3458892)
-- Name: pgis_geometry_union_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_union_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_union_finalfn';


--
-- TOC entry 442 (class 1255 OID 3458615)
-- Name: point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- TOC entry 722 (class 1255 OID 3459042)
-- Name: pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 723 (class 1255 OID 3459044)
-- Name: pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 776 (class 1255 OID 3459093)
-- Name: pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 775 (class 1255 OID 3459091)
-- Name: pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 697 (class 1255 OID 3459006)
-- Name: pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- TOC entry 669 (class 1255 OID 3458946)
-- Name: pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- TOC entry 1056 (class 1255 OID 3459052)
-- Name: polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 753 (class 1255 OID 3459054)
-- Name: polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 778 (class 1255 OID 3459105)
-- Name: polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 777 (class 1255 OID 3459103)
-- Name: polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 755 (class 1255 OID 3459058)
-- Name: polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1)$_$;


--
-- TOC entry 754 (class 1255 OID 3459056)
-- Name: polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- TOC entry 1057 (class 1255 OID 3459109)
-- Name: polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 779 (class 1255 OID 3459107)
-- Name: polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 501 (class 1255 OID 3458701)
-- Name: polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- TOC entry 514 (class 1255 OID 3458751)
-- Name: populate_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted    integer;
	oldcount    integer;
	probed      integer;
	stale       integer;
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;

BEGIN
	SELECT count(*) INTO oldcount FROM geometry_columns;
	inserted := 0;

	EXECUTE 'TRUNCATE geometry_columns';

	-- Count the number of geometry columns in all tables and views
	SELECT count(DISTINCT c.oid) INTO probed
	FROM pg_class c,
		 pg_attribute a,
		 pg_type t,
		 pg_namespace n
	WHERE (c.relkind = 'r' OR c.relkind = 'v')
	AND t.typname = 'geometry'
	AND a.attisdropped = false
	AND a.atttypid = t.oid
	AND a.attrelid = c.oid
	AND c.relnamespace = n.oid
	AND n.nspname NOT ILIKE 'pg_temp%';

	-- Iterate through all non-dropped geometry columns
	RAISE DEBUG 'Processing Tables.....';

	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	-- Add views to geometry columns table
	RAISE DEBUG 'Processing Views.....';
	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	IF oldcount > inserted THEN
	stale = oldcount-inserted;
	ELSE
	stale = 0;
	END IF;

	RETURN 'probed:' ||probed|| ' inserted:'||inserted|| ' conflicts:'||probed-inserted|| ' deleted:'||stale;
END

$$;


--
-- TOC entry 515 (class 1255 OID 3458752)
-- Name: populate_geometry_columns(oid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns(tbl_oid oid) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;
	inserted    integer;

BEGIN
	inserted := 0;

	-- Iterate through all geometry columns in this table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP

	RAISE DEBUG 'Processing table %.%.%', gcs.nspname, gcs.relname, gcs.attname;

	DELETE FROM geometry_columns
	  WHERE f_table_schema = quote_ident(gcs.nspname)
	  AND f_table_name = quote_ident(gcs.relname)
	  AND f_geometry_column = quote_ident(gcs.attname);

	gc_is_valid := true;

	-- Try to find srid check from system tables (pg_constraint)
	gsrid :=
		(SELECT replace(replace(split_part(s.consrc, ' = ', 2), ')', ''), '(', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%srid(% = %');
	IF (gsrid IS NULL) THEN
		-- Try to find srid from the geometry itself
		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		-- Try to apply srid check to column
		IF (gsrid IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_srid_' || gcs.attname) || '
						 CHECK (srid(' || quote_ident(gcs.attname) || ') = ' || gsrid || ')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (srid(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gsrid;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find ndims check from system tables (pg_constraint)
	gndims :=
		(SELECT replace(split_part(s.consrc, ' = ', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%ndims(% = %');
	IF (gndims IS NULL) THEN
		-- Try to find ndims from the geometry itself
		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		-- Try to apply ndims check to column
		IF (gndims IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_dims_' || gcs.attname) || '
						 CHECK (ndims(' || quote_ident(gcs.attname) || ') = '||gndims||')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (ndims(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gndims;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find geotype check from system tables (pg_constraint)
	gtype :=
		(SELECT replace(split_part(s.consrc, '''', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%geometrytype(% = %');
	IF (gtype IS NULL) THEN
		-- Try to find geotype from the geometry itself
		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;
		--IF (gtype IS NULL) THEN
		--    gtype := 'GEOMETRY';
		--END IF;

		-- Try to apply geometrytype check to column
		IF (gtype IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				ADD CONSTRAINT ' || quote_ident('enforce_geotype_' || gcs.attname) || '
				CHECK ((geometrytype(' || quote_ident(gcs.attname) || ') = ' || quote_literal(gtype) || ') OR (' || quote_ident(gcs.attname) || ' IS NULL))';
			EXCEPTION
				WHEN check_violation THEN
					-- No geometry check can be applied. This column contains a number of geometry types.
					RAISE WARNING 'Could not add geometry type check (%) to table column: %.%.%', gtype, quote_ident(gcs.nspname),quote_ident(gcs.relname),quote_ident(gcs.attname);
			END;
		END IF;
	END IF;

	IF (gsrid IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gndims IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the number of dimensions', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gtype IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the geometry type', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSE
		-- Only insert into geometry_columns if table constraints could be applied.
		IF (gc_is_valid) THEN
			INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type)
			VALUES ('', gcs.nspname, gcs.relname, gcs.attname, gndims, gsrid, gtype);
			inserted := inserted + 1;
		END IF;
	END IF;
	END LOOP;

	-- Add views to geometry columns table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP
		RAISE DEBUG 'Processing view %.%.%', gcs.nspname, gcs.relname, gcs.attname;

		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;

		IF (gndims IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine ndims', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gsrid IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gtype IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine gtype', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSE
			query := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type) ' ||
					 'VALUES ('''', ' || quote_literal(gcs.nspname) || ',' || quote_literal(gcs.relname) || ',' || quote_literal(gcs.attname) || ',' || gndims || ',' || gsrid || ',' || quote_literal(gtype) || ')';
			EXECUTE query;
			inserted := inserted + 1;
		END IF;
	END LOOP;

	RETURN inserted;
END

$$;


--
-- TOC entry 369 (class 1255 OID 3458556)
-- Name: postgis_addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- TOC entry 459 (class 1255 OID 3458666)
-- Name: postgis_cache_bbox(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_cache_bbox() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'cache_bbox';


--
-- TOC entry 370 (class 1255 OID 3458558)
-- Name: postgis_dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- TOC entry 1079 (class 1255 OID 3458782)
-- Name: postgis_full_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_full_version() RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
	libver text;
	projver text;
	geosver text;
	libxmlver text;
	usestats bool;
	dbproc text;
	relproc text;
	fullver text;
BEGIN
	SELECT postgis_lib_version() INTO libver;
	SELECT postgis_proj_version() INTO projver;
	SELECT postgis_geos_version() INTO geosver;
	SELECT postgis_libxml_version() INTO libxmlver;
	SELECT postgis_uses_stats() INTO usestats;
	SELECT postgis_scripts_installed() INTO dbproc;
	SELECT postgis_scripts_released() INTO relproc;

	fullver = 'POSTGIS="' || libver || '"';

	IF  geosver IS NOT NULL THEN
		fullver = fullver || ' GEOS="' || geosver || '"';
	END IF;

	IF  projver IS NOT NULL THEN
		fullver = fullver || ' PROJ="' || projver || '"';
	END IF;

	IF  libxmlver IS NOT NULL THEN
		fullver = fullver || ' LIBXML="' || libxmlver || '"';
	END IF;

	IF usestats THEN
		fullver = fullver || ' USE_STATS';
	END IF;

	-- fullver = fullver || ' DBPROC="' || dbproc || '"';
	-- fullver = fullver || ' RELPROC="' || relproc || '"';

	IF dbproc != relproc THEN
		fullver = fullver || ' (procs from ' || dbproc || ' need upgrade)';
	END IF;

	RETURN fullver;
END
$$;


--
-- TOC entry 546 (class 1255 OID 3458778)
-- Name: postgis_geos_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_geos_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_geos_version';


--
-- TOC entry 371 (class 1255 OID 3458561)
-- Name: postgis_getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- TOC entry 1080 (class 1255 OID 3458485)
-- Name: postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- TOC entry 351 (class 1255 OID 3458484)
-- Name: postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- TOC entry 372 (class 1255 OID 3458563)
-- Name: postgis_hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- TOC entry 540 (class 1255 OID 3458781)
-- Name: postgis_lib_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_build_date() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_build_date';


--
-- TOC entry 545 (class 1255 OID 3458775)
-- Name: postgis_lib_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_version';


--
-- TOC entry 536 (class 1255 OID 3458779)
-- Name: postgis_libxml_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_libxml_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_libxml_version';


--
-- TOC entry 430 (class 1255 OID 3458647)
-- Name: postgis_noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- TOC entry 548 (class 1255 OID 3458773)
-- Name: postgis_proj_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_proj_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_proj_version';


--
-- TOC entry 544 (class 1255 OID 3458780)
-- Name: postgis_scripts_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_build_date() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '2010-05-25 10:30:04'::text AS version$$;


--
-- TOC entry 547 (class 1255 OID 3458774)
-- Name: postgis_scripts_installed(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_installed() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '1.5 r5385'::text AS version$$;


--
-- TOC entry 550 (class 1255 OID 3458776)
-- Name: postgis_scripts_released(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_released() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_scripts_released';


--
-- TOC entry 523 (class 1255 OID 3458769)
-- Name: postgis_transform_geometry(geometry, text, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_transform_geometry(geometry, text, text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform_geom';


--
-- TOC entry 551 (class 1255 OID 3458777)
-- Name: postgis_uses_stats(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_uses_stats() RETURNS boolean
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_uses_stats';


--
-- TOC entry 552 (class 1255 OID 3458772)
-- Name: postgis_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_version';


--
-- TOC entry 1077 (class 1255 OID 3458754)
-- Name: probe_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION probe_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted integer;
	oldcount integer;
	probed integer;
	stale integer;
BEGIN

	SELECT count(*) INTO oldcount FROM geometry_columns;

	SELECT count(*) INTO probed
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck

		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'
		;

	INSERT INTO geometry_columns SELECT
		''::varchar as f_table_catalogue,
		n.nspname::varchar as f_table_schema,
		c.relname::varchar as f_table_name,
		a.attname::varchar as f_geometry_column,
		2 as coord_dimension,
		trim(both  ' =)' from
			replace(replace(split_part(
				sridcheck.consrc, ' = ', 2), ')', ''), '(', ''))::integer AS srid,
		trim(both ' =)''' from substr(typecheck.consrc,
			strpos(typecheck.consrc, '='),
			strpos(typecheck.consrc, '::')-
			strpos(typecheck.consrc, '=')
			))::varchar as type
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck
		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(st_srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS inserted = ROW_COUNT;

	IF oldcount > probed THEN
		stale = oldcount-probed;
	ELSE
		stale = 0;
	END IF;

	RETURN 'probed:'||probed::text||
		' inserted:'||inserted::text||
		' conflicts:'||(probed-inserted)::text||
		' stale:'||stale::text;
END

$$;


--
-- TOC entry 946 (class 1255 OID 3459364)
-- Name: pwvm_createLogbooksFromKid(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_createLogbooksFromKid"() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    lb RECORD;
    trip RECORD;
    geom geometry;
BEGIN

    DELETE FROM pwvm_logbook_trip;
    DELETE FROM pwvm_logbook;

    FOR lb IN
        SELECT kid_fahrzeug.h01, f03::integer, kid_fahrzeug.fahrzeugid, f02c, f02a, kid_fahrt.f02_geom,
        (CASE WHEN kid_fahrzeug.h01='P' THEN null ELSE "pwvm_Theadcountclass".id END) AS headcountclass,
        kid_fahrzeug.k01::integer
        FROM kid_fahrzeug
        JOIN kid_fahrt ON (kid_fahrt.fahrzeugid = kid_fahrzeug.fahrzeugid)
        LEFT JOIN "pwvm_Theadcountclass"
        ON (kid_fahrzeug.h05 >= "pwvm_Theadcountclass".min AND kid_fahrzeug.h05 <= "pwvm_Theadcountclass".max)
        WHERE kid_fahrt.fahrtid = 1
    LOOP

        -- Now "lb" has one record from the query above


	INSERT INTO pwvm_logbook 
	(id,
	source_type, 
	"kid_vehicleId", 
	source_plz, 
	business_wz,
	business_headcountclass, 
	source_kgs,
	the_geom,
	vehicletype)
	VALUES (lb.fahrzeugid, lb.f03, lb.fahrzeugid, lb.f02c, lb.h01, lb.headcountclass, lb.f02a, lb.f02_geom, lb.k01);

  -- logbookId = fahrzeugid absichtlich

	geom = lb.f02_geom;

	FOR trip IN
            SELECT fahrtid, f09::integer, f08c, f08a, f07a::integer, f14::double precision, f08_geom, f04, f10a
            FROM kid_fahrt
            WHERE fahrzeugid = lb.fahrzeugid
            ORDER BY fahrtid ASC
	LOOP

            INSERT INTO pwvm_logbook_trip ("logbookId", "tripId", dest_type, dest_plz, dest_kgs, purpose, distance_empirical, the_geom, start_time, stop_time)
	    VALUES (
	    lb.fahrzeugid,
	    trip.fahrtid,
	    trip.f09,
	    trip.f08c,
	    trip.f08a,
	    trip.f07a,
	    trip.f14,
	    trip.f08_geom,
	    (CASE WHEN trip.f04='-1:-1' OR trip.f04='-9:-9' THEN null ELSE CAST(trip.f04 AS TIME WITHOUT TIME ZONE) END),
	    (CASE WHEN trip.f10a='-1:-1' OR trip.f10a='-9:-9' THEN null ELSE CAST(trip.f10a AS TIME WITHOUT TIME ZONE) END)
	    );

	    IF lb.f02_geom IS NOT NULL AND trip.f08_geom IS NOT NULL
	    THEN
		UPDATE pwvm_logbook_trip SET z_source =  ST_distance(lb.f02_geom, trip.f08_geom)
		WHERE "logbookId" = lb.fahrzeugid AND "tripId" = trip.fahrtid;
	    END IF;

	    IF geom IS NOT NULL AND trip.f08_geom IS NOT NULL
	    THEN
		UPDATE pwvm_logbook_trip SET distance =  ST_distance(geom, trip.f08_geom)
		WHERE "logbookId" = lb.fahrzeugid AND "tripId" = trip.fahrtid;
	    END IF;

	    geom = trip.f08_geom;

        END LOOP;

    -- Filialen auflösen

    -- Wenn mehrere (unterschiedliche) Ziele als Homebusiness bezeichnet wurden, dann ist das Hauptbusiness folgender Punkt:
    -- nach Prioritaet:
    -- 1. Jene Koordinate mit Bezeichnung "Eigener Betrieb", die am haeufigsten im Fahrtenbuch vorkommt und auch jedesmal als "Eigener Betrieb" bezeichnet ist
    -- 2. Die erste Koordinate des Fahrtenbuchs mit Bezeichung "Eigener Betrieb"

     
    UPDATE pwvm_logbook
    SET source_type = 9 -- branch office
    WHERE id = lb.fahrzeugid
    AND source_type = 4 -- home business
    AND the_geom != (
    SELECT the_geom FROM (
    SELECT count(*), type, the_geom FROM (
SELECT the_geom, source_type AS type FROM pwvm_logbook WHERE id = lb.fahrzeugid
UNION
SELECT the_geom, dest_type FROM pwvm_logbook_trip WHERE "logbookId" = lb.fahrzeugid
) waypointlist
WHERE type = 4 -- home business
GROUP BY the_geom, type
ORDER BY count DESC
    ) hb
    LIMIT 1
    ) ;
    
    
    UPDATE pwvm_logbook_trip
    SET dest_type = 9 -- Filiale
    WHERE "logbookId" = lb.fahrzeugid
    AND dest_type = 4 -- home business
    AND the_geom != (
    SELECT the_geom FROM (
    SELECT count(*), type, the_geom FROM (
SELECT the_geom, source_type AS type FROM pwvm_logbook WHERE id = lb.fahrzeugid
UNION
SELECT the_geom, dest_type FROM pwvm_logbook_trip WHERE "logbookId" = lb.fahrzeugid
) waypointlist
WHERE type = 4 -- home business
GROUP BY the_geom, type
ORDER BY count DESC
) hb
LIMIT 1
    );

    -- END Filialen auflösen
    
        
    END LOOP;


    UPDATE pwvm_logbook_trip t
    SET z_home =
    CASE
     WHEN t.the_geom IS NOT NULL AND (SELECT the_geom FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=t."logbookId" AND pwvm_logbook_trip.dest_type = 4 LIMIT 1) IS NOT NULL
     THEN ST_distance((SELECT the_geom FROM pwvm_logbook_trip current_trip WHERE current_trip."logbookId"=t."logbookId" AND current_trip.dest_type = 4 LIMIT 1), t.the_geom)
     ELSE CASE WHEN t.the_geom IS NOT NULL AND (SELECT the_geom FROM pwvm_logbook WHERE id=t."logbookId") IS NOT NULL AND (SELECT source_type FROM pwvm_logbook WHERE id=t."logbookId") = 4 THEN ST_distance((SELECT the_geom FROM pwvm_logbook WHERE id=t."logbookId"), t.the_geom) END
    END;
    
    
  
    -- nur PWV
    DELETE FROM pwvm_logbook_trip WHERE "pwvm_getNumberOfPwvtrips"("logbookId") <= 0;

    -- Alle Fahrten raus, fuer die keine Luftliniendistanz berechnet wurde
    DELETE FROM pwvm_logbook_trip WHERE "logbookId" IN (SELECT "logbookId" FROM pwvm_logbook_trip WHERE distance IS NULL);
    
    -- Alle Fahrtenbuecher mit Mehrfahrtenfahrten raus, da diese Fahrten nicht gueltig sind.
    DELETE FROM pwvm_logbook_trip WHERE "logbookId" IN (SELECT fahrzeugid FROM kid_fahrt WHERE f16 = '2');
    
    -- Fahrten mit extremen Luftlinien-Distanzen raus
--    DELETE FROM pwvm_logbook_trip WHERE "logbookId" IN (SELECT "logbookId" FROM pwvm_logbook_trip WHERE distance > 1000000);

    -- aufraeumen (sicherstellen, dass nur Logbooks mit mindestens einer Fahrt gespeichert sind)
    DELETE FROM pwvm_logbook WHERE id NOT IN (SELECT "logbookId" FROM pwvm_logbook_trip);

    RETURN 1;
END;
$$;


--
-- TOC entry 947 (class 1255 OID 3459366)
-- Name: pwvm_get2stellerfromwz03(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pwvm_get2stellerfromwz03(wz2003 character varying) RETURNS character
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT CASE WHEN trim($1) SIMILAR TO '[0-9][0-9]'
        THEN trim($1)
       WHEN trim($1) SIMILAR TO '[0-9][0-9][0-9\\.]*'
        THEN substring(trim($1) for 2)
       WHEN trim($1) SIMILAR TO '[A-Z]+'
        THEN NULL
    ELSE NULL END;

$_$;


--
-- TOC entry 961 (class 1255 OID 3459367)
-- Name: pwvm_getAvgDistance(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getAvgDistance"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT AVG(distance_empirical) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1$_$;


--
-- TOC entry 3546 (class 0 OID 0)
-- Dependencies: 961
-- Name: FUNCTION "pwvm_getAvgDistance"("logbookId" integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getAvgDistance"("logbookId" integer) IS 'Returns the average distance of all trips of the logbookId provided';


--
-- TOC entry 958 (class 1255 OID 3459368)
-- Name: pwvm_getAvgDistance_only_Pwvtrips(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getAvgDistance_only_Pwvtrips"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT AVG(distance_empirical) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1 AND pwvm_logbook_trip.purpose IN (2, 3)$_$;


--
-- TOC entry 3547 (class 0 OID 0)
-- Dependencies: 958
-- Name: FUNCTION "pwvm_getAvgDistance_only_Pwvtrips"("logbookId" integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getAvgDistance_only_Pwvtrips"("logbookId" integer) IS 'Returns the average distance of all trips of the logbookId provided';


--
-- TOC entry 948 (class 1255 OID 3459369)
-- Name: pwvm_getAvgZ(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getAvgZ"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT AVG(z_source) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1$_$;


--
-- TOC entry 949 (class 1255 OID 3459370)
-- Name: pwvm_getAvgZ_only_Pwvtrips(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getAvgZ_only_Pwvtrips"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT AVG(z_source) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1 AND pwvm_logbook_trip.purpose IN (2, 3)$_$;


--
-- TOC entry 950 (class 1255 OID 3459371)
-- Name: pwvm_getAvgZfromHome(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getAvgZfromHome"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT AVG(z_home) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1$_$;


--
-- TOC entry 960 (class 1255 OID 3459372)
-- Name: pwvm_getDistance(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getDistance"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT SUM(distance_empirical) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1$_$;


--
-- TOC entry 3548 (class 0 OID 0)
-- Dependencies: 960
-- Name: FUNCTION "pwvm_getDistance"("logbookId" integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getDistance"("logbookId" integer) IS 'Returns the total distance of the logbookId provided';


--
-- TOC entry 951 (class 1255 OID 3459373)
-- Name: pwvm_getDistance_only_Pwvtrips(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getDistance_only_Pwvtrips"("logbookId" integer) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT SUM(distance_empirical) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1 AND pwvm_logbook_trip.purpose IN (2, 3)$_$;


--
-- TOC entry 945 (class 1255 OID 3459374)
-- Name: pwvm_getHeadcountClass(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getHeadcountClass"(number_of_employees integer) RETURNS integer
    LANGUAGE sql
    AS $_$SELECT id FROM "pwvm_theadcountclass"
WHERE min <= $1 AND max >= $1$_$;


--
-- TOC entry 952 (class 1255 OID 3459375)
-- Name: pwvm_getMAKlasse(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getMAKlasse"(headcount integer) RETURNS integer
    LANGUAGE sql
    AS $_$SELECT CASE WHEN $1 > 1000
        THEN 7
       WHEN $1 >= 500
        THEN 6
       WHEN $1 >= 250
        THEN 5
       WHEN $1 >= 100
        THEN 4
       WHEN $1 >= 50
        THEN 3
       WHEN $1 >= 10
        THEN 2
       WHEN $1 >= 1
        THEN 1
    ELSE NULL END;
$_$;


--
-- TOC entry 953 (class 1255 OID 3459376)
-- Name: pwvm_getNumberOfPwvtrips(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getNumberOfPwvtrips"("logbookId" integer) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT count(*) FROM pwvm_logbook_trip
WHERE pwvm_logbook_trip."logbookId"=$1
AND pwvm_logbook_trip.purpose IN (2, 3)$_$;


--
-- TOC entry 3549 (class 0 OID 0)
-- Dependencies: 953
-- Name: FUNCTION "pwvm_getNumberOfPwvtrips"("logbookId" integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getNumberOfPwvtrips"("logbookId" integer) IS 'Returns the number of trips of the logbookId provided with service traffic background (trip type 2 and 3) -> the number of customers served with service traffic background';


--
-- TOC entry 954 (class 1255 OID 3459377)
-- Name: pwvm_getNumberOfStopsAtHomesite(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getNumberOfStopsAtHomesite"("logbookId" integer) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT
(SELECT CASE WHEN source_type = 4 THEN 1 ELSE 0 END FROM pwvm_logbook WHERE id = $1)
+
(SELECT COUNT(*) FROM pwvm_logbook_trip
WHERE "logbookId" = $1
 AND dest_type = 4)$_$;


--
-- TOC entry 959 (class 1255 OID 3459378)
-- Name: pwvm_getNumberOfTrips(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getNumberOfTrips"("logbookId" integer) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT count(*) FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=$1$_$;


--
-- TOC entry 3550 (class 0 OID 0)
-- Dependencies: 959
-- Name: FUNCTION "pwvm_getNumberOfTrips"("logbookId" integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getNumberOfTrips"("logbookId" integer) IS 'Returns the number of stops of the logbookId provided';


--
-- TOC entry 955 (class 1255 OID 3459379)
-- Name: pwvm_getSVB_coeffizient(character); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getSVB_coeffizient"(kgs5 character) RETURNS double precision
    LANGUAGE sql
    AS $_$SELECT ("pwvm_getSVBsInKGS5_primandsec"($1)::double precision/"pwvm_getSVBsInKGS5_tertiary"($1)::double precision)::double precision$_$;


--
-- TOC entry 3551 (class 0 OID 0)
-- Dependencies: 955
-- Name: FUNCTION "pwvm_getSVB_coeffizient"(kgs5 character); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getSVB_coeffizient"(kgs5 character) IS 'Returns the coefficient (from Stephan :-) which is defined as SVBs in primary and secondary sector divided by SVBs in tertiary sector (SVBs = employees with liability to social security) for the kgs5 key specified';


--
-- TOC entry 956 (class 1255 OID 3459380)
-- Name: pwvm_getSVBsInKGS5_primandsec(character); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getSVBsInKGS5_primandsec"(kgs5 character) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT SUM(svb) FROM kgs5_x_kid_wz WHERE kgs5_x_kid_wz.kgs5=$1 AND wz IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H')$_$;


--
-- TOC entry 3552 (class 0 OID 0)
-- Dependencies: 956
-- Name: FUNCTION "pwvm_getSVBsInKGS5_primandsec"(kgs5 character); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getSVBsInKGS5_primandsec"(kgs5 character) IS 'Returns the number of SVBs (employees with liability to social security) in primary and secondary sector (WZ A-H) for the kgs5 key specified';


--
-- TOC entry 957 (class 1255 OID 3459381)
-- Name: pwvm_getSVBsInKGS5_tertiary(character); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getSVBsInKGS5_tertiary"(kgs5 character) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT SUM(svb) FROM kgs5_x_kid_wz WHERE kgs5_x_kid_wz.kgs5=$1 AND wz IN ('I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q')$_$;


--
-- TOC entry 3553 (class 0 OID 0)
-- Dependencies: 957
-- Name: FUNCTION "pwvm_getSVBsInKGS5_tertiary"(kgs5 character); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION "pwvm_getSVBsInKGS5_tertiary"(kgs5 character) IS 'Returns the number of SVBs (employees with liability to social security) in ter sector (WZ I-Q) for the kgs5 key specified';


--
-- TOC entry 963 (class 1255 OID 3459382)
-- Name: pwvm_getVisitsToCustomers(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "pwvm_getVisitsToCustomers"("logbookId" integer) RETURNS bigint
    LANGUAGE sql
    AS $_$SELECT count(*) FROM pwvm_logbook_trip
WHERE pwvm_logbook_trip."logbookId"=$1
AND pwvm_logbook_trip.purpose IN (1, 2, 3, 4)
AND pwvm_logbook_trip.dest_type IN (1, 2, 3, 5, 6, 7)$_$;


--
-- TOC entry 964 (class 1255 OID 3459383)
-- Name: pwvm_getabschnittfromwz03(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pwvm_getabschnittfromwz03(wz2003 character varying) RETURNS character
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT CASE WHEN trim($1) SIMILAR TO '0[12][0-9\\.]*'
        THEN 'A'
       WHEN trim($1) SIMILAR TO '05[0-9\\.]*'
        THEN 'B'
       WHEN trim($1) SIMILAR TO '1[01234][0-9\\.]*'
        THEN 'C'
       WHEN trim($1) SIMILAR TO '1[56789][0-9\\.]*|2[0-9][0-9\\.]*|3[0-7][0-9\\.]*'
        THEN 'D'
       WHEN trim($1) SIMILAR TO '4[01][0-9\\.]*'
        THEN 'E'
       WHEN trim($1) SIMILAR TO '45[0-9\\.]*'
        THEN 'F'
       WHEN trim($1) SIMILAR TO '5[012][0-9\\.]*'
        THEN 'G'
       WHEN trim($1) SIMILAR TO '55[0-9\\.]*'
        THEN 'H'
       WHEN trim($1) SIMILAR TO '6[0-4][0-9\\.]*'
        THEN 'I'
       WHEN trim($1) SIMILAR TO '6[567][0-9\\.]*'
        THEN 'J'
       WHEN trim($1) SIMILAR TO '7[0-4][0-9\\.]*'
        THEN 'K'
       WHEN trim($1) SIMILAR TO '75[0-9\\.]*'
        THEN 'L'
       WHEN trim($1) SIMILAR TO '80[0-9\\.]*'
        THEN 'M'
       WHEN trim($1) SIMILAR TO '85[0-9\\.]*'
        THEN 'N'
       WHEN trim($1) SIMILAR TO '9[0-3][0-9\\.]*'
        THEN 'O'
       WHEN trim($1) SIMILAR TO '95[0-9\\.]*'
        THEN 'P'
       WHEN trim($1) SIMILAR TO '99[0-9\\.]*'
        THEN 'Q'
       WHEN trim($1) SIMILAR TO '[A-Z]+'
        THEN trim($1)
    ELSE NULL END;

$_$;


--
-- TOC entry 1078 (class 1255 OID 3458908)
-- Name: relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- TOC entry 637 (class 1255 OID 3458910)
-- Name: relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- TOC entry 502 (class 1255 OID 3458690)
-- Name: removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- TOC entry 520 (class 1255 OID 3458749)
-- Name: rename_geometry_table_constraints(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rename_geometry_table_constraints() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$
SELECT 'rename_geometry_table_constraint() is obsoleted'::text
$$;


--
-- TOC entry 443 (class 1255 OID 3458642)
-- Name: reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- TOC entry 1082 (class 1255 OID 3458404)
-- Name: rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- TOC entry 315 (class 1255 OID 3458406)
-- Name: rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- TOC entry 316 (class 1255 OID 3458408)
-- Name: rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- TOC entry 303 (class 1255 OID 3458402)
-- Name: rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- TOC entry 317 (class 1255 OID 3458416)
-- Name: scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- TOC entry 1084 (class 1255 OID 3458414)
-- Name: scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- TOC entry 852 (class 1255 OID 3459175)
-- Name: se_envelopesintersect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_envelopesintersect(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 && $2
	$_$;


--
-- TOC entry 850 (class 1255 OID 3459169)
-- Name: se_is3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_is3d(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasz';


--
-- TOC entry 847 (class 1255 OID 3459170)
-- Name: se_ismeasured(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_ismeasured(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasm';


--
-- TOC entry 854 (class 1255 OID 3459176)
-- Name: se_locatealong(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatealong(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- TOC entry 853 (class 1255 OID 3459177)
-- Name: se_locatebetween(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatebetween(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- TOC entry 851 (class 1255 OID 3459173)
-- Name: se_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- TOC entry 849 (class 1255 OID 3459172)
-- Name: se_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- TOC entry 965 (class 1255 OID 3459384)
-- Name: sebastian_test(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION sebastian_test() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    lb RECORD;
    trip RECORD;
    geom geometry;
BEGIN

    DELETE FROM pwvm_logbook_trip;
    DELETE FROM pwvm_logbook;

    FOR lb IN
        SELECT kid_fahrzeug.h01, f03::integer, kid_fahrzeug.fahrzeugid, f02c, f02a, kid_fahrzeug.the_geom,
        (CASE WHEN kid_fahrzeug.h01='P' THEN null ELSE "pwvm_Theadcountclass".id END) AS headcountclass
        FROM kid_fahrzeug
        JOIN kid_fahrt ON (kid_fahrt.fahrzeugid = kid_fahrzeug.fahrzeugid)
        LEFT JOIN "pwvm_Theadcountclass"
        ON (kid_fahrzeug.h05 >= "pwvm_Theadcountclass".min AND kid_fahrzeug.h05 <= "pwvm_Theadcountclass".max)
        WHERE kid_fahrt.fahrtid = 1
    LOOP

        -- Now "lb" has one record from the query above

--        IF lb. THEN

	INSERT INTO pwvm_logbook 
	(id,
	source_type, 
	"kid_vehicleId", 
	source_plz, 
	business_wz, 
	business_headcountclass, 
	source_kgs, 
	the_geom)
	VALUES (lb.fahrzeugid, lb.f03, lb.fahrzeugid, lb.f02c, lb.h01, lb.headcountclass, lb.f02a, lb.the_geom);

	geom = lb.the_geom;

	FOR trip IN
            SELECT fahrtid, f09::integer, f08c, f08a, f07a::integer, f14::double precision, the_geom
            FROM kid_fahrt
            WHERE fahrzeugid = lb.fahrzeugid
            ORDER BY fahrtid ASC
	LOOP

            INSERT INTO pwvm_logbook_trip ("logbookId", "tripId", dest_type, dest_plz, dest_kgs, purpose, distance_empirical, the_geom)
	    VALUES (
	    lb.fahrzeugid,
	    trip.fahrtid,
	    trip.f09,
	    trip.f08c,
	    trip.f08a,
	    trip.f07a,
	    trip.f14,
	    trip.the_geom
	    );

	    IF lb.the_geom IS NOT NULL AND trip.the_geom IS NOT NULL
	    THEN
		UPDATE pwvm_logbook_trip SET z_source =  ST_distance(lb.the_geom, trip.the_geom)
		WHERE "logbookId" = lb.fahrzeugid AND "tripId" = trip.fahrtid;
	    END IF;

	    IF geom IS NOT NULL AND trip.the_geom IS NOT NULL
	    THEN
		UPDATE pwvm_logbook_trip SET distance =  ST_distance(geom, trip.the_geom)
		WHERE "logbookId" = lb.fahrzeugid AND "tripId" = trip.fahrtid;
	    END IF;

	    geom = trip.the_geom;

        END LOOP;
        
--        END IF;
        
    END LOOP;

    

    UPDATE pwvm_logbook_trip t
    SET z_home =
    CASE
     WHEN
      t.the_geom IS NOT NULL AND (SELECT the_geom FROM pwvm_logbook_trip WHERE pwvm_logbook_trip."logbookId"=t."logbookId" AND pwvm_logbook_trip.dest_type = 4 LIMIT 1) IS NOT NULL
     THEN ST_distance((SELECT the_geom FROM pwvm_logbook_trip current_trip WHERE current_trip."logbookId"=t."logbookId" AND current_trip.dest_type = 4 LIMIT 1), t.the_geom)
     ELSE CASE WHEN t.the_geom IS NOT NULL AND (SELECT the_geom FROM pwvm_logbook WHERE id=t."logbookId") IS NOT NULL AND (SELECT source_type FROM pwvm_logbook WHERE id=t."logbookId") = 4 THEN ST_distance((SELECT the_geom FROM pwvm_logbook WHERE id=t."logbookId"), t.the_geom) END
    END;


    RETURN 1;
END;
$$;


--
-- TOC entry 580 (class 1255 OID 3458839)
-- Name: segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- TOC entry 411 (class 1255 OID 3458577)
-- Name: setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- TOC entry 503 (class 1255 OID 3458692)
-- Name: setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- TOC entry 412 (class 1255 OID 3458576)
-- Name: setsrid(chip, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(chip, integer) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setSRID';


--
-- TOC entry 724 (class 1255 OID 3459026)
-- Name: setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- TOC entry 318 (class 1255 OID 3458420)
-- Name: shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- TOC entry 1085 (class 1255 OID 3458829)
-- Name: simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- TOC entry 583 (class 1255 OID 3458835)
-- Name: snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- TOC entry 582 (class 1255 OID 3458833)
-- Name: snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- TOC entry 581 (class 1255 OID 3458831)
-- Name: snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- TOC entry 1086 (class 1255 OID 3458837)
-- Name: snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- TOC entry 393 (class 1255 OID 3458564)
-- Name: srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- TOC entry 725 (class 1255 OID 3459024)
-- Name: srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- TOC entry 567 (class 1255 OID 3458851)
-- Name: st_addmeasure(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addmeasure(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_AddMeasure';


--
-- TOC entry 1088 (class 1255 OID 3458687)
-- Name: st_addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- TOC entry 504 (class 1255 OID 3458689)
-- Name: st_addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- TOC entry 306 (class 1255 OID 3458401)
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- TOC entry 1081 (class 1255 OID 3458399)
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- TOC entry 413 (class 1255 OID 3458608)
-- Name: st_area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- TOC entry 921 (class 1255 OID 3459286)
-- Name: st_area(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Area($1, true)$_$;


--
-- TOC entry 922 (class 1255 OID 3459287)
-- Name: st_area(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Area($1::geometry);  $_$;


--
-- TOC entry 920 (class 1255 OID 3459285)
-- Name: st_area(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_area';


--
-- TOC entry 414 (class 1255 OID 3458606)
-- Name: st_area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- TOC entry 1083 (class 1255 OID 3459029)
-- Name: st_asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- TOC entry 861 (class 1255 OID 3459195)
-- Name: st_asbinary(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geography) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_binary';


--
-- TOC entry 862 (class 1255 OID 3459196)
-- Name: st_asbinary(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(text) RETURNS bytea
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsBinary($1::geometry);  $_$;


--
-- TOC entry 726 (class 1255 OID 3459031)
-- Name: st_asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- TOC entry 476 (class 1255 OID 3458655)
-- Name: st_asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- TOC entry 477 (class 1255 OID 3458661)
-- Name: st_asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- TOC entry 478 (class 1255 OID 3458653)
-- Name: st_asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- TOC entry 684 (class 1255 OID 3458981)
-- Name: st_asgeojson(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- TOC entry 905 (class 1255 OID 3459270)
-- Name: st_asgeojson(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- TOC entry 906 (class 1255 OID 3459271)
-- Name: st_asgeojson(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGeoJson($1::geometry);  $_$;


--
-- TOC entry 683 (class 1255 OID 3458980)
-- Name: st_asgeojson(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- TOC entry 685 (class 1255 OID 3458982)
-- Name: st_asgeojson(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- TOC entry 904 (class 1255 OID 3459269)
-- Name: st_asgeojson(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- TOC entry 907 (class 1255 OID 3459272)
-- Name: st_asgeojson(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- TOC entry 686 (class 1255 OID 3458983)
-- Name: st_asgeojson(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- TOC entry 687 (class 1255 OID 3458984)
-- Name: st_asgeojson(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- TOC entry 908 (class 1255 OID 3459273)
-- Name: st_asgeojson(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- TOC entry 909 (class 1255 OID 3459274)
-- Name: st_asgeojson(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- TOC entry 688 (class 1255 OID 3458985)
-- Name: st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- TOC entry 910 (class 1255 OID 3459275)
-- Name: st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- TOC entry 670 (class 1255 OID 3458966)
-- Name: st_asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- TOC entry 891 (class 1255 OID 3459256)
-- Name: st_asgml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- TOC entry 892 (class 1255 OID 3459257)
-- Name: st_asgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGML($1::geometry);  $_$;


--
-- TOC entry 1089 (class 1255 OID 3458964)
-- Name: st_asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- TOC entry 671 (class 1255 OID 3458967)
-- Name: st_asgml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- TOC entry 890 (class 1255 OID 3459255)
-- Name: st_asgml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- TOC entry 893 (class 1255 OID 3459258)
-- Name: st_asgml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- TOC entry 672 (class 1255 OID 3458968)
-- Name: st_asgml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- TOC entry 655 (class 1255 OID 3458969)
-- Name: st_asgml(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- TOC entry 894 (class 1255 OID 3459259)
-- Name: st_asgml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- TOC entry 895 (class 1255 OID 3459260)
-- Name: st_asgml(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- TOC entry 656 (class 1255 OID 3458970)
-- Name: st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- TOC entry 896 (class 1255 OID 3459261)
-- Name: st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- TOC entry 479 (class 1255 OID 3458657)
-- Name: st_ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- TOC entry 1090 (class 1255 OID 3458659)
-- Name: st_ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- TOC entry 1091 (class 1255 OID 3458976)
-- Name: st_askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), 15)$_$;


--
-- TOC entry 899 (class 1255 OID 3459264)
-- Name: st_askml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, 15)$_$;


--
-- TOC entry 900 (class 1255 OID 3459265)
-- Name: st_askml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsKML($1::geometry);  $_$;


--
-- TOC entry 673 (class 1255 OID 3458973)
-- Name: st_askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), $2)$_$;


--
-- TOC entry 698 (class 1255 OID 3458977)
-- Name: st_askml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), 15)$_$;


--
-- TOC entry 898 (class 1255 OID 3459263)
-- Name: st_askml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, $2)$_$;


--
-- TOC entry 901 (class 1255 OID 3459266)
-- Name: st_askml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, 15)$_$;


--
-- TOC entry 699 (class 1255 OID 3458978)
-- Name: st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), $3)$_$;


--
-- TOC entry 902 (class 1255 OID 3459267)
-- Name: st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, $3)$_$;


--
-- TOC entry 675 (class 1255 OID 3458961)
-- Name: st_assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 887 (class 1255 OID 3459252)
-- Name: st_assvg(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- TOC entry 888 (class 1255 OID 3459253)
-- Name: st_assvg(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsSVG($1::geometry);  $_$;


--
-- TOC entry 674 (class 1255 OID 3458959)
-- Name: st_assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 886 (class 1255 OID 3459251)
-- Name: st_assvg(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- TOC entry 1093 (class 1255 OID 3458957)
-- Name: st_assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- TOC entry 885 (class 1255 OID 3459250)
-- Name: st_assvg(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- TOC entry 727 (class 1255 OID 3459033)
-- Name: st_astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- TOC entry 842 (class 1255 OID 3459191)
-- Name: st_astext(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_text';


--
-- TOC entry 843 (class 1255 OID 3459192)
-- Name: st_astext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsText($1::geometry);  $_$;


--
-- TOC entry 444 (class 1255 OID 3458618)
-- Name: st_azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- TOC entry 830 (class 1255 OID 3459150)
-- Name: st_bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(ST_BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- TOC entry 831 (class 1255 OID 3459148)
-- Name: st_bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := ST_BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- TOC entry 1087 (class 1255 OID 3458872)
-- Name: st_boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- TOC entry 553 (class 1255 OID 3458785)
-- Name: st_box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- TOC entry 549 (class 1255 OID 3458788)
-- Name: st_box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- TOC entry 554 (class 1255 OID 3458783)
-- Name: st_box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- TOC entry 555 (class 1255 OID 3458786)
-- Name: st_box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- TOC entry 538 (class 1255 OID 3458797)
-- Name: st_box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- TOC entry 966 (class 1255 OID 3458454)
-- Name: st_box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- TOC entry 968 (class 1255 OID 3458455)
-- Name: st_box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- TOC entry 556 (class 1255 OID 3458784)
-- Name: st_box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- TOC entry 557 (class 1255 OID 3458787)
-- Name: st_box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- TOC entry 537 (class 1255 OID 3458796)
-- Name: st_box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- TOC entry 971 (class 1255 OID 3458423)
-- Name: st_box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- TOC entry 313 (class 1255 OID 3458424)
-- Name: st_box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- TOC entry 584 (class 1255 OID 3458855)
-- Name: st_buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- TOC entry 935 (class 1255 OID 3459301)
-- Name: st_buffer(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geography, double precision) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Buffer(ST_Transform(geometry($1), _ST_BestSRID($1)), $2), 4326))$_$;


--
-- TOC entry 936 (class 1255 OID 3459302)
-- Name: st_buffer(text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(text, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Buffer($1::geometry, $2);  $_$;


--
-- TOC entry 616 (class 1255 OID 3458857)
-- Name: st_buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST('quad_segs='||CAST($3 AS text) as cstring))
	   $_$;


--
-- TOC entry 596 (class 1255 OID 3458858)
-- Name: st_buffer(geometry, double precision, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST( regexp_replace($3, '^[0123456789]+$',
			'quad_segs='||$3) AS cstring)
		)
	   $_$;


--
-- TOC entry 505 (class 1255 OID 3458700)
-- Name: st_buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- TOC entry 558 (class 1255 OID 3458795)
-- Name: st_bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- TOC entry 676 (class 1255 OID 3458943)
-- Name: st_centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- TOC entry 340 (class 1255 OID 3458451)
-- Name: st_chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- TOC entry 341 (class 1255 OID 3458452)
-- Name: st_chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- TOC entry 817 (class 1255 OID 3459141)
-- Name: st_closestpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_closestpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_closestpoint';


--
-- TOC entry 603 (class 1255 OID 3458883)
-- Name: st_collect(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_collect_garray';


--
-- TOC entry 617 (class 1255 OID 3458880)
-- Name: st_collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- TOC entry 429 (class 1255 OID 3458631)
-- Name: st_collectionextract(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collectionextract(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_CollectionExtract';


--
-- TOC entry 1094 (class 1255 OID 3458716)
-- Name: st_combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- TOC entry 494 (class 1255 OID 3458718)
-- Name: st_combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- TOC entry 506 (class 1255 OID 3458722)
-- Name: st_combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- TOC entry 1095 (class 1255 OID 3458575)
-- Name: st_compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- TOC entry 638 (class 1255 OID 3458930)
-- Name: st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Contains($1,$2)$_$;


--
-- TOC entry 628 (class 1255 OID 3458936)
-- Name: st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_ContainsProperly($1,$2)$_$;


--
-- TOC entry 618 (class 1255 OID 3458861)
-- Name: st_convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- TOC entry 845 (class 1255 OID 3459166)
-- Name: st_coorddim(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coorddim(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- TOC entry 639 (class 1255 OID 3458932)
-- Name: st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_CoveredBy($1,$2)$_$;


--
-- TOC entry 930 (class 1255 OID 3459295)
-- Name: st_coveredby(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Covers($2, $1)$_$;


--
-- TOC entry 931 (class 1255 OID 3459296)
-- Name: st_coveredby(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_CoveredBy($1::geometry, $2::geometry);  $_$;


--
-- TOC entry 640 (class 1255 OID 3458934)
-- Name: st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Covers($1,$2)$_$;


--
-- TOC entry 928 (class 1255 OID 3459293)
-- Name: st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Covers($1, $2)$_$;


--
-- TOC entry 929 (class 1255 OID 3459294)
-- Name: st_covers(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Covers($1::geometry, $2::geometry);  $_$;


--
-- TOC entry 1096 (class 1255 OID 3458924)
-- Name: st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Crosses($1,$2)$_$;


--
-- TOC entry 941 (class 1255 OID 3459306)
-- Name: st_curvetoline(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_CurveToLine($1, 32)$_$;


--
-- TOC entry 1092 (class 1255 OID 3459305)
-- Name: st_curvetoline(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_curve_segmentize';


--
-- TOC entry 394 (class 1255 OID 3458573)
-- Name: st_datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- TOC entry 822 (class 1255 OID 3459146)
-- Name: st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DFullyWithin(ST_ConvexHull($1), ST_ConvexHull($2), $3)$_$;


--
-- TOC entry 619 (class 1255 OID 3458870)
-- Name: st_difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- TOC entry 700 (class 1255 OID 3458995)
-- Name: st_dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- TOC entry 641 (class 1255 OID 3458913)
-- Name: st_disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- TOC entry 1097 (class 1255 OID 3458614)
-- Name: st_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- TOC entry 914 (class 1255 OID 3459279)
-- Name: st_distance(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, true)$_$;


--
-- TOC entry 915 (class 1255 OID 3459280)
-- Name: st_distance(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(text, text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Distance($1::geometry, $2::geometry);  $_$;


--
-- TOC entry 913 (class 1255 OID 3459278)
-- Name: st_distance(geography, geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography, boolean) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, $3)$_$;


--
-- TOC entry 445 (class 1255 OID 3458612)
-- Name: st_distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- TOC entry 415 (class 1255 OID 3458610)
-- Name: st_distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- TOC entry 507 (class 1255 OID 3458710)
-- Name: st_dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- TOC entry 492 (class 1255 OID 3458714)
-- Name: st_dumppoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumppoints(geometry) RETURNS SETOF geometry_dump
    LANGUAGE sql
    AS $_$
  SELECT * FROM _ST_DumpPoints($1, NULL);
$_$;


--
-- TOC entry 508 (class 1255 OID 3458712)
-- Name: st_dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- TOC entry 642 (class 1255 OID 3458918)
-- Name: st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3)$_$;


--
-- TOC entry 918 (class 1255 OID 3459283)
-- Name: st_dwithin(geography, geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, true)$_$;


--
-- TOC entry 919 (class 1255 OID 3459284)
-- Name: st_dwithin(text, text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(text, text, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_DWithin($1::geometry, $2::geometry, $3);  $_$;


--
-- TOC entry 917 (class 1255 OID 3459282)
-- Name: st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, $4)$_$;


--
-- TOC entry 728 (class 1255 OID 3459019)
-- Name: st_endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- TOC entry 446 (class 1255 OID 3458641)
-- Name: st_envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- TOC entry 677 (class 1255 OID 3458952)
-- Name: st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Equals($1,$2)$_$;


--
-- TOC entry 519 (class 1255 OID 3458728)
-- Name: st_estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- TOC entry 521 (class 1255 OID 3458726)
-- Name: st_estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- TOC entry 447 (class 1255 OID 3458635)
-- Name: st_expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- TOC entry 448 (class 1255 OID 3458637)
-- Name: st_expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- TOC entry 449 (class 1255 OID 3458639)
-- Name: st_expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- TOC entry 701 (class 1255 OID 3458997)
-- Name: st_exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- TOC entry 395 (class 1255 OID 3458569)
-- Name: st_factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- TOC entry 522 (class 1255 OID 3458732)
-- Name: st_find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- TOC entry 516 (class 1255 OID 3458730)
-- Name: st_find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- TOC entry 1098 (class 1255 OID 3458620)
-- Name: st_force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- TOC entry 450 (class 1255 OID 3458624)
-- Name: st_force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- TOC entry 451 (class 1255 OID 3458626)
-- Name: st_force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- TOC entry 452 (class 1255 OID 3458622)
-- Name: st_force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- TOC entry 453 (class 1255 OID 3458628)
-- Name: st_force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- TOC entry 1047 (class 1255 OID 3458630)
-- Name: st_force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- TOC entry 454 (class 1255 OID 3458645)
-- Name: st_forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- TOC entry 860 (class 1255 OID 3459194)
-- Name: st_geogfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- TOC entry 863 (class 1255 OID 3459197)
-- Name: st_geogfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromwkb(bytea) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_binary';


--
-- TOC entry 844 (class 1255 OID 3459193)
-- Name: st_geographyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geographyfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- TOC entry 690 (class 1255 OID 3458987)
-- Name: st_geohash(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_GeoHash($1, 0)$_$;


--
-- TOC entry 689 (class 1255 OID 3458986)
-- Name: st_geohash(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_GeoHash';


--
-- TOC entry 781 (class 1255 OID 3459086)
-- Name: st_geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 780 (class 1255 OID 3459084)
-- Name: st_geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 805 (class 1255 OID 3459137)
-- Name: st_geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 804 (class 1255 OID 3459135)
-- Name: st_geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 559 (class 1255 OID 3458790)
-- Name: st_geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- TOC entry 560 (class 1255 OID 3458791)
-- Name: st_geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- TOC entry 561 (class 1255 OID 3458792)
-- Name: st_geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- TOC entry 562 (class 1255 OID 3458793)
-- Name: st_geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- TOC entry 563 (class 1255 OID 3458794)
-- Name: st_geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- TOC entry 539 (class 1255 OID 3458798)
-- Name: st_geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- TOC entry 352 (class 1255 OID 3458494)
-- Name: st_geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- TOC entry 973 (class 1255 OID 3458389)
-- Name: st_geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- TOC entry 353 (class 1255 OID 3458495)
-- Name: st_geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- TOC entry 354 (class 1255 OID 3458464)
-- Name: st_geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- TOC entry 355 (class 1255 OID 3458496)
-- Name: st_geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- TOC entry 1044 (class 1255 OID 3458497)
-- Name: st_geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- TOC entry 356 (class 1255 OID 3458463)
-- Name: st_geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- TOC entry 357 (class 1255 OID 3458462)
-- Name: st_geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- TOC entry 358 (class 1255 OID 3458461)
-- Name: st_geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- TOC entry 292 (class 1255 OID 3458387)
-- Name: st_geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- TOC entry 359 (class 1255 OID 3458460)
-- Name: st_geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- TOC entry 1048 (class 1255 OID 3458492)
-- Name: st_geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- TOC entry 360 (class 1255 OID 3458459)
-- Name: st_geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- TOC entry 293 (class 1255 OID 3458388)
-- Name: st_geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- TOC entry 361 (class 1255 OID 3458490)
-- Name: st_geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- TOC entry 362 (class 1255 OID 3458491)
-- Name: st_geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- TOC entry 363 (class 1255 OID 3458498)
-- Name: st_geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- TOC entry 1049 (class 1255 OID 3458488)
-- Name: st_geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- TOC entry 364 (class 1255 OID 3458489)
-- Name: st_geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- TOC entry 974 (class 1255 OID 3458390)
-- Name: st_geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- TOC entry 365 (class 1255 OID 3458493)
-- Name: st_geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- TOC entry 366 (class 1255 OID 3458499)
-- Name: st_geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- TOC entry 294 (class 1255 OID 3458391)
-- Name: st_geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- TOC entry 729 (class 1255 OID 3459035)
-- Name: st_geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 1050 (class 1255 OID 3459037)
-- Name: st_geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 1051 (class 1255 OID 3458993)
-- Name: st_geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- TOC entry 702 (class 1255 OID 3459005)
-- Name: st_geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_geometrytype';


--
-- TOC entry 480 (class 1255 OID 3458663)
-- Name: st_geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- TOC entry 481 (class 1255 OID 3458665)
-- Name: st_geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- TOC entry 651 (class 1255 OID 3458953)
-- Name: st_geomfromgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromgml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- TOC entry 653 (class 1255 OID 3458955)
-- Name: st_geomfromkml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromkml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_kml';


--
-- TOC entry 730 (class 1255 OID 3459039)
-- Name: st_geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 731 (class 1255 OID 3459041)
-- Name: st_geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 782 (class 1255 OID 3459088)
-- Name: st_geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- TOC entry 783 (class 1255 OID 3459090)
-- Name: st_geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SetSRID(ST_GeomFromWKB($1), $2)$_$;


--
-- TOC entry 652 (class 1255 OID 3458954)
-- Name: st_gmltosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_gmltosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- TOC entry 942 (class 1255 OID 3459307)
-- Name: st_hasarc(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hasarc(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_has_arc';


--
-- TOC entry 601 (class 1255 OID 3458867)
-- Name: st_hausdorffdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistance';


--
-- TOC entry 602 (class 1255 OID 3458868)
-- Name: st_hausdorffdistance(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry, double precision) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistancedensify';


--
-- TOC entry 396 (class 1255 OID 3458567)
-- Name: st_height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- TOC entry 703 (class 1255 OID 3459003)
-- Name: st_interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- TOC entry 585 (class 1255 OID 3458853)
-- Name: st_intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersection';


--
-- TOC entry 937 (class 1255 OID 3459303)
-- Name: st_intersection(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geography, geography) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Intersection(ST_Transform(geometry($1), _ST_BestSRID($1, $2)), ST_Transform(geometry($2), _ST_BestSRID($1, $2))), 4326))$_$;


--
-- TOC entry 938 (class 1255 OID 3459304)
-- Name: st_intersection(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(text, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Intersection($1::geometry, $2::geometry);  $_$;


--
-- TOC entry 643 (class 1255 OID 3458921)
-- Name: st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Intersects($1,$2)$_$;


--
-- TOC entry 932 (class 1255 OID 3459297)
-- Name: st_intersects(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Distance($1, $2, 0.0, false) < 0.00001$_$;


--
-- TOC entry 933 (class 1255 OID 3459298)
-- Name: st_intersects(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Intersects($1::geometry, $2::geometry);  $_$;


--
-- TOC entry 732 (class 1255 OID 3459021)
-- Name: st_isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- TOC entry 733 (class 1255 OID 3459023)
-- Name: st_isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- TOC entry 1052 (class 1255 OID 3458945)
-- Name: st_isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- TOC entry 678 (class 1255 OID 3458949)
-- Name: st_issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- TOC entry 679 (class 1255 OID 3458941)
-- Name: st_isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- TOC entry 600 (class 1255 OID 3458866)
-- Name: st_isvalidreason(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalidreason(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalidreason';


--
-- TOC entry 416 (class 1255 OID 3458592)
-- Name: st_length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- TOC entry 924 (class 1255 OID 3459289)
-- Name: st_length(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT ST_Length($1, true)$_$;


--
-- TOC entry 925 (class 1255 OID 3459290)
-- Name: st_length(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Length($1::geometry);  $_$;


--
-- TOC entry 923 (class 1255 OID 3459288)
-- Name: st_length(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_length';


--
-- TOC entry 417 (class 1255 OID 3458590)
-- Name: st_length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- TOC entry 418 (class 1255 OID 3458598)
-- Name: st_length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- TOC entry 419 (class 1255 OID 3458588)
-- Name: st_length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- TOC entry 1053 (class 1255 OID 3458594)
-- Name: st_length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- TOC entry 420 (class 1255 OID 3458596)
-- Name: st_length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- TOC entry 586 (class 1255 OID 3458842)
-- Name: st_line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- TOC entry 587 (class 1255 OID 3458846)
-- Name: st_line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- TOC entry 588 (class 1255 OID 3458844)
-- Name: st_line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- TOC entry 598 (class 1255 OID 3458863)
-- Name: st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT CASE WHEN NOT $1 && $2 THEN 0 ELSE _ST_LineCrossingDirection($1,$2) END $_$;


--
-- TOC entry 482 (class 1255 OID 3458683)
-- Name: st_linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- TOC entry 1059 (class 1255 OID 3459047)
-- Name: st_linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'LINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 734 (class 1255 OID 3459049)
-- Name: st_linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 1060 (class 1255 OID 3459098)
-- Name: st_linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 784 (class 1255 OID 3459096)
-- Name: st_linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 509 (class 1255 OID 3458705)
-- Name: st_linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- TOC entry 786 (class 1255 OID 3459102)
-- Name: st_linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 785 (class 1255 OID 3459100)
-- Name: st_linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 943 (class 1255 OID 3459308)
-- Name: st_linetocurve(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linetocurve(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_desegmentize';


--
-- TOC entry 589 (class 1255 OID 3458850)
-- Name: st_locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- TOC entry 1063 (class 1255 OID 3458848)
-- Name: st_locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- TOC entry 599 (class 1255 OID 3458864)
-- Name: st_locatebetweenelevations(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_LocateBetweenElevations';


--
-- TOC entry 820 (class 1255 OID 3459144)
-- Name: st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_LongestLine(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- TOC entry 735 (class 1255 OID 3459015)
-- Name: st_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- TOC entry 483 (class 1255 OID 3458676)
-- Name: st_makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- TOC entry 1064 (class 1255 OID 3458678)
-- Name: st_makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- TOC entry 489 (class 1255 OID 3458694)
-- Name: st_makeenvelope(double precision, double precision, double precision, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_MakeEnvelope';


--
-- TOC entry 461 (class 1255 OID 3458681)
-- Name: st_makeline(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- TOC entry 484 (class 1255 OID 3458685)
-- Name: st_makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- TOC entry 485 (class 1255 OID 3458680)
-- Name: st_makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- TOC entry 486 (class 1255 OID 3458668)
-- Name: st_makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 487 (class 1255 OID 3458670)
-- Name: st_makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 1065 (class 1255 OID 3458672)
-- Name: st_makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 460 (class 1255 OID 3458674)
-- Name: st_makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- TOC entry 510 (class 1255 OID 3458698)
-- Name: st_makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- TOC entry 1066 (class 1255 OID 3458696)
-- Name: st_makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- TOC entry 816 (class 1255 OID 3459140)
-- Name: st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_MaxDistance(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- TOC entry 421 (class 1255 OID 3458580)
-- Name: st_mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- TOC entry 940 (class 1255 OID 3459311)
-- Name: st_minimumboundingcircle(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MinimumBoundingCircle($1, 48)$_$;


--
-- TOC entry 939 (class 1255 OID 3459309)
-- Name: st_minimumboundingcircle(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
	DECLARE
	hull GEOMETRY;
	ring GEOMETRY;
	center GEOMETRY;
	radius DOUBLE PRECISION;
	dist DOUBLE PRECISION;
	d DOUBLE PRECISION;
	idx1 integer;
	idx2 integer;
	l1 GEOMETRY;
	l2 GEOMETRY;
	p1 GEOMETRY;
	p2 GEOMETRY;
	a1 DOUBLE PRECISION;
	a2 DOUBLE PRECISION;


	BEGIN

	-- First compute the ConvexHull of the geometry
	hull = ST_ConvexHull(inputgeom);
	--A point really has no MBC
	IF ST_GeometryType(hull) = 'ST_Point' THEN
		RETURN hull;
	END IF;
	-- convert the hull perimeter to a linestring so we can manipulate individual points
	--If its already a linestring force it to a closed linestring
	ring = CASE WHEN ST_GeometryType(hull) = 'ST_LineString' THEN ST_AddPoint(hull, ST_StartPoint(hull)) ELSE ST_ExteriorRing(hull) END;

	dist = 0;
	-- Brute Force - check every pair
	FOR i in 1 .. (ST_NumPoints(ring)-2)
		LOOP
			FOR j in i .. (ST_NumPoints(ring)-1)
				LOOP
				d = ST_Distance(ST_PointN(ring,i),ST_PointN(ring,j));
				-- Check the distance and update if larger
				IF (d > dist) THEN
					dist = d;
					idx1 = i;
					idx2 = j;
				END IF;
			END LOOP;
		END LOOP;

	-- We now have the diameter of the convex hull.  The following line returns it if desired.
	-- RETURN MakeLine(PointN(ring,idx1),PointN(ring,idx2));

	-- Now for the Minimum Bounding Circle.  Since we know the two points furthest from each
	-- other, the MBC must go through those two points. Start with those points as a diameter of a circle.

	-- The radius is half the distance between them and the center is midway between them
	radius = ST_Distance(ST_PointN(ring,idx1),ST_PointN(ring,idx2)) / 2.0;
	center = ST_Line_interpolate_point(ST_MakeLine(ST_PointN(ring,idx1),ST_PointN(ring,idx2)),0.5);

	-- Loop through each vertex and check if the distance from the center to the point
	-- is greater than the current radius.
	FOR k in 1 .. (ST_NumPoints(ring)-1)
		LOOP
		IF(k <> idx1 and k <> idx2) THEN
			dist = ST_Distance(center,ST_PointN(ring,k));
			IF (dist > radius) THEN
				-- We have to expand the circle.  The new circle must pass trhough
				-- three points - the two original diameters and this point.

				-- Draw a line from the first diameter to this point
				l1 = ST_Makeline(ST_PointN(ring,idx1),ST_PointN(ring,k));
				-- Compute the midpoint
				p1 = ST_line_interpolate_point(l1,0.5);
				-- Rotate the line 90 degrees around the midpoint (perpendicular bisector)
				l1 = ST_Translate(ST_Rotate(ST_Translate(l1,-X(p1),-Y(p1)),pi()/2),X(p1),Y(p1));
				--  Compute the azimuth of the bisector
				a1 = ST_Azimuth(ST_PointN(l1,1),ST_PointN(l1,2));
				--  Extend the line in each direction the new computed distance to insure they will intersect
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,2))+sin(a1)*dist,Y(ST_PointN(l1,2))+cos(a1)*dist),-1);
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,1))-sin(a1)*dist,Y(ST_PointN(l1,1))-cos(a1)*dist),0);

				-- Repeat for the line from the point to the other diameter point
				l2 = ST_Makeline(ST_PointN(ring,idx2),ST_PointN(ring,k));
				p2 = ST_Line_interpolate_point(l2,0.5);
				l2 = ST_Translate(ST_Rotate(ST_Translate(l2,-X(p2),-Y(p2)),pi()/2),X(p2),Y(p2));
				a2 = ST_Azimuth(ST_PointN(l2,1),ST_PointN(l2,2));
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,2))+sin(a2)*dist,Y(ST_PointN(l2,2))+cos(a2)*dist),-1);
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,1))-sin(a2)*dist,Y(ST_PointN(l2,1))-cos(a2)*dist),0);

				-- The new center is the intersection of the two bisectors
				center = ST_Intersection(l1,l2);
				-- The new radius is the distance to any of the three points
				radius = ST_Distance(center,ST_PointN(ring,idx1));
			END IF;
		END IF;
		END LOOP;
	--DONE!!  Return the MBC via the buffer command
	RETURN ST_Buffer(center,radius,segs_per_quarter);

	END;
$$;


--
-- TOC entry 757 (class 1255 OID 3459063)
-- Name: st_mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 756 (class 1255 OID 3459061)
-- Name: st_mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 807 (class 1255 OID 3459125)
-- Name: st_mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 806 (class 1255 OID 3459123)
-- Name: st_mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 758 (class 1255 OID 3459071)
-- Name: st_mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1067 (class 1255 OID 3459069)
-- Name: st_mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOINT'
	THEN GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 809 (class 1255 OID 3459114)
-- Name: st_mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 808 (class 1255 OID 3459112)
-- Name: st_mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 760 (class 1255 OID 3459078)
-- Name: st_mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 759 (class 1255 OID 3459076)
-- Name: st_mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- TOC entry 810 (class 1255 OID 3459129)
-- Name: st_mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1058 (class 1255 OID 3459127)
-- Name: st_mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 455 (class 1255 OID 3458633)
-- Name: st_multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- TOC entry 811 (class 1255 OID 3459121)
-- Name: st_multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 761 (class 1255 OID 3459065)
-- Name: st_multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- TOC entry 762 (class 1255 OID 3459067)
-- Name: st_multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- TOC entry 742 (class 1255 OID 3459074)
-- Name: st_multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- TOC entry 813 (class 1255 OID 3459118)
-- Name: st_multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 812 (class 1255 OID 3459116)
-- Name: st_multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 815 (class 1255 OID 3459133)
-- Name: st_multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 814 (class 1255 OID 3459131)
-- Name: st_multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 764 (class 1255 OID 3459082)
-- Name: st_multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- TOC entry 763 (class 1255 OID 3459080)
-- Name: st_multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- TOC entry 488 (class 1255 OID 3458651)
-- Name: st_ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- TOC entry 422 (class 1255 OID 3458584)
-- Name: st_npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- TOC entry 423 (class 1255 OID 3458586)
-- Name: st_nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- TOC entry 704 (class 1255 OID 3458991)
-- Name: st_numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- TOC entry 705 (class 1255 OID 3459001)
-- Name: st_numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- TOC entry 706 (class 1255 OID 3458999)
-- Name: st_numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- TOC entry 1061 (class 1255 OID 3458989)
-- Name: st_numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- TOC entry 857 (class 1255 OID 3459168)
-- Name: st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 ~= $2 AND _ST_OrderingEquals($1, $2)
	$_$;


--
-- TOC entry 680 (class 1255 OID 3458939)
-- Name: st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Overlaps($1,$2)$_$;


--
-- TOC entry 1062 (class 1255 OID 3458604)
-- Name: st_perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- TOC entry 424 (class 1255 OID 3458602)
-- Name: st_perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- TOC entry 425 (class 1255 OID 3458600)
-- Name: st_perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- TOC entry 856 (class 1255 OID 3459171)
-- Name: st_point(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- TOC entry 456 (class 1255 OID 3458616)
-- Name: st_point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- TOC entry 736 (class 1255 OID 3459043)
-- Name: st_pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 737 (class 1255 OID 3459045)
-- Name: st_pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POINT'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 788 (class 1255 OID 3459094)
-- Name: st_pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 787 (class 1255 OID 3459092)
-- Name: st_pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 707 (class 1255 OID 3459007)
-- Name: st_pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- TOC entry 681 (class 1255 OID 3458947)
-- Name: st_pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- TOC entry 1070 (class 1255 OID 3459053)
-- Name: st_polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 765 (class 1255 OID 3459055)
-- Name: st_polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POLYGON'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 790 (class 1255 OID 3459106)
-- Name: st_polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 789 (class 1255 OID 3459104)
-- Name: st_polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 855 (class 1255 OID 3459174)
-- Name: st_polygon(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygon(geometry, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT setSRID(makepolygon($1), $2)
	$_$;


--
-- TOC entry 767 (class 1255 OID 3459059)
-- Name: st_polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_PolyFromText($1)$_$;


--
-- TOC entry 766 (class 1255 OID 3459057)
-- Name: st_polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- TOC entry 791 (class 1255 OID 3459110)
-- Name: st_polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- TOC entry 1068 (class 1255 OID 3459108)
-- Name: st_polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- TOC entry 490 (class 1255 OID 3458703)
-- Name: st_polygonize(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- TOC entry 511 (class 1255 OID 3458702)
-- Name: st_polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- TOC entry 367 (class 1255 OID 3458487)
-- Name: st_postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- TOC entry 1069 (class 1255 OID 3458486)
-- Name: st_postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- TOC entry 644 (class 1255 OID 3458909)
-- Name: st_relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- TOC entry 645 (class 1255 OID 3458911)
-- Name: st_relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- TOC entry 512 (class 1255 OID 3458691)
-- Name: st_removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- TOC entry 457 (class 1255 OID 3458643)
-- Name: st_reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- TOC entry 1071 (class 1255 OID 3458405)
-- Name: st_rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- TOC entry 319 (class 1255 OID 3458407)
-- Name: st_rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- TOC entry 320 (class 1255 OID 3458409)
-- Name: st_rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- TOC entry 307 (class 1255 OID 3458403)
-- Name: st_rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- TOC entry 1073 (class 1255 OID 3458417)
-- Name: st_scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- TOC entry 321 (class 1255 OID 3458415)
-- Name: st_scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- TOC entry 590 (class 1255 OID 3458840)
-- Name: st_segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- TOC entry 426 (class 1255 OID 3458578)
-- Name: st_setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- TOC entry 513 (class 1255 OID 3458693)
-- Name: st_setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- TOC entry 738 (class 1255 OID 3459027)
-- Name: st_setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- TOC entry 322 (class 1255 OID 3458421)
-- Name: st_shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- TOC entry 818 (class 1255 OID 3459142)
-- Name: st_shortestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shortestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_shortestline2d';


--
-- TOC entry 591 (class 1255 OID 3458830)
-- Name: st_simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- TOC entry 1074 (class 1255 OID 3458865)
-- Name: st_simplifypreservetopology(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplifypreservetopology(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'topologypreservesimplify';


--
-- TOC entry 1075 (class 1255 OID 3458836)
-- Name: st_snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- TOC entry 593 (class 1255 OID 3458834)
-- Name: st_snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- TOC entry 592 (class 1255 OID 3458832)
-- Name: st_snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- TOC entry 594 (class 1255 OID 3458838)
-- Name: st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- TOC entry 295 (class 1255 OID 3458381)
-- Name: st_spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- TOC entry 296 (class 1255 OID 3458382)
-- Name: st_spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- TOC entry 1072 (class 1255 OID 3458565)
-- Name: st_srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- TOC entry 739 (class 1255 OID 3459025)
-- Name: st_srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- TOC entry 1076 (class 1255 OID 3459017)
-- Name: st_startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- TOC entry 427 (class 1255 OID 3458582)
-- Name: st_summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- TOC entry 620 (class 1255 OID 3458874)
-- Name: st_symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- TOC entry 621 (class 1255 OID 3458876)
-- Name: st_symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- TOC entry 564 (class 1255 OID 3458789)
-- Name: st_text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- TOC entry 984 (class 1255 OID 3458916)
-- Name: st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Touches($1,$2)$_$;


--
-- TOC entry 565 (class 1255 OID 3458771)
-- Name: st_transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- TOC entry 324 (class 1255 OID 3458413)
-- Name: st_translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- TOC entry 323 (class 1255 OID 3458411)
-- Name: st_translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- TOC entry 985 (class 1255 OID 3458419)
-- Name: st_transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- TOC entry 625 (class 1255 OID 3458900)
-- Name: st_union(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- TOC entry 622 (class 1255 OID 3458878)
-- Name: st_union(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- TOC entry 646 (class 1255 OID 3458899)
-- Name: st_unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- TOC entry 397 (class 1255 OID 3458571)
-- Name: st_width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- TOC entry 647 (class 1255 OID 3458927)
-- Name: st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_within(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Within($1,$2)$_$;


--
-- TOC entry 858 (class 1255 OID 3459165)
-- Name: st_wkbtosql(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkbtosql(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- TOC entry 859 (class 1255 OID 3459164)
-- Name: st_wkttosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkttosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- TOC entry 708 (class 1255 OID 3459009)
-- Name: st_x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- TOC entry 325 (class 1255 OID 3458443)
-- Name: st_xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- TOC entry 326 (class 1255 OID 3458437)
-- Name: st_xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- TOC entry 709 (class 1255 OID 3459011)
-- Name: st_y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- TOC entry 327 (class 1255 OID 3458445)
-- Name: st_ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- TOC entry 328 (class 1255 OID 3458439)
-- Name: st_ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- TOC entry 710 (class 1255 OID 3459013)
-- Name: st_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- TOC entry 329 (class 1255 OID 3458447)
-- Name: st_zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- TOC entry 458 (class 1255 OID 3458649)
-- Name: st_zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- TOC entry 330 (class 1255 OID 3458441)
-- Name: st_zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


--
-- TOC entry 740 (class 1255 OID 3459016)
-- Name: startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- TOC entry 428 (class 1255 OID 3458581)
-- Name: summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- TOC entry 623 (class 1255 OID 3458873)
-- Name: symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- TOC entry 624 (class 1255 OID 3458875)
-- Name: symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- TOC entry 595 (class 1255 OID 3458805)
-- Name: text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- TOC entry 648 (class 1255 OID 3458914)
-- Name: touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'touches';


--
-- TOC entry 566 (class 1255 OID 3458770)
-- Name: transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- TOC entry 986 (class 1255 OID 3458412)
-- Name: translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- TOC entry 331 (class 1255 OID 3458410)
-- Name: translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- TOC entry 332 (class 1255 OID 3458418)
-- Name: transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- TOC entry 649 (class 1255 OID 3458898)
-- Name: unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- TOC entry 832 (class 1255 OID 3459151)
-- Name: unlockrows(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unlockrows(text) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	ret int;
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table where authid = ' ||
		quote_literal($1);

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- TOC entry 962 (class 1255 OID 3459411)
-- Name: update_geometry_stats(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION update_geometry_stats() RETURNS text
    LANGUAGE sql
    AS $$ SELECT 'update_geometry_stats() has been obsoleted. Statistics are automatically built running the ANALYZE command'::text$$;


--
-- TOC entry 944 (class 1255 OID 3459412)
-- Name: update_geometry_stats(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION update_geometry_stats(character varying, character varying) RETURNS text
    LANGUAGE sql
    AS $$SELECT update_geometry_stats();$$;


--
-- TOC entry 535 (class 1255 OID 3458766)
-- Name: updategeometrysrid(character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('','',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 526 (class 1255 OID 3458765)
-- Name: updategeometrysrid(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('',$1,$2,$3,$4) into ret;
	RETURN ret;
END;
$_$;


--
-- TOC entry 532 (class 1255 OID 3458764)
-- Name: updategeometrysrid(character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	myrec RECORD;
	okay boolean;
	cname varchar;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE EXCEPTION 'Invalid schema name';
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT INTO real_schema current_schema()::text;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Update ref from geometry_columns table
	EXECUTE 'UPDATE geometry_columns SET SRID = ' || new_srid::text ||
		' where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Make up constraint name
	cname = 'enforce_srid_'  || column_name;

	-- Drop enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' DROP constraint ' || quote_ident(cname);

	-- Update geometries SRID
	EXECUTE 'UPDATE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' SET ' || quote_ident(column_name) ||
		' = setSRID(' || quote_ident(column_name) ||
		', ' || new_srid::text || ')';

	-- Reset enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' ADD constraint ' || quote_ident(cname) ||
		' CHECK (srid(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')';

	RETURN real_schema || '.' || table_name || '.' || column_name ||' SRID changed to ' || new_srid::text;

END;
$_$;


--
-- TOC entry 398 (class 1255 OID 3458570)
-- Name: width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- TOC entry 987 (class 1255 OID 3458925)
-- Name: within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'within';


--
-- TOC entry 988 (class 1255 OID 3459413)
-- Name: wivsim_choose_random_object(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION wivsim_choose_random_object(kgskey character varying, dlm_objart character varying) RETURNS geometry
    LANGUAGE sql
    AS $_$

    SELECT
      dlm_obj.the_geom
    FROM
      kgs_2007,
      dlm_obj
    WHERE
      kgs_2007.kgs = $1 AND
      ST_Contains(kgs_2007.the_geom, dlm_obj.the_geom)
      AND dlm_obj.objart = $2
    ORDER BY random()
    LIMIT 1;

  $_$;


--
-- TOC entry 989 (class 1255 OID 3459008)
-- Name: x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- TOC entry 333 (class 1255 OID 3458442)
-- Name: xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- TOC entry 334 (class 1255 OID 3458436)
-- Name: xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- TOC entry 711 (class 1255 OID 3459010)
-- Name: y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- TOC entry 335 (class 1255 OID 3458444)
-- Name: ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- TOC entry 336 (class 1255 OID 3458438)
-- Name: ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- TOC entry 712 (class 1255 OID 3459012)
-- Name: z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- TOC entry 990 (class 1255 OID 3458446)
-- Name: zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- TOC entry 1099 (class 1255 OID 3458648)
-- Name: zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- TOC entry 337 (class 1255 OID 3458440)
-- Name: zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


--
-- TOC entry 1840 (class 1255 OID 3458896)
-- Name: accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- TOC entry 1842 (class 1255 OID 3458902)
-- Name: collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- TOC entry 1831 (class 1255 OID 3458719)
-- Name: extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- TOC entry 1833 (class 1255 OID 3458723)
-- Name: extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent3d(geometry) (
    SFUNC = public.combine_bbox,
    STYPE = box3d
);


--
-- TOC entry 1846 (class 1255 OID 3458906)
-- Name: makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- TOC entry 1836 (class 1255 OID 3458881)
-- Name: memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- TOC entry 1838 (class 1255 OID 3458884)
-- Name: memgeomunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memgeomunion(geometry) (
    SFUNC = geomunion,
    STYPE = geometry
);


--
-- TOC entry 1844 (class 1255 OID 3458904)
-- Name: polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- TOC entry 1835 (class 1255 OID 3458897)
-- Name: st_accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- TOC entry 1843 (class 1255 OID 3458903)
-- Name: st_collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- TOC entry 1832 (class 1255 OID 3458720)
-- Name: st_extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- TOC entry 1834 (class 1255 OID 3458724)
-- Name: st_extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent3d(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d
);


--
-- TOC entry 1847 (class 1255 OID 3458907)
-- Name: st_makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- TOC entry 1837 (class 1255 OID 3458882)
-- Name: st_memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- TOC entry 1839 (class 1255 OID 3458885)
-- Name: st_memunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memunion(geometry) (
    SFUNC = public.st_union,
    STYPE = geometry
);


--
-- TOC entry 1845 (class 1255 OID 3458905)
-- Name: st_polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- TOC entry 1841 (class 1255 OID 3458901)
-- Name: st_union(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_union(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_union_finalfn
);


--
-- TOC entry 2561 (class 2617 OID 3458523)
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geometry_overlap,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &&,
    RESTRICT = geometry_gist_sel,
    JOIN = geometry_gist_joinsel
);


--
-- TOC entry 2569 (class 2617 OID 3459220)
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geography_overlaps,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = &&,
    RESTRICT = geography_gist_selectivity,
    JOIN = geography_gist_join_selectivity
);


--
-- TOC entry 2558 (class 2617 OID 3458518)
-- Name: &<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &< (
    PROCEDURE = geometry_overleft,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2560 (class 2617 OID 3458522)
-- Name: &<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &<| (
    PROCEDURE = geometry_overbelow,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |&>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2562 (class 2617 OID 3458517)
-- Name: &>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &> (
    PROCEDURE = geometry_overright,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2552 (class 2617 OID 3458473)
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geometry_lt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2570 (class 2617 OID 3459239)
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geography_lt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2557 (class 2617 OID 3458516)
-- Name: <<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR << (
    PROCEDURE = geometry_left,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2559 (class 2617 OID 3458520)
-- Name: <<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <<| (
    PROCEDURE = geometry_below,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |>>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2553 (class 2617 OID 3458474)
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geometry_le,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2571 (class 2617 OID 3459240)
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geography_le,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2554 (class 2617 OID 3458475)
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geometry_eq,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2572 (class 2617 OID 3459241)
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geography_eq,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2556 (class 2617 OID 3458471)
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geometry_gt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2574 (class 2617 OID 3459237)
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geography_gt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2555 (class 2617 OID 3458472)
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geometry_ge,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2573 (class 2617 OID 3459238)
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geography_ge,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2563 (class 2617 OID 3458515)
-- Name: >>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >> (
    PROCEDURE = geometry_right,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2567 (class 2617 OID 3458526)
-- Name: @; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR @ (
    PROCEDURE = geometry_contained,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2564 (class 2617 OID 3458521)
-- Name: |&>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |&> (
    PROCEDURE = geometry_overabove,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2565 (class 2617 OID 3458519)
-- Name: |>>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |>> (
    PROCEDURE = geometry_above,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- TOC entry 2568 (class 2617 OID 3458525)
-- Name: ~; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~ (
    PROCEDURE = geometry_contain,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = @,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- TOC entry 2566 (class 2617 OID 3458524)
-- Name: ~=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~= (
    PROCEDURE = geometry_samebox,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~=,
    RESTRICT = eqsel,
    JOIN = eqjoinsel
);


--
-- TOC entry 2689 (class 2616 OID 3459243)
-- Name: btree_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geography_ops
    DEFAULT FOR TYPE geography USING btree AS
    OPERATOR 1 <(geography,geography) ,
    OPERATOR 2 <=(geography,geography) ,
    OPERATOR 3 =(geography,geography) ,
    OPERATOR 4 >=(geography,geography) ,
    OPERATOR 5 >(geography,geography) ,
    FUNCTION 1 (geography, geography) geography_cmp(geography,geography);


--
-- TOC entry 2686 (class 2616 OID 3458477)
-- Name: btree_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geometry_ops
    DEFAULT FOR TYPE geometry USING btree AS
    OPERATOR 1 <(geometry,geometry) ,
    OPERATOR 2 <=(geometry,geometry) ,
    OPERATOR 3 =(geometry,geometry) ,
    OPERATOR 4 >=(geometry,geometry) ,
    OPERATOR 5 >(geometry,geometry) ,
    FUNCTION 1 (geometry, geometry) geometry_cmp(geometry,geometry);


--
-- TOC entry 2688 (class 2616 OID 3459222)
-- Name: gist_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geography_ops
    DEFAULT FOR TYPE geography USING gist AS
    STORAGE gidx ,
    OPERATOR 3 &&(geography,geography) ,
    FUNCTION 1 (geography, geography) geography_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 (geography, geography) geography_gist_union(bytea,internal) ,
    FUNCTION 3 (geography, geography) geography_gist_compress(internal) ,
    FUNCTION 4 (geography, geography) geography_gist_decompress(internal) ,
    FUNCTION 5 (geography, geography) geography_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 (geography, geography) geography_gist_picksplit(internal,internal) ,
    FUNCTION 7 (geography, geography) geography_gist_same(box2d,box2d,internal);


--
-- TOC entry 2687 (class 2616 OID 3458535)
-- Name: gist_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geometry_ops
    DEFAULT FOR TYPE geometry USING gist AS
    STORAGE box2d ,
    OPERATOR 1 <<(geometry,geometry) ,
    OPERATOR 2 &<(geometry,geometry) ,
    OPERATOR 3 &&(geometry,geometry) ,
    OPERATOR 4 &>(geometry,geometry) ,
    OPERATOR 5 >>(geometry,geometry) ,
    OPERATOR 6 ~=(geometry,geometry) ,
    OPERATOR 7 ~(geometry,geometry) ,
    OPERATOR 8 @(geometry,geometry) ,
    OPERATOR 9 &<|(geometry,geometry) ,
    OPERATOR 10 <<|(geometry,geometry) ,
    OPERATOR 11 |>>(geometry,geometry) ,
    OPERATOR 12 |&>(geometry,geometry) ,
    FUNCTION 1 (geometry, geometry) lwgeom_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 (geometry, geometry) lwgeom_gist_union(bytea,internal) ,
    FUNCTION 3 (geometry, geometry) lwgeom_gist_compress(internal) ,
    FUNCTION 4 (geometry, geometry) lwgeom_gist_decompress(internal) ,
    FUNCTION 5 (geometry, geometry) lwgeom_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 (geometry, geometry) lwgeom_gist_picksplit(internal,internal) ,
    FUNCTION 7 (geometry, geometry) lwgeom_gist_same(box2d,box2d,internal);


SET search_path = pg_catalog;

--
-- TOC entry 3138 (class 2605 OID 3458817)
-- Name: CAST (public.box2d AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.box3d) WITH FUNCTION public.box3d(public.box2d) AS IMPLICIT;


--
-- TOC entry 3137 (class 2605 OID 3458818)
-- Name: CAST (public.box2d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.geometry) WITH FUNCTION public.geometry(public.box2d) AS IMPLICIT;


--
-- TOC entry 3131 (class 2605 OID 3458819)
-- Name: CAST (public.box3d AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS box) WITH FUNCTION public.box(public.box3d) AS IMPLICIT;


--
-- TOC entry 3133 (class 2605 OID 3458816)
-- Name: CAST (public.box3d AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.box2d) WITH FUNCTION public.box2d(public.box3d) AS IMPLICIT;


--
-- TOC entry 3132 (class 2605 OID 3458820)
-- Name: CAST (public.box3d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.geometry) WITH FUNCTION public.geometry(public.box3d) AS IMPLICIT;


--
-- TOC entry 3136 (class 2605 OID 3458827)
-- Name: CAST (public.box3d_extent AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box2d) WITH FUNCTION public.box2d(public.box3d_extent) AS IMPLICIT;


--
-- TOC entry 3135 (class 2605 OID 3458826)
-- Name: CAST (public.box3d_extent AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box3d) WITH FUNCTION public.box3d_extent(public.box3d_extent) AS IMPLICIT;


--
-- TOC entry 3134 (class 2605 OID 3458828)
-- Name: CAST (public.box3d_extent AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.geometry) WITH FUNCTION public.geometry(public.box3d_extent) AS IMPLICIT;


--
-- TOC entry 2936 (class 2605 OID 3458824)
-- Name: CAST (bytea AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (bytea AS public.geometry) WITH FUNCTION public.geometry(bytea) AS IMPLICIT;


--
-- TOC entry 3139 (class 2605 OID 3458823)
-- Name: CAST (public.chip AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.chip AS public.geometry) WITH FUNCTION public.geometry(public.chip) AS IMPLICIT;


--
-- TOC entry 3141 (class 2605 OID 3459190)
-- Name: CAST (public.geography AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geography) WITH FUNCTION public.geography(public.geography, integer, boolean) AS IMPLICIT;


--
-- TOC entry 3140 (class 2605 OID 3459209)
-- Name: CAST (public.geography AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geometry) WITH FUNCTION public.geometry(public.geography);


--
-- TOC entry 3127 (class 2605 OID 3458815)
-- Name: CAST (public.geometry AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS box) WITH FUNCTION public.box(public.geometry) AS IMPLICIT;


--
-- TOC entry 3129 (class 2605 OID 3458813)
-- Name: CAST (public.geometry AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box2d) WITH FUNCTION public.box2d(public.geometry) AS IMPLICIT;


--
-- TOC entry 3128 (class 2605 OID 3458814)
-- Name: CAST (public.geometry AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box3d) WITH FUNCTION public.box3d(public.geometry) AS IMPLICIT;


--
-- TOC entry 3125 (class 2605 OID 3458825)
-- Name: CAST (public.geometry AS bytea); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS bytea) WITH FUNCTION public.bytea(public.geometry) AS IMPLICIT;


--
-- TOC entry 3130 (class 2605 OID 3459207)
-- Name: CAST (public.geometry AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.geography) WITH FUNCTION public.geography(public.geometry) AS IMPLICIT;


--
-- TOC entry 3126 (class 2605 OID 3458822)
-- Name: CAST (public.geometry AS text); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS text) WITH FUNCTION public.text(public.geometry) AS IMPLICIT;


--
-- TOC entry 3002 (class 2605 OID 3458821)
-- Name: CAST (text AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (text AS public.geometry) WITH FUNCTION public.geometry(text) AS IMPLICIT;


SET search_path = public, pg_catalog;

SET default_with_oids = false;

--
-- TOC entry 148 (class 1259 OID 3459414)
-- Name: kgs16; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs16 (
    gid integer NOT NULL,
    kgs16 character varying(12),
    s_name character varying(50),
    kgs8 character varying(8),
    g_name character varying(50),
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 149 (class 1259 OID 3459423)
-- Name: pwvm_business; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_business (
    id integer NOT NULL,
    kgs character varying(12),
    wz_full character varying(100),
    wz_2steller character(2),
    headcount integer,
    size integer,
    random_id integer,
    wz_1steller "char",
    house_coordinate character varying
);


--
-- TOC entry 3554 (class 0 OID 0)
-- Dependencies: 149
-- Name: COLUMN pwvm_business.kgs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_business.kgs IS 'Kreisgemeindeschlüssel';


--
-- TOC entry 3555 (class 0 OID 0)
-- Dependencies: 149
-- Name: COLUMN pwvm_business.wz_full; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_business.wz_full IS 'Wirtschaftszweig';


--
-- TOC entry 3556 (class 0 OID 0)
-- Dependencies: 149
-- Name: COLUMN pwvm_business.headcount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_business.headcount IS 'number of employees';


--
-- TOC entry 150 (class 1259 OID 3459429)
-- Name: anzahl_betriebe_je_KGS; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "anzahl_betriebe_je_KGS" AS
    SELECT kgs16.kgs16, kgs16.kgs8, kgs16.s_name, kgs16.g_name, dichtetabelle.count AS anzahl_betriebe, kgs16.the_geom FROM (kgs16 JOIN (SELECT kgs16.kgs16, count(*) AS count FROM (kgs16 JOIN pwvm_business b ON (((b.kgs)::text = (kgs16.kgs16)::text))) WHERE ((kgs16.kgs8)::text = '11000000'::text) GROUP BY kgs16.kgs16) dichtetabelle ON (((dichtetabelle.kgs16)::text = (kgs16.kgs16)::text))) ORDER BY dichtetabelle.count DESC;


--
-- TOC entry 3557 (class 0 OID 0)
-- Dependencies: 150
-- Name: VIEW "anzahl_betriebe_je_KGS"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON VIEW "anzahl_betriebe_je_KGS" IS 'Die Anzahl von Betrieben je KGS für Berlin';


--
-- TOC entry 151 (class 1259 OID 3459434)
-- Name: gis_housecoordinate; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_housecoordinate (
    s1 character varying,
    s2 character varying NOT NULL,
    s3 character varying,
    s4 character varying,
    s5 character varying,
    s6 character varying,
    s7 character varying,
    s8 character varying,
    s9 character varying,
    s10 character varying,
    s11 character varying,
    s12 character varying,
    s13 character varying,
    s14 character varying,
    s15 character varying,
    s16 character varying,
    s17 character varying,
    s18 character varying,
    s19 character varying,
    s20 character varying,
    s21 character varying,
    s22 character varying,
    s23 character varying,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 152 (class 1259 OID 3459443)
-- Name: pwvm_household; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_household (
    idhh integer NOT NULL,
    bez_id integer,
    tvz integer,
    homex double precision,
    homey double precision,
    phh smallint,
    carshh smallint,
    hh_eink smallint,
    house_coordinate character varying
);


--
-- TOC entry 3558 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.idhh; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.idhh IS 'unique ID -> use this for linking to TAPAS';


--
-- TOC entry 3559 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.bez_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.bez_id IS 'die 16 Berliner Bezirke (Mitte, Kreuzberg, ...)';


--
-- TOC entry 3560 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.tvz; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.tvz IS 'the tvz ID as used in TAPAS';


--
-- TOC entry 3561 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.homex; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.homex IS 'x coordinate in WGS84 from TAPAS (Andreas Justen) -> centroid of block';


--
-- TOC entry 3562 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.homey; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.homey IS 'y coordinate in WGS84 from TAPAS (Andreas Justen) -> centroid of block';


--
-- TOC entry 3563 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.phh; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.phh IS 'number of people in household (max. 5)';


--
-- TOC entry 3564 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.carshh; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.carshh IS 'number of cars';


--
-- TOC entry 3565 (class 0 OID 0)
-- Dependencies: 152
-- Name: COLUMN pwvm_household.hh_eink; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_household.hh_eink IS 'monthly budget';


--
-- TOC entry 153 (class 1259 OID 3459449)
-- Name: gis_household; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_household AS
    SELECT pwvm_household.idhh, pwvm_household.phh, pwvm_household.carshh, pwvm_household.hh_eink, gis_housecoordinate.s2, gis_housecoordinate.s3, gis_housecoordinate.s4, gis_housecoordinate.s5, gis_housecoordinate.s6, gis_housecoordinate.s7, gis_housecoordinate.s8, gis_housecoordinate.s9, gis_housecoordinate.s10, gis_housecoordinate.s11, gis_housecoordinate.s12, gis_housecoordinate.s13, gis_housecoordinate.s14, gis_housecoordinate.s15, gis_housecoordinate.s16, gis_housecoordinate.s17, gis_housecoordinate.s18, gis_housecoordinate.s19, gis_housecoordinate.s20, gis_housecoordinate.s21, gis_housecoordinate.s22, gis_housecoordinate.s23, gis_housecoordinate.the_geom FROM (pwvm_household JOIN gis_housecoordinate ON (((pwvm_household.house_coordinate)::text = (gis_housecoordinate.s2)::text)));


--
-- TOC entry 154 (class 1259 OID 3459454)
-- Name: anzahl_haushalte_je_KGS; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "anzahl_haushalte_je_KGS" AS
    SELECT kgs16.kgs16, kgs16.kgs8, kgs16.s_name, kgs16.g_name, dichtetabelle.count AS anzahl_haushalte, kgs16.the_geom FROM (kgs16 JOIN (SELECT kgs16.kgs16, count(*) AS count FROM (kgs16 JOIN gis_household h ON (st_covers(kgs16.the_geom, h.the_geom))) WHERE ((kgs16.kgs8)::text = '11000000'::text) GROUP BY kgs16.kgs16) dichtetabelle ON (((dichtetabelle.kgs16)::text = (kgs16.kgs16)::text))) ORDER BY dichtetabelle.count DESC;


--
-- TOC entry 155 (class 1259 OID 3459459)
-- Name: pwvm_borderdefinition; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_borderdefinition (
    id integer NOT NULL,
    description character varying NOT NULL,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3566 (class 0 OID 0)
-- Dependencies: 155
-- Name: TABLE pwvm_borderdefinition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_borderdefinition IS 'Defines geographical borders within which businesses and households are defined. Outside these borders, the lcoation choice algorithm will not differentiate between households and businesses as destination type.';


--
-- TOC entry 156 (class 1259 OID 3459468)
-- Name: berlin; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW berlin AS
    SELECT pwvm_borderdefinition.id, pwvm_borderdefinition.description, pwvm_borderdefinition.the_geom FROM pwvm_borderdefinition WHERE (pwvm_borderdefinition.id = 10);


--
-- TOC entry 157 (class 1259 OID 3459472)
-- Name: berlin_shape; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE berlin_shape (
    id integer,
    description character varying,
    the_geom geometry
);


--
-- TOC entry 158 (class 1259 OID 3459478)
-- Name: gis_block; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_block (
    gid integer NOT NULL,
    blk character varying(6),
    netzf character varying(20),
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 4326))
);


--
-- TOC entry 3567 (class 0 OID 0)
-- Dependencies: 158
-- Name: TABLE gis_block; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE gis_block IS 'enthält die geometrische Lage der (Wohn-)Blöcke in Berlin in Form von Polygonen. In der Attributetabelle befinden sich die Variablen BLK (Block-Nummer) und NETZF (Klassifizierung der Blöcke in Bahnblock, Block (=Wohnblock), Grünblock und Wasserblock).
Gebietsstand: 2002
Quelle: Statistisches Landesamt Berlin';


--
-- TOC entry 159 (class 1259 OID 3459487)
-- Name: block_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE block_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3568 (class 0 OID 0)
-- Dependencies: 159
-- Name: block_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE block_gid_seq OWNED BY gis_block.gid;


--
-- TOC entry 160 (class 1259 OID 3459489)
-- Name: kgs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs (
    gid integer NOT NULL,
    kgs character varying(12),
    s_name character varying(50),
    g_name character varying(50),
    the_geom geometry,
    is_kgs16 boolean NOT NULL,
    svb_2007_wohnort integer,
    svb_2007 integer,
    svb_2002 integer,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3569 (class 0 OID 0)
-- Dependencies: 160
-- Name: COLUMN kgs.svb_2007_wohnort; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs.svb_2007_wohnort IS 'Sozialversicherungspflichtig Beschäftigte nach Wohnort, Stichtag 30.06.2007, Quelle: Bundesagentur für Arbeit';


--
-- TOC entry 3570 (class 0 OID 0)
-- Dependencies: 160
-- Name: COLUMN kgs.svb_2007; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs.svb_2007 IS 'Sozialversicherungspflichtig Beschäftigte nach Arbeitsort, Stichtag 30.06.2007, Quelle: Bundesagentur für Arbeit';


--
-- TOC entry 3571 (class 0 OID 0)
-- Dependencies: 160
-- Name: COLUMN kgs.svb_2002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs.svb_2002 IS 'Sozialversicherungspflichtig Beschäftigte nach Arbeitsort, Stichtag 30.06.2002, Quelle: Bundesagentur für Arbeit';


--
-- TOC entry 161 (class 1259 OID 3459498)
-- Name: business_ohne_location; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW business_ohne_location AS
    SELECT pwvm_business.id, pwvm_business.kgs, pwvm_business.wz_full, pwvm_business.wz_2steller, pwvm_business.headcount, pwvm_business.size, pwvm_business.random_id, pwvm_business.wz_1steller, pwvm_business.house_coordinate, st_centroid(kgs.the_geom) AS st_centroid FROM (pwvm_business JOIN kgs ON (((pwvm_business.kgs)::text = (kgs.kgs)::text))) WHERE (pwvm_business.house_coordinate IS NULL);


--
-- TOC entry 162 (class 1259 OID 3459502)
-- Name: circle2; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW circle2 AS
    SELECT st_difference(st_buffer('0101000020EB7A000021B072F82EC84C41B072680968405641'::geometry, (7823.456724612709)::double precision), st_buffer('0101000020EB7A000021B072F82EC84C41B072680968405641'::geometry, (7723.456724612709)::double precision)) AS st_difference;


--
-- TOC entry 163 (class 1259 OID 3459506)
-- Name: circle3; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW circle3 AS
    SELECT st_difference(st_buffer('0101000020EB7A00005EBA490C63F14C41CDCCCC1C4E455641'::geometry, (86578.59393009206)::double precision), st_buffer('0101000020EB7A00005EBA490C63F14C41CDCCCC1C4E455641'::geometry, (86478.59393009206)::double precision)) AS st_difference;


--
-- TOC entry 164 (class 1259 OID 3459510)
-- Name: circle4; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW circle4 AS
    SELECT st_difference(st_buffer('0101000020EB7A0000713D0AD70EFA4C410C022BB71B375641'::geometry, (195.71507322458083)::double precision), st_buffer('0101000020EB7A0000713D0AD70EFA4C410C022BB71B375641'::geometry, (95.71507322458083)::double precision)) AS st_difference;


--
-- TOC entry 165 (class 1259 OID 3459514)
-- Name: circle5; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW circle5 AS
    SELECT st_difference(st_buffer('0101000020EB7A0000BE9F1ADF84F94C410AD7A3D053375641'::geometry, (446.2473095615786)::double precision), st_buffer('0101000020EB7A0000BE9F1ADF84F94C410AD7A3D053375641'::geometry, (346.2473095615786)::double precision)) AS st_difference;


--
-- TOC entry 166 (class 1259 OID 3459518)
-- Name: gis_dlm_fot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_dlm_fot (
    gid integer NOT NULL,
    objnr character varying(7),
    objtnr character varying(3),
    objart character varying(4),
    objakt smallint,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 167 (class 1259 OID 3459527)
-- Name: fot_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE fot_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3572 (class 0 OID 0)
-- Dependencies: 167
-- Name: fot_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE fot_gid_seq OWNED BY gis_dlm_fot.gid;


--
-- TOC entry 147 (class 1259 OID 3459201)
-- Name: geography_columns; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW geography_columns AS
    SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, geography_typmod_dims(a.atttypmod) AS coord_dimension, geography_typmod_srid(a.atttypmod) AS srid, geography_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE ((((((c.relkind = ANY (ARRAY['r'::"char", 'v'::"char"])) AND (t.typname = 'geography'::name)) AND (a.attisdropped = false)) AND (a.atttypid = t.oid)) AND (a.attrelid = c.oid)) AND (c.relnamespace = n.oid));


SET default_with_oids = true;

--
-- TOC entry 146 (class 1259 OID 3458741)
-- Name: geometry_columns; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE geometry_columns (
    f_table_catalog character varying(256) NOT NULL,
    f_table_schema character varying(256) NOT NULL,
    f_table_name character varying(256) NOT NULL,
    f_geometry_column character varying(256) NOT NULL,
    coord_dimension integer NOT NULL,
    srid integer NOT NULL,
    type character varying(30) NOT NULL
);


--
-- TOC entry 168 (class 1259 OID 3459529)
-- Name: gis_business; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_business AS
    SELECT pwvm_business.id, pwvm_business.wz_full, pwvm_business.wz_2steller, pwvm_business.headcount, pwvm_business.size, pwvm_business.wz_1steller, gis_housecoordinate.s2, gis_housecoordinate.s3, gis_housecoordinate.s4, gis_housecoordinate.s5, gis_housecoordinate.s6, gis_housecoordinate.s7, gis_housecoordinate.s8, gis_housecoordinate.s9, gis_housecoordinate.s10, gis_housecoordinate.s11, gis_housecoordinate.s12, gis_housecoordinate.s13, gis_housecoordinate.s14, gis_housecoordinate.s15, gis_housecoordinate.s16, gis_housecoordinate.s17, gis_housecoordinate.s18, gis_housecoordinate.s19, gis_housecoordinate.s20, gis_housecoordinate.s21, gis_housecoordinate.s22, gis_housecoordinate.s23, gis_housecoordinate.the_geom FROM (pwvm_business JOIN gis_housecoordinate ON (((pwvm_business.house_coordinate)::text = (gis_housecoordinate.s2)::text)));


--
-- TOC entry 169 (class 1259 OID 3459534)
-- Name: gis_business_unique; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_business_unique AS
    SELECT a.number_of_businesses, a.house_coordinate, gis_housecoordinate.s1, gis_housecoordinate.s2, gis_housecoordinate.s3, gis_housecoordinate.s4, gis_housecoordinate.s5, gis_housecoordinate.s6, gis_housecoordinate.s7, gis_housecoordinate.s8, gis_housecoordinate.s9, gis_housecoordinate.s10, gis_housecoordinate.s11, gis_housecoordinate.s12, gis_housecoordinate.s13, gis_housecoordinate.s14, gis_housecoordinate.s15, gis_housecoordinate.s16, gis_housecoordinate.s17, gis_housecoordinate.s18, gis_housecoordinate.s19, gis_housecoordinate.s20, gis_housecoordinate.s21, gis_housecoordinate.s22, gis_housecoordinate.s23, gis_housecoordinate.the_geom FROM ((SELECT count(*) AS number_of_businesses, pwvm_business.house_coordinate FROM pwvm_business GROUP BY pwvm_business.house_coordinate) a JOIN gis_housecoordinate ON (((a.house_coordinate)::text = (gis_housecoordinate.s2)::text)));


--
-- TOC entry 170 (class 1259 OID 3459539)
-- Name: gis_flaeche_baulich_gepraegt_mit_besonderer_funktion; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_flaeche_baulich_gepraegt_mit_besonderer_funktion AS
    SELECT fot.gid, fot.objnr, fot.objtnr, fot.objart, fot.objakt, fot.the_geom FROM gis_dlm_fot fot WHERE ((fot.objart)::text = '2114'::text);


--
-- TOC entry 171 (class 1259 OID 3459543)
-- Name: gis_flaeche_gemischter_nutzung; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_flaeche_gemischter_nutzung AS
    SELECT fot.gid, fot.objnr, fot.objtnr, fot.objart, fot.objakt, fot.the_geom FROM gis_dlm_fot fot WHERE ((fot.objart)::text = '2113'::text);


--
-- TOC entry 172 (class 1259 OID 3459547)
-- Name: gis_household_unique; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_household_unique AS
    SELECT a.number_of_households, a.house_coordinate, gis_housecoordinate.s1, gis_housecoordinate.s2, gis_housecoordinate.s3, gis_housecoordinate.s4, gis_housecoordinate.s5, gis_housecoordinate.s6, gis_housecoordinate.s7, gis_housecoordinate.s8, gis_housecoordinate.s9, gis_housecoordinate.s10, gis_housecoordinate.s11, gis_housecoordinate.s12, gis_housecoordinate.s13, gis_housecoordinate.s14, gis_housecoordinate.s15, gis_housecoordinate.s16, gis_housecoordinate.s17, gis_housecoordinate.s18, gis_housecoordinate.s19, gis_housecoordinate.s20, gis_housecoordinate.s21, gis_housecoordinate.s22, gis_housecoordinate.s23, gis_housecoordinate.the_geom FROM ((SELECT count(*) AS number_of_households, pwvm_household.house_coordinate FROM pwvm_household GROUP BY pwvm_household.house_coordinate) a JOIN gis_housecoordinate ON (((a.house_coordinate)::text = (gis_housecoordinate.s2)::text)));


--
-- TOC entry 173 (class 1259 OID 3459552)
-- Name: gis_industrie_und_gewerbeflaeche; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_industrie_und_gewerbeflaeche AS
    SELECT fot.gid, fot.objnr, fot.objtnr, fot.objart, fot.objakt, fot.the_geom FROM gis_dlm_fot fot WHERE ((fot.objart)::text = '2112'::text);


SET default_with_oids = false;

--
-- TOC entry 174 (class 1259 OID 3459556)
-- Name: gis_ptv; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_ptv (
    gid integer NOT NULL,
    no integer,
    code character varying(1),
    name character varying(28),
    typeno smallint,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 175 (class 1259 OID 3459565)
-- Name: gis_teilverkehrszelle; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_teilverkehrszelle (
    tvz integer NOT NULL,
    the_geom geometry,
    tvz_orig integer,
    CONSTRAINT enforce_dims_the_geom3 CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom3 CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom3 CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3573 (class 0 OID 0)
-- Dependencies: 175
-- Name: TABLE gis_teilverkehrszelle; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE gis_teilverkehrszelle IS 'importiert aus dem Shapefile tvz_Berlin von Andreas Justen. Es enthaelt alle Teilverkehrszellen Berlins reduziert um 4 Stueck und wird in dieser Form fuer TAPAS verwendet. Teilverkehrszellen wurden laut Landesamt fuer Statistik Berlin-Brandenburg einmalig definiert und veraendern sich nicht im Laufe der Zeit.';


--
-- TOC entry 3574 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN gis_teilverkehrszelle.tvz; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gis_teilverkehrszelle.tvz IS 'ID der Teilverkehrszellen wie in TAPAS verwendet.';


--
-- TOC entry 3575 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN gis_teilverkehrszelle.tvz_orig; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gis_teilverkehrszelle.tvz_orig IS 'ID der Teilverkehrszellen, wie sie ursprünglich vom Landesamt für Statistik Berlin-Brandenburg geliefert wurden. TAPAS verwendet jedoch eine andere Nummerierung.';


--
-- TOC entry 176 (class 1259 OID 3459574)
-- Name: gis_verkehrszelle; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE gis_verkehrszelle (
    gid integer NOT NULL,
    vkz character varying(4),
    vkzname character varying(32),
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 4326))
);


--
-- TOC entry 3576 (class 0 OID 0)
-- Dependencies: 176
-- Name: TABLE gis_verkehrszelle; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE gis_verkehrszelle IS 'enthält die geometrische Lage der Verkehrszellen in Berlin in Form von Polygonen. In der Attributetabelle befinden sich die Variablen VKZ (Verkehrszellen-Nummer) und VKZNAME (Verkehrszellenname).
Gebietsstand: 2002
Quelle: Statistisches Landesamt Berlin';


--
-- TOC entry 177 (class 1259 OID 3459583)
-- Name: gis_wohngebiete; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW gis_wohngebiete AS
    SELECT fot.gid, fot.objnr, fot.objtnr, fot.objart, fot.objakt, fot.the_geom FROM gis_dlm_fot fot WHERE ((fot.objart)::text = '2111'::text);


--
-- TOC entry 178 (class 1259 OID 3459587)
-- Name: kgs16_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE kgs16_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3577 (class 0 OID 0)
-- Dependencies: 178
-- Name: kgs16_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE kgs16_gid_seq OWNED BY kgs16.gid;


--
-- TOC entry 179 (class 1259 OID 3459589)
-- Name: kgs5; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs5 (
    kgs5 character(5) NOT NULL,
    kreistyp integer,
    kreistyp_aggregiert integer,
    bip2000 double precision,
    bip2001 double precision,
    bip2002 double precision,
    bip2003 double precision,
    bip2004 double precision,
    bip2005 double precision,
    bip2006 double precision
);


--
-- TOC entry 3578 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2000; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2000 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3579 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2001; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2001 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3580 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2002 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3581 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2003; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2003 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3582 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2004; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2004 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3583 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2005; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2005 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 3584 (class 0 OID 0)
-- Dependencies: 179
-- Name: COLUMN kgs5.bip2006; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs5.bip2006 IS '"Bruttoinlandsprodukt, Bruttowertschöpfung in den kreisfreien Städten und Landkreisen Deutschlands 1992 und 1994 bis 2006
Reihe 2, Band 1"

Herausgeber:
Arbeitskreis "Volkswirtschaftliche Gesamtrechnungen der Länder" im Auftrag der Statistischen Ämter der 16 Bundesländer, des Statistischen Bundesamtes und des Bürgeramtes, Statistik und Wahlen, Frankfurt a. M.';


--
-- TOC entry 180 (class 1259 OID 3459592)
-- Name: kgs5_x_kid_wz; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs5_x_kid_wz (
    kgs5 character(5) NOT NULL,
    svb integer,
    wz "char" NOT NULL
);


--
-- TOC entry 181 (class 1259 OID 3459595)
-- Name: kgs8; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs8 (
    gid integer NOT NULL,
    kgs8 character varying(8),
    g_name character varying(50),
    the_geom geometry,
    "BBR_Gemeindetyp_2002" smallint,
    "BBR_Kreistyp_2002" smallint,
    "BBR_DifferenzierterRegionstyp_2002" smallint,
    "BBR_Regionstyp_2002" smallint,
    "BBR_Gemeindetyp_2008" smallint,
    "BBR_Kreistyp_2008" smallint,
    "BBR_DifferenzierterRegionstyp_2008" smallint,
    "BBR_Regionstyp_2008" smallint,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3585 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Gemeindetyp_2002"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Gemeindetyp_2002" IS 'BBR-Typologie: Gemeindetyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3586 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Kreistyp_2002"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Kreistyp_2002" IS 'BBR-Typologie: Kreistyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3587 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_DifferenzierterRegionstyp_2002"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_DifferenzierterRegionstyp_2002" IS 'BBR-Typologie: Differenzierter Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3588 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Regionstyp_2002"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Regionstyp_2002" IS 'BBR-Typologie: Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3589 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Gemeindetyp_2008"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Gemeindetyp_2008" IS 'BBR-Typologie: Gemeindetyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2008';


--
-- TOC entry 3590 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Kreistyp_2008"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Kreistyp_2008" IS 'BBR-Typologie: Kreistyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2008';


--
-- TOC entry 3591 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_DifferenzierterRegionstyp_2008"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_DifferenzierterRegionstyp_2008" IS 'BBR-Typologie: Differenzierter Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2008';


--
-- TOC entry 3592 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN kgs8."BBR_Regionstyp_2008"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8."BBR_Regionstyp_2008" IS 'BBR-Typologie: Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2008';


--
-- TOC entry 182 (class 1259 OID 3459604)
-- Name: kgs8_2002; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs8_2002 (
    gid integer NOT NULL,
    area numeric,
    perimeter numeric,
    gem_ bigint,
    gem_id bigint,
    shn character varying(12),
    rau character varying(12),
    use smallint,
    kgs character varying(8),
    gen character varying(50),
    ewz numeric(20,0),
    des character varying(50),
    the_geom geometry,
    svb_2002 integer,
    regionstyp smallint,
    differenzierterregionstyp smallint,
    kreistyp smallint,
    gemeindetyp smallint,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3593 (class 0 OID 0)
-- Dependencies: 182
-- Name: TABLE kgs8_2002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE kgs8_2002 IS 'Quelle: Bundesamt fuer Kartographie und Geodaesie
Aktualitaet: 31.12.2002';


--
-- TOC entry 3594 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.kgs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.kgs IS 'KGS8 Schlüssel';


--
-- TOC entry 3595 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.svb_2002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.svb_2002 IS 'Statistik der Bundesagentur für Arbeit: Sozialversicherungspflichtig Beschäftigte (SvB) am Arbeitsort (AO), Nürnberg, 31.12.2002';


--
-- TOC entry 3596 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.regionstyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.regionstyp IS 'BBR-Typologie: Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3597 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.differenzierterregionstyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.differenzierterregionstyp IS 'BBR-Typologie: Differenzierter Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3598 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.kreistyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.kreistyp IS 'BBR-Typologie: Kreistyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3599 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN kgs8_2002.gemeindetyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kgs8_2002.gemeindetyp IS 'BBR-Typologie: Gemeindetyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 183 (class 1259 OID 3459613)
-- Name: kgs8_2003; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kgs8_2003 (
    gid integer NOT NULL,
    objectid bigint,
    use integer,
    rs character varying(12),
    rau_rs character varying(12),
    rau_shn character varying(12),
    gen character varying(50),
    des character varying(50),
    ags character varying(8),
    shn character varying(13),
    shn_alt character varying(12),
    ewz integer,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 184 (class 1259 OID 3459622)
-- Name: kgs8_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE kgs8_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3600 (class 0 OID 0)
-- Dependencies: 184
-- Name: kgs8_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE kgs8_gid_seq OWNED BY kgs8.gid;


--
-- TOC entry 185 (class 1259 OID 3459624)
-- Name: kgs_2002_gid_seq1; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE kgs_2002_gid_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3601 (class 0 OID 0)
-- Dependencies: 185
-- Name: kgs_2002_gid_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE kgs_2002_gid_seq1 OWNED BY kgs8_2002.gid;


--
-- TOC entry 186 (class 1259 OID 3459626)
-- Name: kgs_2003_gid_seq1; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE kgs_2003_gid_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3602 (class 0 OID 0)
-- Dependencies: 186
-- Name: kgs_2003_gid_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE kgs_2003_gid_seq1 OWNED BY kgs8_2003.gid;


--
-- TOC entry 187 (class 1259 OID 3459628)
-- Name: kgs_betrieb_zuordnung_fehlerhaft; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW kgs_betrieb_zuordnung_fehlerhaft AS
    SELECT kgs.the_geom FROM kgs WHERE ((kgs.kgs)::text IN (SELECT pwvm_business.kgs FROM pwvm_business WHERE ((pwvm_business.house_coordinate IS NULL) AND ((pwvm_business.kgs)::text <> '11000000'::text))));


--
-- TOC entry 188 (class 1259 OID 3459632)
-- Name: kgs_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE kgs_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3603 (class 0 OID 0)
-- Dependencies: 188
-- Name: kgs_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE kgs_gid_seq OWNED BY kgs.gid;


--
-- TOC entry 189 (class 1259 OID 3459634)
-- Name: kid_auswertung_nach_kgs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kid_auswertung_nach_kgs (
    kgs8 character varying(8),
    the_geom geometry,
    avg_distance double precision,
    avg_anzahlfahrten double precision
);


SET default_with_oids = true;

--
-- TOC entry 190 (class 1259 OID 3459640)
-- Name: kid_fahrt; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kid_fahrt (
    fahrzeugid integer NOT NULL,
    fahrtid integer NOT NULL,
    f01 character varying(50),
    f02a character varying(50),
    f02b character varying(50),
    f02c character varying(50),
    f02d character varying(50),
    f02e character varying(50),
    f02f character varying(50),
    f03 character varying(50),
    f04 character varying(50),
    f05 character varying(50),
    f06 character varying(50),
    f07a character varying(50),
    f07b character varying(50),
    f08a character varying(50),
    f08b character varying(50),
    f08c character varying(50),
    f08d character varying(50),
    f08e character varying(50),
    f08f character varying(50),
    f09 character varying(50),
    f10a character varying(50),
    f10b character varying(50),
    f11a character varying(50),
    f11b character varying(50),
    f11c character varying(50),
    f11d character varying(50),
    f11e character varying(50),
    f11f character varying(50),
    f11g character varying(50),
    f11h character varying(50),
    f11i character varying(50),
    f11j character varying(50),
    f12 character varying(50),
    f13 character varying(50),
    f14 character varying(50),
    f15 character varying(50),
    f16 character varying(50),
    f17 character varying(50),
    f80 character varying(50),
    f81 character varying(50),
    f02_geom geometry,
    f08_geom geometry,
    CONSTRAINT enforce_dims_f02_geom CHECK ((ndims(f02_geom) = 2)),
    CONSTRAINT enforce_dims_f08_geom CHECK ((ndims(f08_geom) = 2)),
    CONSTRAINT enforce_geotype_f02_geom CHECK (((geometrytype(f02_geom) = 'POINT'::text) OR (f02_geom IS NULL))),
    CONSTRAINT enforce_geotype_f08_geom CHECK (((geometrytype(f08_geom) = 'POINT'::text) OR (f08_geom IS NULL))),
    CONSTRAINT enforce_srid_f02_geom CHECK ((srid(f02_geom) = 31467)),
    CONSTRAINT enforce_srid_f08_geom CHECK ((srid(f08_geom) = 31467))
);


--
-- TOC entry 3604 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.fahrtid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.fahrtid IS 'FahrtId (FahrzeugId + FahrtId = primary key)';


--
-- TOC entry 3605 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f01; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f01 IS 'Fahrerwechsel vor Fahrtbeginn (Vergleich zur vorherigen Fahrt)';


--
-- TOC entry 3606 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f02a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f02a IS 'Quelladresse (nur bei erster Fahrt, bei den weiteren Fahrten ergibt sie sich aus den vorherigen)';


--
-- TOC entry 3607 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f03; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f03 IS 'Art der Quelle';


--
-- TOC entry 3608 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f04; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f04 IS 'Abfahrtszeit [hh:mm] (mit [-1:-1]: keine Angabe)';


--
-- TOC entry 3609 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f05; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f05 IS 'Anzahl der Personen im Fahrzeug';


--
-- TOC entry 3610 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f06; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f06 IS 'Anh„nger dabei?';


--
-- TOC entry 3611 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f07a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f07a IS 'Fahrtzweck / Nutzungsart';


--
-- TOC entry 3612 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f08a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f08a IS 'Zieladresse';


--
-- TOC entry 3613 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f09; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f09 IS 'Art des Ziels';


--
-- TOC entry 3614 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f10a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f10a IS 'Ankunftszeit (ab der 12. Fahrt immer "-9")';


--
-- TOC entry 3615 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11a IS 'Form der Ladung - keine GЃter';


--
-- TOC entry 3616 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11b; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11b IS 'Form der Ladung - FlЃssige MassengЃter (unverpackt)';


--
-- TOC entry 3617 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11c; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11c IS 'Form der Ladung - Trockene MassengЃter (unverpackt)';


--
-- TOC entry 3618 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11d; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11d IS 'Form der Ladung - Beh„lter/Wechselaufbau <= 6m';


--
-- TOC entry 3619 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11e; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11e IS 'Form der Ladung - Beh„lter/Wechselaufbau > 6m';


--
-- TOC entry 3620 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11f; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11f IS 'Form der Ladung - Fahrzeuge ohne eigenen Antrieb';


--
-- TOC entry 3621 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11g; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11g IS 'Form der Ladung - Fahrzeuge mit eigenem Antrieb';


--
-- TOC entry 3622 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11h IS 'Form der Ladung - Palletiertes Gut';


--
-- TOC entry 3623 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11i; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11i IS 'Form der Ladung - Gebundene GЃter';


--
-- TOC entry 3624 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f11j; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f11j IS 'Form der Ladung - Andere GЃter';


--
-- TOC entry 3625 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f12; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f12 IS 'Gewicht der Ladung [kg] (ab der 12. Fahrt immer "-9", bei privaten Fahrten auch)';


--
-- TOC entry 3626 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f13; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f13 IS 'GЃterart (als Klartext, ab der 12. Fahrt immer "-9")';


--
-- TOC entry 3627 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f14; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f14 IS 'Fahrtweite [km]';


--
-- TOC entry 3628 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f15; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f15 IS 'Fahrtdauer [min] (berechnet aus F04 u. F10)';


--
-- TOC entry 3629 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f16; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f16 IS 'Art der Fahrt (Einzelfahrt oder Mehrfahrtenfahrt)';


--
-- TOC entry 3630 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f17; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f17 IS 'Anzahl der Fahrtabschnitte (bei Mehrfahrtenfahrt)';


--
-- TOC entry 3631 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f80; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f80 IS 'Geschlecht Fahrer';


--
-- TOC entry 3632 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f81; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f81 IS 'Alter Fahrer';


--
-- TOC entry 3633 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f02_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f02_geom IS 'Koordinate des Starts (errechnet aus f02d und f02e)';


--
-- TOC entry 3634 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN kid_fahrt.f08_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrt.f08_geom IS 'Koordinate des Ziels (errechnet aus f08d und f08e)';


SET default_with_oids = false;

--
-- TOC entry 191 (class 1259 OID 3459652)
-- Name: kid_fahrzeug; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kid_fahrzeug (
    fahrzeugid integer NOT NULL,
    k01 character varying(50),
    k02a character varying(50),
    k02b character varying(50),
    k02c character varying(50),
    k03 character varying(50),
    k04 character varying(50),
    k05 character varying(50),
    k06 character varying(50),
    k07 character varying(50),
    k08 character varying(50),
    k09 character varying(50),
    k10 character varying(50),
    k11 character varying(50),
    k12 character varying(50),
    k13 character varying(50),
    k14 character varying(50),
    k15 character varying(50),
    k16a character varying(50),
    k16b character varying(50),
    k17 character varying(50),
    k18a character varying(50),
    k18b character varying(50),
    k19a character varying(50),
    k19b character varying(50),
    k20 character varying(50),
    k21 character varying(50),
    k22a character varying(50),
    k22b character varying(50),
    k22c character varying(50),
    k22d character varying(50),
    k22e character varying(50),
    k22f character varying(50),
    k23 character varying(50),
    k24a character varying(50),
    k24b character varying(50),
    k24c character varying(50),
    k24d character varying(50),
    k24e character varying(50),
    k24f character varying(50),
    k25 character varying(50),
    k26 character varying(50),
    k27 character varying(50),
    k28 character varying(50),
    k29 character varying(50),
    k30 character varying(50),
    k31 character varying(50),
    k32 character varying(50),
    k33 character varying(50),
    k34 character varying(50),
    k35 character varying(50),
    k36 character varying(50),
    h01 character varying(50),
    h02a character varying(50),
    h02b character varying(50),
    h02c character varying(50),
    h02d character varying(50),
    h02e character varying(50),
    h02f character varying(50),
    h03 character varying(50),
    h04 character varying(50),
    h05 integer,
    h06a character varying(50),
    h06b character varying(50),
    h06c character varying(50),
    h06d character varying(50),
    h06e character varying(50),
    h06f character varying(50),
    h06g character varying(50),
    k90 character varying(50),
    k91 character varying(50),
    k92 character varying(50),
    k24_geom geometry,
    CONSTRAINT enforce_dims_k24_geom CHECK ((ndims(k24_geom) = 2)),
    CONSTRAINT enforce_geotype_k24_geom CHECK (((geometrytype(k24_geom) = 'POINT'::text) OR (k24_geom IS NULL))),
    CONSTRAINT enforce_srid_k24_geom CHECK ((srid(k24_geom) = 31467))
);


--
-- TOC entry 3635 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.k01; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.k01 IS 'Fahrzeugart';


--
-- TOC entry 3636 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.k19b; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.k19b IS 'Wirtschaftszweig laut ZFZR';


--
-- TOC entry 3637 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.k24a; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.k24a IS 'gewoehnlicher Fahrzeugstandort';


--
-- TOC entry 3638 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.k34; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.k34 IS 'Gesamtfahrleistung am Stichtag';


--
-- TOC entry 3639 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.h01; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.h01 IS 'Wirtschaftszweig laut Fragebogen';


--
-- TOC entry 3640 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.h05; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.h05 IS 'Anzahl Mitarbeiter/Haushaltsmitglieder';


--
-- TOC entry 3641 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN kid_fahrzeug.k24_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN kid_fahrzeug.k24_geom IS 'Tatsaechlicher Fahrzeugstandort (errechnet aus k24d und k24e)';


--
-- TOC entry 192 (class 1259 OID 3459661)
-- Name: pwvm_logbook; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logbook (
    id integer NOT NULL,
    source_type integer NOT NULL,
    "kid_vehicleId" integer NOT NULL,
    source_plz character varying(5),
    business_wz "char" NOT NULL,
    business_headcountclass integer,
    source_kgs character varying(10),
    the_geom geometry,
    vehicletype integer,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3642 (class 0 OID 0)
-- Dependencies: 192
-- Name: TABLE pwvm_logbook; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_logbook IS 'contains all logbooks with a PersoWiVe context that were derived from KiD';


--
-- TOC entry 3643 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN pwvm_logbook.the_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook.the_geom IS 'Ort, an dem das Fahrtenbuch startet. (f02)';


--
-- TOC entry 3644 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN pwvm_logbook.vehicletype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook.vehicletype IS 'Fahrzeugart';


--
-- TOC entry 193 (class 1259 OID 3459670)
-- Name: pwvm_logbook_trip; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logbook_trip (
    "tripId" integer NOT NULL,
    dest_type integer NOT NULL,
    dest_plz character varying(5),
    purpose integer NOT NULL,
    z_source double precision,
    distance_empirical double precision NOT NULL,
    "logbookId" integer NOT NULL,
    dest_kgs character varying(10),
    the_geom geometry,
    z_home double precision,
    distance double precision,
    start_time time without time zone,
    stop_time time without time zone,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 3645 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.purpose; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.purpose IS 'WZ';


--
-- TOC entry 3646 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.z_source; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.z_source IS 'distance from waypoint (dest) to source in meters';


--
-- TOC entry 3647 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.distance_empirical; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.distance_empirical IS 'distance to previous waypoint in km as provided from empirical data';


--
-- TOC entry 3648 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.the_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.the_geom IS 'Wegpunkt (f08)';


--
-- TOC entry 3649 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.z_home; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.z_home IS 'distance from waypoint (dest) to home business in meters';


--
-- TOC entry 3650 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN pwvm_logbook_trip.distance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logbook_trip.distance IS 'airline distance';


--
-- TOC entry 194 (class 1259 OID 3459679)
-- Name: kid_logbook_path; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW kid_logbook_path AS
    SELECT p.id AS lb_id, p.source_type, p."kid_vehicleId", p.business_wz, p.business_headcountclass, p.vehicletype, (SELECT st_linefrommultipoint(collect(tmp.waypoint_geometry)) AS st_linefrommultipoint FROM (SELECT pwvm_logbook.id, 0 AS trip_id, pwvm_logbook.the_geom AS waypoint_geometry FROM pwvm_logbook WHERE (pwvm_logbook.id = p.id) UNION SELECT pwvm_logbook_trip."logbookId", pwvm_logbook_trip."tripId", pwvm_logbook_trip.the_geom FROM pwvm_logbook_trip WHERE (pwvm_logbook_trip."logbookId" = p.id) ORDER BY 2) tmp GROUP BY tmp.id) AS collect FROM pwvm_logbook p;


--
-- TOC entry 195 (class 1259 OID 3459684)
-- Name: kid_logbook_routes_persistent; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE kid_logbook_routes_persistent (
    lb_id integer,
    source_type integer,
    "kid_vehicleId" integer,
    business_wz "char",
    business_headcountclass integer,
    vehicletype integer,
    collect geometry
);


--
-- TOC entry 197 (class 1259 OID 3459696)
-- Name: pwvm_logmessages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages (
    id integer NOT NULL,
    type integer,
    message character varying,
    "logbookId" integer
);


--
-- TOC entry 3651 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN pwvm_logmessages."logbookId"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_logmessages."logbookId" IS 'the id of the logbook that the message corresponds to';


--
-- TOC entry 196 (class 1259 OID 3459690)
-- Name: pwvm_tlogmessage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_tlogmessage (
    type integer NOT NULL,
    "desc" character varying
);


--
-- TOC entry 198 (class 1259 OID 3459702)
-- Name: logsummary; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW logsummary AS
    SELECT a.count, a.type, b."desc" FROM ((SELECT count(*) AS count, pwvm_logmessages.type FROM pwvm_logmessages GROUP BY pwvm_logmessages.type ORDER BY count(*) DESC) a LEFT JOIN pwvm_tlogmessage b ON ((b.type = a.type)));


--
-- TOC entry 199 (class 1259 OID 3459706)
-- Name: lot_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lot_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 279 (class 1259 OID 6788449)
-- Name: mapping; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE mapping (
    bezirke character varying,
    bundesland character varying
);


--
-- TOC entry 200 (class 1259 OID 3459708)
-- Name: pwvm_matrix; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix (
    id integer NOT NULL,
    business_id integer NOT NULL,
    purpose integer NOT NULL,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone,
    sourcetype integer,
    CONSTRAINT enforce_dims_dest_geom CHECK ((ndims(dest_geom) = 2)),
    CONSTRAINT enforce_dims_source_geom CHECK ((ndims(source_geom) = 2)),
    CONSTRAINT enforce_geotype_dest_geom CHECK (((geometrytype(dest_geom) = 'POINT'::text) OR (dest_geom IS NULL))),
    CONSTRAINT enforce_geotype_source_geom CHECK (((geometrytype(source_geom) = 'POINT'::text) OR (source_geom IS NULL))),
    CONSTRAINT enforce_srid_dest_geom CHECK ((srid(dest_geom) = 31467)),
    CONSTRAINT enforce_srid_source_geom CHECK ((srid(source_geom) = 31467))
);


--
-- TOC entry 3652 (class 0 OID 0)
-- Dependencies: 200
-- Name: TABLE pwvm_matrix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_matrix IS 'the generated trip matrix';


--
-- TOC entry 3653 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN pwvm_matrix.business_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_matrix.business_id IS 'the business that generated the trip';


--
-- TOC entry 3654 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN pwvm_matrix.purpose; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_matrix.purpose IS 'the trip''s purpose. Use this column to filter for service traffic.';


--
-- TOC entry 3655 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN pwvm_matrix.logbook_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_matrix.logbook_id IS 'the id of the logbook which this trip is part

This is not the original template logbook''s id.';


--
-- TOC entry 3656 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN pwvm_matrix.trip_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pwvm_matrix.trip_id IS 'this trip''s position within the logbook logbook_id';


--
-- TOC entry 201 (class 1259 OID 3459720)
-- Name: matrix_auswertung_avg_trip_number; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW matrix_auswertung_avg_trip_number AS
    SELECT avg(tmp.count) AS avg_trips_per_logbook FROM (SELECT count(*) AS count FROM pwvm_matrix GROUP BY pwvm_matrix.logbook_id) tmp;


--
-- TOC entry 202 (class 1259 OID 3459724)
-- Name: nam_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE nam_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 203 (class 1259 OID 3459726)
-- Name: nuts0; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE nuts0 (
    gid integer NOT NULL,
    objectid integer,
    nuts character varying(2),
    name character varying(25),
    population integer,
    males integer,
    females integer,
    households integer,
    pers_hh double precision,
    pop_growth integer,
    pop_densit integer,
    dwellings integer,
    age_0_14 integer,
    age_15_29 integer,
    age_30_44 integer,
    age_45_59 integer,
    age_60_ integer,
    pp_incntry character varying(14),
    pp_categor character varying(14),
    pp_growth character varying(7),
    gdp integer,
    employed integer,
    sqkm double precision,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 204 (class 1259 OID 3459735)
-- Name: nuts0_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE nuts0_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3657 (class 0 OID 0)
-- Dependencies: 204
-- Name: nuts0_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE nuts0_gid_seq OWNED BY nuts0.gid;


--
-- TOC entry 205 (class 1259 OID 3459737)
-- Name: nuts1; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE nuts1 (
    gid integer NOT NULL,
    objectid integer,
    nuts character varying(3),
    name character varying(62),
    nuts0 character varying(2),
    population integer,
    males integer,
    females integer,
    households integer,
    pers_hh double precision,
    pop_growth integer,
    pop_densit integer,
    dwellings integer,
    age_0_14 integer,
    age_15_29 integer,
    age_30_44 integer,
    age_45_59 integer,
    age_60_ integer,
    pp_incntry character varying(14),
    pp_categor character varying(14),
    pp_growth character varying(11),
    gdp integer,
    employed integer,
    sqkm double precision,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 206 (class 1259 OID 3459746)
-- Name: nuts1_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE nuts1_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3658 (class 0 OID 0)
-- Dependencies: 206
-- Name: nuts1_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE nuts1_gid_seq OWNED BY nuts1.gid;


--
-- TOC entry 207 (class 1259 OID 3459748)
-- Name: nuts2; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE nuts2 (
    gid integer NOT NULL,
    objectid integer,
    nuts character varying(4),
    name character varying(62),
    nuts0 character varying(2),
    population integer,
    males integer,
    females integer,
    households integer,
    pers_hh double precision,
    pop_growth integer,
    pop_densit integer,
    dwellings integer,
    age_0_14 integer,
    age_15_29 integer,
    age_30_44 integer,
    age_45_59 integer,
    age_60_ integer,
    pp_incntry character varying(14),
    pp_categor character varying(14),
    pp_growth character varying(11),
    gdp integer,
    employed integer,
    sqkm double precision,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 208 (class 1259 OID 3459757)
-- Name: nuts2_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE nuts2_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3659 (class 0 OID 0)
-- Dependencies: 208
-- Name: nuts2_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE nuts2_gid_seq OWNED BY nuts2.gid;


--
-- TOC entry 209 (class 1259 OID 3459759)
-- Name: nuts3; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE nuts3 (
    gid integer NOT NULL,
    objectid integer,
    nuts character varying(5),
    name character varying(55),
    nuts0 character varying(5),
    population integer,
    males integer,
    females integer,
    households integer,
    pers_hh double precision,
    pop_growth integer,
    pop_densit integer,
    dwellings integer,
    age_0_14 integer,
    age_15_29 integer,
    age_30_44 integer,
    age_45_59 integer,
    age_60_ integer,
    pp_incntry character varying(14),
    pp_categor character varying(14),
    pp_growth character varying(11),
    gdp integer,
    employed integer,
    sqkm double precision,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 210 (class 1259 OID 3459768)
-- Name: nuts3_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE nuts3_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3660 (class 0 OID 0)
-- Dependencies: 210
-- Name: nuts3_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE nuts3_gid_seq OWNED BY nuts3.gid;


--
-- TOC entry 211 (class 1259 OID 3459770)
-- Name: obj_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE obj_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 212 (class 1259 OID 3459772)
-- Name: paultest; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW paultest AS
    SELECT kid_fahrzeug.fahrzeugid, kid_fahrzeug.k01, kid_fahrzeug.k02a, kid_fahrzeug.k02b, kid_fahrzeug.k02c, kid_fahrzeug.k03, kid_fahrzeug.k04, kid_fahrzeug.k05, kid_fahrzeug.k06, kid_fahrzeug.k07, kid_fahrzeug.k08, kid_fahrzeug.k09, kid_fahrzeug.k10, kid_fahrzeug.k11, kid_fahrzeug.k12, kid_fahrzeug.k13, kid_fahrzeug.k14, kid_fahrzeug.k15, kid_fahrzeug.k16a, kid_fahrzeug.k16b, kid_fahrzeug.k17, kid_fahrzeug.k18a, kid_fahrzeug.k18b, kid_fahrzeug.k19a, kid_fahrzeug.k19b, kid_fahrzeug.k20, kid_fahrzeug.k21, kid_fahrzeug.k22a, kid_fahrzeug.k22b, kid_fahrzeug.k22c, kid_fahrzeug.k22d, kid_fahrzeug.k22e, kid_fahrzeug.k22f, kid_fahrzeug.k23, kid_fahrzeug.k24a, kid_fahrzeug.k24b, kid_fahrzeug.k24c, kid_fahrzeug.k24d, kid_fahrzeug.k24e, kid_fahrzeug.k24f, kid_fahrzeug.k25, kid_fahrzeug.k26, kid_fahrzeug.k27, kid_fahrzeug.k28, kid_fahrzeug.k29, kid_fahrzeug.k30, kid_fahrzeug.k31, kid_fahrzeug.k32, kid_fahrzeug.k33, kid_fahrzeug.k34, kid_fahrzeug.k35, kid_fahrzeug.k36, kid_fahrzeug.h01, kid_fahrzeug.h02a, kid_fahrzeug.h02b, kid_fahrzeug.h02c, kid_fahrzeug.h02d, kid_fahrzeug.h02e, kid_fahrzeug.h02f, kid_fahrzeug.h03, kid_fahrzeug.h04, kid_fahrzeug.h05, kid_fahrzeug.h06a, kid_fahrzeug.h06b, kid_fahrzeug.h06c, kid_fahrzeug.h06d, kid_fahrzeug.h06e, kid_fahrzeug.h06f, kid_fahrzeug.h06g, kid_fahrzeug.k90, kid_fahrzeug.k91, kid_fahrzeug.k92, kid_fahrzeug.k24_geom FROM kid_fahrzeug WHERE (((((((((((((((((((((((((((((((((((((((((((((((((kid_fahrzeug.fahrzeugid = 1482571) OR (kid_fahrzeug.fahrzeugid = 1483639)) OR (kid_fahrzeug.fahrzeugid = 1484272)) OR (kid_fahrzeug.fahrzeugid = 1492369)) OR (kid_fahrzeug.fahrzeugid = 1500144)) OR (kid_fahrzeug.fahrzeugid = 1501025)) OR (kid_fahrzeug.fahrzeugid = 1501203)) OR (kid_fahrzeug.fahrzeugid = 1501360)) OR (kid_fahrzeug.fahrzeugid = 1501575)) OR (kid_fahrzeug.fahrzeugid = 2020936)) OR (kid_fahrzeug.fahrzeugid = 2070234)) OR (kid_fahrzeug.fahrzeugid = 2070470)) OR (kid_fahrzeug.fahrzeugid = 2080156)) OR (kid_fahrzeug.fahrzeugid = 2081739)) OR (kid_fahrzeug.fahrzeugid = 2094424)) OR (kid_fahrzeug.fahrzeugid = 2100749)) OR (kid_fahrzeug.fahrzeugid = 2102316)) OR (kid_fahrzeug.fahrzeugid = 2114863)) OR (kid_fahrzeug.fahrzeugid = 2120165)) OR (kid_fahrzeug.fahrzeugid = 2120973)) OR (kid_fahrzeug.fahrzeugid = 2130970)) OR (kid_fahrzeug.fahrzeugid = 2150848)) OR (kid_fahrzeug.fahrzeugid = 2151026)) OR (kid_fahrzeug.fahrzeugid = 2161042)) OR (kid_fahrzeug.fahrzeugid = 2161126)) OR (kid_fahrzeug.fahrzeugid = 2171169)) OR (kid_fahrzeug.fahrzeugid = 2230406)) OR (kid_fahrzeug.fahrzeugid = 2232206)) OR (kid_fahrzeug.fahrzeugid = 2242425)) OR (kid_fahrzeug.fahrzeugid = 2250143)) OR (kid_fahrzeug.fahrzeugid = 2251920)) OR (kid_fahrzeug.fahrzeugid = 2252065)) OR (kid_fahrzeug.fahrzeugid = 2260609)) OR (kid_fahrzeug.fahrzeugid = 2280464)) OR (kid_fahrzeug.fahrzeugid = 2281318)) OR (kid_fahrzeug.fahrzeugid = 2330545)) OR (kid_fahrzeug.fahrzeugid = 2341339)) OR (kid_fahrzeug.fahrzeugid = 2341458)) OR (kid_fahrzeug.fahrzeugid = 2350471)) OR (kid_fahrzeug.fahrzeugid = 2371055)) OR (kid_fahrzeug.fahrzeugid = 2371753)) OR (kid_fahrzeug.fahrzeugid = 2380333)) OR (kid_fahrzeug.fahrzeugid = 2380628)) OR (kid_fahrzeug.fahrzeugid = 2380912)) OR (kid_fahrzeug.fahrzeugid = 2401307)) OR (kid_fahrzeug.fahrzeugid = 2410952)) OR (kid_fahrzeug.fahrzeugid = 2421113)) OR (kid_fahrzeug.fahrzeugid = 2422835)) OR (kid_fahrzeug.fahrzeugid = 2460112));


--
-- TOC entry 213 (class 1259 OID 3459777)
-- Name: plz; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE plz (
    gid integer NOT NULL,
    plz character varying(5),
    name character varying(50),
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 214 (class 1259 OID 3459786)
-- Name: plz_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE plz_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3661 (class 0 OID 0)
-- Dependencies: 214
-- Name: plz_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE plz_gid_seq OWNED BY plz.gid;


--
-- TOC entry 215 (class 1259 OID 3459788)
-- Name: pot_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pot_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 216 (class 1259 OID 3459790)
-- Name: problemkgs; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW problemkgs AS
    SELECT kgs8.gid, kgs8.kgs8, kgs8.g_name, kgs8.the_geom, kgs8."BBR_Gemeindetyp_2002", kgs8."BBR_Kreistyp_2002", kgs8."BBR_DifferenzierterRegionstyp_2002", kgs8."BBR_Regionstyp_2002" FROM kgs8 WHERE (kgs8."BBR_Regionstyp_2002" IS NULL);


--
-- TOC entry 217 (class 1259 OID 3459794)
-- Name: problemkgs_2008; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW problemkgs_2008 AS
    SELECT kgs8.gid, kgs8.kgs8, kgs8.g_name, kgs8.the_geom, kgs8."BBR_Gemeindetyp_2002", kgs8."BBR_Kreistyp_2002", kgs8."BBR_DifferenzierterRegionstyp_2002", kgs8."BBR_Regionstyp_2002", kgs8."BBR_Gemeindetyp_2008", kgs8."BBR_Kreistyp_2008", kgs8."BBR_DifferenzierterRegionstyp_2008", kgs8."BBR_Regionstyp_2008" FROM kgs8 WHERE (kgs8."BBR_Regionstyp_2008" IS NULL);


--
-- TOC entry 218 (class 1259 OID 3459798)
-- Name: ptv_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ptv_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3662 (class 0 OID 0)
-- Dependencies: 218
-- Name: ptv_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ptv_gid_seq OWNED BY gis_ptv.gid;


--
-- TOC entry 220 (class 1259 OID 3459803)
-- Name: pwvm_tlocation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_tlocation (
    id integer NOT NULL,
    name character varying(100) NOT NULL
);


--
-- TOC entry 3663 (class 0 OID 0)
-- Dependencies: 220
-- Name: TABLE pwvm_tlocation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_tlocation IS 'Contains location types which serve as start and destination of routes. Types 1-8 are taken from KiD, type 9 was introduced so as to refer to businesses that share the same WZ while excluding the own business (Eigener Betrieb).';


--
-- TOC entry 221 (class 1259 OID 3459806)
-- Name: pwvm_Tlocation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE "pwvm_Tlocation_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3664 (class 0 OID 0)
-- Dependencies: 221
-- Name: pwvm_Tlocation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE "pwvm_Tlocation_id_seq" OWNED BY pwvm_tlocation.id;


--
-- TOC entry 222 (class 1259 OID 3459808)
-- Name: pwvm_tpurpose; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_tpurpose (
    id integer NOT NULL,
    "desc" character varying(500) NOT NULL,
    commercial boolean DEFAULT true NOT NULL
);


--
-- TOC entry 3665 (class 0 OID 0)
-- Dependencies: 222
-- Name: TABLE pwvm_tpurpose; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_tpurpose IS 'Purpose types as listed in KiD';


--
-- TOC entry 223 (class 1259 OID 3459815)
-- Name: pwvm_Tpurpose_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE "pwvm_Tpurpose_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3666 (class 0 OID 0)
-- Dependencies: 223
-- Name: pwvm_Tpurpose_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE "pwvm_Tpurpose_id_seq" OWNED BY pwvm_tpurpose.id;


--
-- TOC entry 225 (class 1259 OID 3459820)
-- Name: pwvm_aufkommenstabelle; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_aufkommenstabelle (
    economic_sector "char" NOT NULL,
    headcountclass integer NOT NULL,
    aufkommen double precision NOT NULL
);


--
-- TOC entry 3667 (class 0 OID 0)
-- Dependencies: 225
-- Name: TABLE pwvm_aufkommenstabelle; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_aufkommenstabelle IS 'beschreibt, wie viel Fahrzeuge von Betrieben losfahren (nach WZ und MA-Klasse)';


--
-- TOC entry 226 (class 1259 OID 3459823)
-- Name: pwvm_gis_borderdefinition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pwvm_gis_borderdefinition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3668 (class 0 OID 0)
-- Dependencies: 226
-- Name: pwvm_gis_borderdefinition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pwvm_gis_borderdefinition_id_seq OWNED BY pwvm_borderdefinition.id;


--
-- TOC entry 227 (class 1259 OID 3459825)
-- Name: pwvm_lb_trip_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pwvm_lb_trip_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3669 (class 0 OID 0)
-- Dependencies: 227
-- Name: pwvm_lb_trip_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pwvm_lb_trip_id_seq OWNED BY pwvm_logbook_trip."tripId";


--
-- TOC entry 228 (class 1259 OID 3459827)
-- Name: pwvm_logbook_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pwvm_logbook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3670 (class 0 OID 0)
-- Dependencies: 228
-- Name: pwvm_logbook_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pwvm_logbook_id_seq OWNED BY pwvm_logbook.id;


--
-- TOC entry 229 (class 1259 OID 3459829)
-- Name: pwvm_logmessages_durchlauf1; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf1 (
    id integer,
    type integer,
    message character varying
);


--
-- TOC entry 230 (class 1259 OID 3459835)
-- Name: pwvm_logmessages_durchlauf2; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf2 (
    id integer,
    type integer,
    message character varying
);


--
-- TOC entry 231 (class 1259 OID 3459841)
-- Name: pwvm_logmessages_durchlauf3; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf3 (
    id integer,
    type integer,
    message character varying
);


--
-- TOC entry 232 (class 1259 OID 3459847)
-- Name: pwvm_logmessages_durchlauf4; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf4 (
    id integer,
    type integer,
    message character varying
);


--
-- TOC entry 233 (class 1259 OID 3459853)
-- Name: pwvm_logmessages_durchlauf5; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf5 (
    id integer,
    type integer,
    message character varying,
    "logbookId" integer
);


--
-- TOC entry 234 (class 1259 OID 3459859)
-- Name: pwvm_logmessages_durchlauf6; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_logmessages_durchlauf6 (
    id integer,
    type integer,
    message character varying,
    "logbookId" integer
);


--
-- TOC entry 235 (class 1259 OID 3459865)
-- Name: pwvm_logmessages_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pwvm_logmessages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3671 (class 0 OID 0)
-- Dependencies: 235
-- Name: pwvm_logmessages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pwvm_logmessages_id_seq OWNED BY pwvm_logmessages.id;


--
-- TOC entry 276 (class 1259 OID 6685706)
-- Name: pwvm_matrix_10er_sample; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_10er_sample (
    logbook_id integer,
    trip_id integer,
    source_geom geometry,
    dest_geom geometry,
    purpose_id integer,
    dest_typ integer,
    vehicle_type integer,
    business_id integer,
    start_time time without time zone,
    stop_time time without time zone,
    source_type integer,
    pk bigint,
    modell_schleife smallint
);


--
-- TOC entry 236 (class 1259 OID 3459867)
-- Name: pwvm_matrix_durchlauf1; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf1 (
    id integer NOT NULL,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    routed_distance double precision
);


--
-- TOC entry 237 (class 1259 OID 3459873)
-- Name: pwvm_matrix_durchlauf2; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf2 (
    id integer NOT NULL,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone
);


--
-- TOC entry 238 (class 1259 OID 3459879)
-- Name: pwvm_matrix_durchlauf3; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf3 (
    id integer,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone
);


--
-- TOC entry 239 (class 1259 OID 3459885)
-- Name: pwvm_matrix_durchlauf4; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf4 (
    id integer,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone,
    routed_distance double precision
);


--
-- TOC entry 240 (class 1259 OID 3459891)
-- Name: pwvm_matrix_durchlauf5; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf5 (
    id integer,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone,
    routed_distance double precision
);


--
-- TOC entry 3672 (class 0 OID 0)
-- Dependencies: 240
-- Name: TABLE pwvm_matrix_durchlauf5; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_matrix_durchlauf5 IS 'Durchlauf für Diss Kapitel 6';


--
-- TOC entry 241 (class 1259 OID 3459897)
-- Name: pwvm_matrix_durchlauf6; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_matrix_durchlauf6 (
    id integer,
    business_id integer,
    purpose integer,
    source_geom geometry,
    dest_geom geometry,
    vehicletype integer,
    logbook_id integer,
    trip_id integer,
    destinationtype integer,
    start_time time without time zone,
    stop_time time without time zone,
    sourcetype integer
);


--
-- TOC entry 3673 (class 0 OID 0)
-- Dependencies: 241
-- Name: TABLE pwvm_matrix_durchlauf6; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_matrix_durchlauf6 IS 'Neuberechnungen für Nagel';


--
-- TOC entry 242 (class 1259 OID 3459903)
-- Name: pwvm_matrix_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pwvm_matrix_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3674 (class 0 OID 0)
-- Dependencies: 242
-- Name: pwvm_matrix_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pwvm_matrix_id_seq OWNED BY pwvm_matrix.id;


--
-- TOC entry 219 (class 1259 OID 3459800)
-- Name: pwvm_theadcountclass; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_theadcountclass (
    id integer NOT NULL,
    "desc" character varying(255) NOT NULL,
    min integer NOT NULL,
    max integer NOT NULL
);


--
-- TOC entry 3675 (class 0 OID 0)
-- Dependencies: 219
-- Name: TABLE pwvm_theadcountclass; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_theadcountclass IS 'number of employees according to the infas classification';


--
-- TOC entry 224 (class 1259 OID 3459817)
-- Name: pwvm_tvehicle; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE pwvm_tvehicle (
    id integer NOT NULL,
    description character varying(100) NOT NULL
);


--
-- TOC entry 3676 (class 0 OID 0)
-- Dependencies: 224
-- Name: TABLE pwvm_tvehicle; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pwvm_tvehicle IS 'defines all vehicle types (currently the ones from KiD)';


--
-- TOC entry 243 (class 1259 OID 3459905)
-- Name: raumtypdef_2002; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE raumtypdef_2002 (
    kgs character varying(8) NOT NULL,
    regionstyp smallint,
    differenzierterregionstyp smallint,
    kreistyp smallint,
    gemeindetyp smallint
);


--
-- TOC entry 3677 (class 0 OID 0)
-- Dependencies: 243
-- Name: TABLE raumtypdef_2002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE raumtypdef_2002 IS 'Quelle: Bundesamt fuer Raumordnung
Aktualitaet: 31.12.2002';


--
-- TOC entry 3678 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN raumtypdef_2002.kgs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN raumtypdef_2002.kgs IS 'KGS8 Schlüssel';


--
-- TOC entry 3679 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN raumtypdef_2002.regionstyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN raumtypdef_2002.regionstyp IS 'BBR-Typologie: Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3680 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN raumtypdef_2002.differenzierterregionstyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN raumtypdef_2002.differenzierterregionstyp IS 'BBR-Typologie: Differenzierter Regionstyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3681 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN raumtypdef_2002.kreistyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN raumtypdef_2002.kreistyp IS 'BBR-Typologie: Kreistyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 3682 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN raumtypdef_2002.gemeindetyp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN raumtypdef_2002.gemeindetyp IS 'BBR-Typologie: Gemeindetyp, Quelle: BBR (Bundesamt für Bauwesen und Raumordnung, ehemals BfLR=Bundesforschungsanstalt für Landeskunde und Raumordnung)
Stand: 2002';


--
-- TOC entry 278 (class 1259 OID 6720924)
-- Name: roadstable; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE roadstable (
    gid integer NOT NULL,
    no integer,
    code character varying(1),
    name character varying(31),
    typeno integer,
    objectid double precision,
    nuts_id character varying(5),
    stat_levl_ double precision,
    area double precision,
    len double precision,
    shape_leng double precision,
    shape_area double precision,
    airp_icao_ character varying(4),
    airp_hier_ double precision,
    airp_lcov_ double precision,
    cntr_code character varying(2),
    airp_icrg_ character varying(2),
    ten_code double precision,
    iata_code character varying(3),
    airp_pass_ double precision,
    publ_flag character varying(1),
    ifr character varying(1),
    vfr character varying(1),
    airp_ownr_ character varying(2),
    airp_land_ character varying(1),
    airp_traf_ character varying(1),
    airp_intr_ character varying(1),
    airp_name character varying(21),
    airp_name_ character varying(21),
    city character varying(20),
    alt double precision,
    klasse integer,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((st_ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((st_srid(the_geom) = 31467))
);


--
-- TOC entry 277 (class 1259 OID 6720922)
-- Name: roadstable_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE roadstable_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3683 (class 0 OID 0)
-- Dependencies: 277
-- Name: roadstable_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE roadstable_gid_seq OWNED BY roadstable.gid;


--
-- TOC entry 244 (class 1259 OID 3459908)
-- Name: searchradius; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE searchradius (
    id integer NOT NULL,
    dest_type integer,
    the_geom geometry,
    homebusiness integer,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 245 (class 1259 OID 3459917)
-- Name: searchradius_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE searchradius_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3684 (class 0 OID 0)
-- Dependencies: 245
-- Name: searchradius_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE searchradius_id_seq OWNED BY searchradius.id;


--
-- TOC entry 246 (class 1259 OID 3459919)
-- Name: smarttrack_logs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE smarttrack_logs (
    id integer NOT NULL,
    record integer,
    event_type integer,
    ts timestamp without time zone,
    altitude character varying(100),
    pdop character varying(100),
    hdop character varying(100),
    satellite_no integer,
    speed_kmh real,
    direction character varying(100),
    sourcefile character varying(100),
    the_geom geometry,
    supplemented boolean DEFAULT false,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 4326))
);


--
-- TOC entry 247 (class 1259 OID 3459929)
-- Name: smarttrack_2008-09-16; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "smarttrack_2008-09-16" AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (date(smarttrack_logs.ts) = '2008-09-16'::date);


--
-- TOC entry 248 (class 1259 OID 3459933)
-- Name: smarttrack_2008-09-17; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "smarttrack_2008-09-17" AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (date(smarttrack_logs.ts) = '2008-09-17'::date);


--
-- TOC entry 249 (class 1259 OID 3459937)
-- Name: smarttrack_2008-09-18; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "smarttrack_2008-09-18" AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (date(smarttrack_logs.ts) = '2008-09-18'::date);


--
-- TOC entry 250 (class 1259 OID 3459941)
-- Name: smarttrack_2008-09-19; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "smarttrack_2008-09-19" AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (date(smarttrack_logs.ts) = '2008-09-19'::date);


--
-- TOC entry 251 (class 1259 OID 3459945)
-- Name: smarttrack_2008-09-20; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW "smarttrack_2008-09-20" AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (date(smarttrack_logs.ts) = '2008-09-20'::date);


--
-- TOC entry 252 (class 1259 OID 3459949)
-- Name: smarttrack_routes; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW smarttrack_routes AS
    SELECT date(tmp.ts) AS date, tmp.sourcefile, collect(tmp.the_geom) AS collect FROM (SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs ORDER BY smarttrack_logs.sourcefile, smarttrack_logs.ts) tmp GROUP BY date(tmp.ts), tmp.sourcefile;


--
-- TOC entry 253 (class 1259 OID 3459953)
-- Name: smarttrack_all_routes; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW smarttrack_all_routes AS
    SELECT smarttrack_routes.sourcefile, smarttrack_routes.date, st_linefrommultipoint(smarttrack_routes.collect) AS st_linefrommultipoint FROM smarttrack_routes ORDER BY smarttrack_routes.date, smarttrack_routes.sourcefile;


--
-- TOC entry 254 (class 1259 OID 3459957)
-- Name: smarttrack_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE smarttrack_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3685 (class 0 OID 0)
-- Dependencies: 254
-- Name: smarttrack_logs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE smarttrack_logs_id_seq OWNED BY smarttrack_logs.id;


--
-- TOC entry 255 (class 1259 OID 3459959)
-- Name: smarttrack_route_day1; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW smarttrack_route_day1 AS
    SELECT smarttrack_routes.sourcefile, smarttrack_routes.date, st_linefrommultipoint(smarttrack_routes.collect) AS st_linefrommultipoint FROM smarttrack_routes ORDER BY smarttrack_routes.date LIMIT 1;


--
-- TOC entry 256 (class 1259 OID 3459963)
-- Name: smarttrack_routes_as_lines; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW smarttrack_routes_as_lines AS
    SELECT smarttrack_routes.sourcefile, smarttrack_routes.date, st_linefrommultipoint(smarttrack_routes.collect) AS st_linefrommultipoint FROM smarttrack_routes;


--
-- TOC entry 257 (class 1259 OID 3459967)
-- Name: smarttrack_supps; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW smarttrack_supps AS
    SELECT smarttrack_logs.id, smarttrack_logs.record, smarttrack_logs.event_type, smarttrack_logs.ts, smarttrack_logs.altitude, smarttrack_logs.pdop, smarttrack_logs.hdop, smarttrack_logs.satellite_no, smarttrack_logs.speed_kmh, smarttrack_logs.direction, smarttrack_logs.sourcefile, smarttrack_logs.the_geom, smarttrack_logs.supplemented FROM smarttrack_logs WHERE (smarttrack_logs.supplemented = true);


--
-- TOC entry 145 (class 1259 OID 3458733)
-- Name: spatial_ref_sys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE spatial_ref_sys (
    srid integer NOT NULL,
    auth_name character varying(256),
    auth_srid integer,
    srtext character varying(2048),
    proj4text character varying(2048)
);


--
-- TOC entry 258 (class 1259 OID 3459971)
-- Name: sumo_edge; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sumo_edge (
    id character varying(50) NOT NULL,
    from_junction character varying(50) NOT NULL,
    to_junction character varying(50) NOT NULL
);


--
-- TOC entry 259 (class 1259 OID 3459974)
-- Name: sumo_junction; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sumo_junction (
    id character varying(50) NOT NULL,
    x character varying(50) NOT NULL,
    y character varying(50) NOT NULL,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 260 (class 1259 OID 3459983)
-- Name: svb_31122002; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE svb_31122002 (
    kgs character varying NOT NULL,
    svb integer
);


--
-- TOC entry 3686 (class 0 OID 0)
-- Dependencies: 260
-- Name: TABLE svb_31122002; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE svb_31122002 IS 'Statistik der Bundesagentur für Arbeit: Sozialversicherungspflichtig Beschäftigte (SvB) am Arbeitsort (AO), Nürnberg, 31.12.2002';


--
-- TOC entry 261 (class 1259 OID 3459989)
-- Name: testbuffffffer; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW testbuffffffer AS
    SELECT st_buffer('0101000020EB7A0000F0A7C60B1C144D41EC51B8261A405641'::geometry, (11720.372174622828)::double precision) AS st_buffer;


--
-- TOC entry 262 (class 1259 OID 3459993)
-- Name: testcircle; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW testcircle AS
    SELECT st_difference(st_buffer('0101000020EB7A000023DBF92E05114D41BC74936060395641'::geometry, (4600)::double precision), st_buffer('0101000020EB7A000023DBF92E05114D41BC74936060395641'::geometry, (4400)::double precision)) AS st_buffer;


--
-- TOC entry 263 (class 1259 OID 3459997)
-- Name: testcircleeee; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW testcircleeee AS
    SELECT st_difference(st_buffer('0101000020EB7A0000B29DEF67B9E34C41E5D022CB4F475641'::geometry, (9089.206024678499)::double precision), st_buffer('0101000020EB7A0000B29DEF67B9E34C41E5D022CB4F475641'::geometry, (9039.206024678499)::double precision)) AS st_difference;


--
-- TOC entry 264 (class 1259 OID 3460001)
-- Name: tmp; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW tmp AS
    SELECT pwvm_logbook_trip."logbookId", st_linefrommultipoint(st_collect(pwvm_logbook_trip.the_geom)) AS singlegeom FROM pwvm_logbook_trip WHERE (pwvm_logbook_trip.the_geom IS NOT NULL) GROUP BY pwvm_logbook_trip."logbookId";


--
-- TOC entry 265 (class 1259 OID 3460005)
-- Name: trips_generated; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW trips_generated AS
    SELECT pwvm_matrix.id, pwvm_matrix.business_id, pwvm_matrix.purpose, st_makeline(pwvm_matrix.source_geom, pwvm_matrix.dest_geom) AS st_makeline FROM pwvm_matrix;


--
-- TOC entry 266 (class 1259 OID 3460009)
-- Name: trips_generated_limit10; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW trips_generated_limit10 AS
    SELECT pwvm_matrix.id, pwvm_matrix.business_id, pwvm_matrix.purpose, st_makeline(pwvm_matrix.source_geom, pwvm_matrix.dest_geom) AS st_makeline FROM pwvm_matrix LIMIT 10;


--
-- TOC entry 267 (class 1259 OID 3460013)
-- Name: tvz_gid_seq1; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tvz_gid_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3687 (class 0 OID 0)
-- Dependencies: 267
-- Name: tvz_gid_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tvz_gid_seq1 OWNED BY gis_verkehrszelle.gid;


--
-- TOC entry 268 (class 1259 OID 3460015)
-- Name: visualisierung_durchlauf1; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE visualisierung_durchlauf1 (
    kgs16 character varying(12),
    the_geom geometry,
    number_of_households bigint,
    number_of_businesses bigint,
    number_of_trips_starting_here_all_trips bigint,
    number_of_trips_ending_here_all_trips bigint,
    number_of_trips_starting_here_only_pwv_trips bigint,
    number_of_trips_ending_here_only_pwv_trips bigint
);


--
-- TOC entry 269 (class 1259 OID 3460021)
-- Name: visualisierung_durchlauf2; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE visualisierung_durchlauf2 (
    kgs16 character varying(12),
    the_geom geometry,
    number_of_households bigint,
    number_of_businesses bigint,
    number_of_trips_starting_here_all_trips bigint,
    number_of_trips_ending_here_all_trips bigint,
    number_of_trips_starting_here_only_pwv_trips bigint,
    number_of_trips_ending_here_only_pwv_trips bigint
);


--
-- TOC entry 270 (class 1259 OID 3460027)
-- Name: visualisierung_durchlauf4; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE visualisierung_durchlauf4 (
    kgs16 character varying(12),
    the_geom geometry,
    number_of_households bigint,
    number_of_businesses bigint,
    number_of_trips_starting_here_all_trips bigint,
    number_of_trips_ending_here_all_trips bigint,
    number_of_trips_starting_here_only_pwv_trips bigint,
    number_of_trips_ending_here_only_pwv_trips bigint
);


--
-- TOC entry 271 (class 1259 OID 3460033)
-- Name: visualisierung_durchlauf5; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE visualisierung_durchlauf5 (
    kgs16 character varying(12),
    the_geom geometry,
    number_of_households bigint,
    number_of_businesses bigint,
    number_of_trips_starting_here_all_trips bigint,
    number_of_trips_ending_here_all_trips bigint,
    number_of_trips_starting_here_only_pwv_trips bigint,
    number_of_trips_ending_here_only_pwv_trips bigint
);


--
-- TOC entry 272 (class 1259 OID 3460039)
-- Name: visumbezirk; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE visumbezirk (
    gid integer NOT NULL,
    no integer,
    code character varying(1),
    name character varying(24),
    typeno smallint,
    the_geom geometry,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 31467))
);


--
-- TOC entry 273 (class 1259 OID 3460048)
-- Name: visumbezirke_berlin_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE visumbezirke_berlin_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3688 (class 0 OID 0)
-- Dependencies: 273
-- Name: visumbezirke_berlin_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE visumbezirke_berlin_gid_seq OWNED BY visumbezirk.gid;


--
-- TOC entry 274 (class 1259 OID 3460050)
-- Name: wivsim_business_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wivsim_business_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3689 (class 0 OID 0)
-- Dependencies: 274
-- Name: wivsim_business_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wivsim_business_id_seq OWNED BY pwvm_business.id;


--
-- TOC entry 275 (class 1259 OID 3460052)
-- Name: wz_abschnitt; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE wz_abschnitt (
    wz "char" NOT NULL,
    "desc" character varying(500) NOT NULL
);


--
-- TOC entry 3690 (class 0 OID 0)
-- Dependencies: 275
-- Name: TABLE wz_abschnitt; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE wz_abschnitt IS 'enthält alle Wirtschaftszweige plus P für privat';


--
-- TOC entry 3279 (class 2604 OID 3460055)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_block ALTER COLUMN gid SET DEFAULT nextval('block_gid_seq'::regclass);


--
-- TOC entry 3287 (class 2604 OID 3460056)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_dlm_fot ALTER COLUMN gid SET DEFAULT nextval('fot_gid_seq'::regclass);


--
-- TOC entry 3291 (class 2604 OID 3460057)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_ptv ALTER COLUMN gid SET DEFAULT nextval('ptv_gid_seq'::regclass);


--
-- TOC entry 3298 (class 2604 OID 3460058)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_verkehrszelle ALTER COLUMN gid SET DEFAULT nextval('tvz_gid_seq1'::regclass);


--
-- TOC entry 3283 (class 2604 OID 3460059)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs ALTER COLUMN gid SET DEFAULT nextval('kgs_gid_seq'::regclass);


--
-- TOC entry 3268 (class 2604 OID 3460060)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs16 ALTER COLUMN gid SET DEFAULT nextval('kgs16_gid_seq'::regclass);


--
-- TOC entry 3302 (class 2604 OID 3460061)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8 ALTER COLUMN gid SET DEFAULT nextval('kgs8_gid_seq'::regclass);


--
-- TOC entry 3306 (class 2604 OID 3460062)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8_2002 ALTER COLUMN gid SET DEFAULT nextval('kgs_2002_gid_seq1'::regclass);


--
-- TOC entry 3310 (class 2604 OID 3460063)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8_2003 ALTER COLUMN gid SET DEFAULT nextval('kgs_2003_gid_seq1'::regclass);


--
-- TOC entry 3339 (class 2604 OID 3460064)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts0 ALTER COLUMN gid SET DEFAULT nextval('nuts0_gid_seq'::regclass);


--
-- TOC entry 3343 (class 2604 OID 3460065)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts1 ALTER COLUMN gid SET DEFAULT nextval('nuts1_gid_seq'::regclass);


--
-- TOC entry 3347 (class 2604 OID 3460066)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts2 ALTER COLUMN gid SET DEFAULT nextval('nuts2_gid_seq'::regclass);


--
-- TOC entry 3351 (class 2604 OID 3460067)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts3 ALTER COLUMN gid SET DEFAULT nextval('nuts3_gid_seq'::regclass);


--
-- TOC entry 3355 (class 2604 OID 3460068)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY plz ALTER COLUMN gid SET DEFAULT nextval('plz_gid_seq'::regclass);


--
-- TOC entry 3275 (class 2604 OID 3460071)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_borderdefinition ALTER COLUMN id SET DEFAULT nextval('pwvm_gis_borderdefinition_id_seq'::regclass);


--
-- TOC entry 3323 (class 2604 OID 3460072)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook ALTER COLUMN id SET DEFAULT nextval('pwvm_logbook_id_seq'::regclass);


--
-- TOC entry 3327 (class 2604 OID 3460073)
-- Name: tripId; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook_trip ALTER COLUMN "tripId" SET DEFAULT nextval('pwvm_lb_trip_id_seq'::regclass);


--
-- TOC entry 3331 (class 2604 OID 3460074)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logmessages ALTER COLUMN id SET DEFAULT nextval('pwvm_logmessages_id_seq'::regclass);


--
-- TOC entry 3332 (class 2604 OID 3460075)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix ALTER COLUMN id SET DEFAULT nextval('pwvm_matrix_id_seq'::regclass);


--
-- TOC entry 3359 (class 2604 OID 3460069)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tlocation ALTER COLUMN id SET DEFAULT nextval('"pwvm_Tlocation_id_seq"'::regclass);


--
-- TOC entry 3361 (class 2604 OID 3460070)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tpurpose ALTER COLUMN id SET DEFAULT nextval('"pwvm_Tpurpose_id_seq"'::regclass);


--
-- TOC entry 3378 (class 2604 OID 6720927)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY roadstable ALTER COLUMN gid SET DEFAULT nextval('roadstable_gid_seq'::regclass);


--
-- TOC entry 3362 (class 2604 OID 3460076)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY searchradius ALTER COLUMN id SET DEFAULT nextval('searchradius_id_seq'::regclass);


--
-- TOC entry 3367 (class 2604 OID 3460077)
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY smarttrack_logs ALTER COLUMN id SET DEFAULT nextval('smarttrack_logs_id_seq'::regclass);


--
-- TOC entry 3374 (class 2604 OID 3460078)
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY visumbezirk ALTER COLUMN gid SET DEFAULT nextval('visumbezirke_berlin_gid_seq'::regclass);


--
-- TOC entry 3405 (class 2606 OID 3639804)
-- Name: block_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_block
    ADD CONSTRAINT block_pkey PRIMARY KEY (gid);


--
-- TOC entry 3414 (class 2606 OID 3639806)
-- Name: fot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_dlm_fot
    ADD CONSTRAINT fot_pkey PRIMARY KEY (gid);


--
-- TOC entry 3385 (class 2606 OID 3458748)
-- Name: geometry_columns_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY geometry_columns
    ADD CONSTRAINT geometry_columns_pk PRIMARY KEY (f_table_catalog, f_table_schema, f_table_name, f_geometry_column);


--
-- TOC entry 3397 (class 2606 OID 3639808)
-- Name: gis_housecoordinate_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_housecoordinate
    ADD CONSTRAINT gis_housecoordinate_pkey PRIMARY KEY (s2);


--
-- TOC entry 3483 (class 2606 OID 3639810)
-- Name: infas_business_headcount_class_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_theadcountclass
    ADD CONSTRAINT infas_business_headcount_class_pkey PRIMARY KEY (id);


--
-- TOC entry 3387 (class 2606 OID 3639812)
-- Name: kgs16_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs16
    ADD CONSTRAINT kgs16_pkey PRIMARY KEY (gid);


--
-- TOC entry 3426 (class 2606 OID 3639814)
-- Name: kgs5_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs5
    ADD CONSTRAINT kgs5_pkey PRIMARY KEY (kgs5);


--
-- TOC entry 3429 (class 2606 OID 3639816)
-- Name: kgs5_x_kid_wz_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs5_x_kid_wz
    ADD CONSTRAINT kgs5_x_kid_wz_pkey PRIMARY KEY (kgs5, wz);


--
-- TOC entry 3434 (class 2606 OID 3639818)
-- Name: kgs8_2002_key_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8_2002
    ADD CONSTRAINT kgs8_2002_key_key UNIQUE (kgs);


--
-- TOC entry 3431 (class 2606 OID 3639820)
-- Name: kgs8_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8
    ADD CONSTRAINT kgs8_pkey PRIMARY KEY (gid);


--
-- TOC entry 3436 (class 2606 OID 3639822)
-- Name: kgs_2002_pkey1; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8_2002
    ADD CONSTRAINT kgs_2002_pkey1 PRIMARY KEY (gid);


--
-- TOC entry 3439 (class 2606 OID 3639824)
-- Name: kgs_2003_pkey1; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs8_2003
    ADD CONSTRAINT kgs_2003_pkey1 PRIMARY KEY (gid);


--
-- TOC entry 3408 (class 2606 OID 3639826)
-- Name: kgs_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs
    ADD CONSTRAINT kgs_pkey PRIMARY KEY (gid);


--
-- TOC entry 3411 (class 2606 OID 3639828)
-- Name: kgs_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs
    ADD CONSTRAINT kgs_unique UNIQUE (kgs);


--
-- TOC entry 3442 (class 2606 OID 3639830)
-- Name: kid_fahrtendatei_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kid_fahrt
    ADD CONSTRAINT kid_fahrtendatei_pkey PRIMARY KEY (fahrzeugid, fahrtid);


--
-- TOC entry 3444 (class 2606 OID 3639832)
-- Name: kid_fahrzeuge_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kid_fahrzeug
    ADD CONSTRAINT kid_fahrzeuge_pkey PRIMARY KEY (fahrzeugid);


--
-- TOC entry 3466 (class 2606 OID 3639834)
-- Name: nuts0_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts0
    ADD CONSTRAINT nuts0_pkey PRIMARY KEY (gid);


--
-- TOC entry 3469 (class 2606 OID 3639836)
-- Name: nuts1_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts1
    ADD CONSTRAINT nuts1_pkey PRIMARY KEY (gid);


--
-- TOC entry 3472 (class 2606 OID 3639838)
-- Name: nuts2_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts2
    ADD CONSTRAINT nuts2_pkey PRIMARY KEY (gid);


--
-- TOC entry 3475 (class 2606 OID 3639840)
-- Name: nuts3_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY nuts3
    ADD CONSTRAINT nuts3_pkey PRIMARY KEY (gid);


--
-- TOC entry 3478 (class 2606 OID 3639842)
-- Name: plz_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY plz
    ADD CONSTRAINT plz_pkey PRIMARY KEY (gid);


--
-- TOC entry 3480 (class 2606 OID 3639844)
-- Name: plz_plz_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY plz
    ADD CONSTRAINT plz_plz_key UNIQUE (plz);


--
-- TOC entry 3417 (class 2606 OID 3639846)
-- Name: ptv_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_ptv
    ADD CONSTRAINT ptv_pkey PRIMARY KEY (gid);


--
-- TOC entry 3485 (class 2606 OID 3639848)
-- Name: pwvm_Tlocation_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tlocation
    ADD CONSTRAINT "pwvm_Tlocation_pkey" PRIMARY KEY (id);


--
-- TOC entry 3457 (class 2606 OID 3639850)
-- Name: pwvm_Tlogmessage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tlogmessage
    ADD CONSTRAINT "pwvm_Tlogmessage_pkey" PRIMARY KEY (type);


--
-- TOC entry 3487 (class 2606 OID 3639852)
-- Name: pwvm_Tpurpose_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tpurpose
    ADD CONSTRAINT "pwvm_Tpurpose_pkey" PRIMARY KEY (id);


--
-- TOC entry 3489 (class 2606 OID 3639854)
-- Name: pwvm_Tvehicle_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_tvehicle
    ADD CONSTRAINT "pwvm_Tvehicle_pkey" PRIMARY KEY (id);


--
-- TOC entry 3491 (class 2606 OID 3639856)
-- Name: pwvm_aufkommenstabelle_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_aufkommenstabelle
    ADD CONSTRAINT pwvm_aufkommenstabelle_pkey PRIMARY KEY (economic_sector, headcountclass);


--
-- TOC entry 3403 (class 2606 OID 3639858)
-- Name: pwvm_borderdefinition_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_borderdefinition
    ADD CONSTRAINT pwvm_borderdefinition_pkey PRIMARY KEY (id);


--
-- TOC entry 3449 (class 2606 OID 3639860)
-- Name: pwvm_logbook_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT pwvm_logbook_pkey PRIMARY KEY (id);


--
-- TOC entry 3455 (class 2606 OID 3639862)
-- Name: pwvm_logbook_trip_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook_trip
    ADD CONSTRAINT pwvm_logbook_trip_pkey PRIMARY KEY ("logbookId", "tripId");


--
-- TOC entry 3459 (class 2606 OID 3639864)
-- Name: pwvm_logmessages_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logmessages
    ADD CONSTRAINT pwvm_logmessages_pkey PRIMARY KEY (id);


--
-- TOC entry 3493 (class 2606 OID 3639866)
-- Name: pwvm_matrix_durchlauf1_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix_durchlauf1
    ADD CONSTRAINT pwvm_matrix_durchlauf1_pkey PRIMARY KEY (id);


--
-- TOC entry 3495 (class 2606 OID 3639868)
-- Name: pwvm_matrix_durchlauf2_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix_durchlauf2
    ADD CONSTRAINT pwvm_matrix_durchlauf2_pkey PRIMARY KEY (id);


--
-- TOC entry 3463 (class 2606 OID 3639870)
-- Name: pwvm_matrix_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix
    ADD CONSTRAINT pwvm_matrix_pkey PRIMARY KEY (id);


--
-- TOC entry 3513 (class 2606 OID 3639872)
-- Name: pwvm_wz_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wz_abschnitt
    ADD CONSTRAINT pwvm_wz_pkey PRIMARY KEY (wz);


--
-- TOC entry 3497 (class 2606 OID 3639874)
-- Name: raumtypdef_2002_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY raumtypdef_2002
    ADD CONSTRAINT raumtypdef_2002_pkey PRIMARY KEY (kgs);


--
-- TOC entry 3515 (class 2606 OID 6720929)
-- Name: roadstable_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY roadstable
    ADD CONSTRAINT roadstable_pkey PRIMARY KEY (gid);


--
-- TOC entry 3499 (class 2606 OID 3639876)
-- Name: searchradius_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY searchradius
    ADD CONSTRAINT searchradius_pkey PRIMARY KEY (id);


--
-- TOC entry 3502 (class 2606 OID 3639878)
-- Name: smarttrack_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY smarttrack_logs
    ADD CONSTRAINT smarttrack_logs_pkey PRIMARY KEY (id);


--
-- TOC entry 3383 (class 2606 OID 3458740)
-- Name: spatial_ref_sys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spatial_ref_sys
    ADD CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid);


--
-- TOC entry 3504 (class 2606 OID 3639880)
-- Name: sumo_edge_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sumo_edge
    ADD CONSTRAINT sumo_edge_pkey PRIMARY KEY (id);


--
-- TOC entry 3506 (class 2606 OID 3639882)
-- Name: sumo_junction_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sumo_junction
    ADD CONSTRAINT sumo_junction_pkey PRIMARY KEY (id);


--
-- TOC entry 3508 (class 2606 OID 3639884)
-- Name: svb_31122002_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY svb_31122002
    ADD CONSTRAINT svb_31122002_pkey PRIMARY KEY (kgs);


--
-- TOC entry 3401 (class 2606 OID 3639886)
-- Name: tapas_household_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_household
    ADD CONSTRAINT tapas_household_pkey PRIMARY KEY (idhh);


--
-- TOC entry 3421 (class 2606 OID 3639888)
-- Name: teilverkehrszelle_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_teilverkehrszelle
    ADD CONSTRAINT teilverkehrszelle_pkey PRIMARY KEY (tvz);


--
-- TOC entry 3423 (class 2606 OID 3639890)
-- Name: tvz_pkey1; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY gis_verkehrszelle
    ADD CONSTRAINT tvz_pkey1 PRIMARY KEY (gid);


--
-- TOC entry 3510 (class 2606 OID 3639892)
-- Name: visumbezirke_berlin_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY visumbezirk
    ADD CONSTRAINT visumbezirke_berlin_pkey PRIMARY KEY (gid);


--
-- TOC entry 3395 (class 2606 OID 3639894)
-- Name: wivsim_business_pkey1; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_business
    ADD CONSTRAINT wivsim_business_pkey1 PRIMARY KEY (id);


--
-- TOC entry 3389 (class 1259 OID 3639895)
-- Name: bheadcount; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX bheadcount ON pwvm_business USING btree (headcount);


--
-- TOC entry 3406 (class 1259 OID 3639896)
-- Name: block_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX block_the_geom_gist ON gis_block USING gist (the_geom);


--
-- TOC entry 3399 (class 1259 OID 3639897)
-- Name: fki_; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_ ON pwvm_household USING btree (tvz);


--
-- TOC entry 3390 (class 1259 OID 3639898)
-- Name: fki_business_wz; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_business_wz ON pwvm_business USING btree (wz_1steller);


--
-- TOC entry 3391 (class 1259 OID 3639899)
-- Name: fki_housecoordinate; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_housecoordinate ON pwvm_business USING btree (house_coordinate);


--
-- TOC entry 3445 (class 1259 OID 3639900)
-- Name: fki_logbook_vehicletype; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_logbook_vehicletype ON pwvm_logbook USING btree (vehicletype);


--
-- TOC entry 3452 (class 1259 OID 3639901)
-- Name: fki_logbookid; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_logbookid ON pwvm_logbook_trip USING btree ("logbookId");


--
-- TOC entry 3453 (class 1259 OID 3639902)
-- Name: fki_purpose; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_purpose ON pwvm_logbook_trip USING btree (purpose);


--
-- TOC entry 3446 (class 1259 OID 3639903)
-- Name: fki_vehicleId; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX "fki_vehicleId" ON pwvm_logbook USING btree ("kid_vehicleId");


--
-- TOC entry 3460 (class 1259 OID 3639904)
-- Name: fki_vehicletype; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_vehicletype ON pwvm_matrix USING btree (vehicletype);


--
-- TOC entry 3392 (class 1259 OID 3639905)
-- Name: fki_wz2; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fki_wz2 ON pwvm_business USING btree (wz_2steller);


--
-- TOC entry 3412 (class 1259 OID 3639906)
-- Name: fot_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX fot_gist ON gis_dlm_fot USING gist (the_geom);


--
-- TOC entry 3415 (class 1259 OID 3639907)
-- Name: gis_dlm_fot_objart; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX gis_dlm_fot_objart ON gis_dlm_fot USING btree (objart);


--
-- TOC entry 3398 (class 1259 OID 3639908)
-- Name: gis_housecoordinates_geo; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX gis_housecoordinates_geo ON gis_housecoordinate USING gist (the_geom);


--
-- TOC entry 3419 (class 1259 OID 3639909)
-- Name: gis_teilverkehrszelle_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX gis_teilverkehrszelle_the_geom_gist ON gis_teilverkehrszelle USING gist (the_geom);


--
-- TOC entry 3393 (class 1259 OID 3639910)
-- Name: index_randid; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX index_randid ON pwvm_business USING btree (random_id);


--
-- TOC entry 3388 (class 1259 OID 3639911)
-- Name: kgs16_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX kgs16_the_geom_gist ON kgs16 USING gist (the_geom);


--
-- TOC entry 3432 (class 1259 OID 3639912)
-- Name: kgs8_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX kgs8_the_geom_gist ON kgs8 USING gist (the_geom);


--
-- TOC entry 3437 (class 1259 OID 3639913)
-- Name: kgs_2002_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX kgs_2002_the_geom_gist ON kgs8_2002 USING gist (the_geom);


--
-- TOC entry 3440 (class 1259 OID 3639914)
-- Name: kgs_2003_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX kgs_2003_the_geom_gist ON kgs8_2003 USING gist (the_geom);


--
-- TOC entry 3409 (class 1259 OID 3639915)
-- Name: kgs_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX kgs_the_geom_gist ON kgs USING gist (the_geom);


--
-- TOC entry 3467 (class 1259 OID 3639916)
-- Name: nuts0_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX nuts0_the_geom_gist ON nuts0 USING gist (the_geom);


--
-- TOC entry 3470 (class 1259 OID 3639917)
-- Name: nuts1_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX nuts1_the_geom_gist ON nuts1 USING gist (the_geom);


--
-- TOC entry 3473 (class 1259 OID 3639918)
-- Name: nuts2_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX nuts2_the_geom_gist ON nuts2 USING gist (the_geom);


--
-- TOC entry 3476 (class 1259 OID 3639919)
-- Name: nuts3_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX nuts3_the_geom_gist ON nuts3 USING gist (the_geom);


--
-- TOC entry 3481 (class 1259 OID 3639920)
-- Name: plz_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX plz_the_geom_gist ON plz USING gist (the_geom);


--
-- TOC entry 3418 (class 1259 OID 3639921)
-- Name: ptv_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ptv_the_geom_gist ON gis_ptv USING gist (the_geom);


--
-- TOC entry 3447 (class 1259 OID 3639922)
-- Name: pwvm_logbook_headcountclass; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pwvm_logbook_headcountclass ON pwvm_logbook USING btree (business_headcountclass);


--
-- TOC entry 3450 (class 1259 OID 3639923)
-- Name: pwvm_logbook_wz; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pwvm_logbook_wz ON pwvm_logbook USING btree (business_wz);


--
-- TOC entry 3451 (class 1259 OID 3639924)
-- Name: pwvm_logbook_wz_and_headcountclass; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pwvm_logbook_wz_and_headcountclass ON pwvm_logbook USING btree (business_wz, business_headcountclass);


--
-- TOC entry 3461 (class 1259 OID 3639925)
-- Name: pwvm_matrix_dest_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pwvm_matrix_dest_gist ON pwvm_matrix USING gist (dest_geom);


--
-- TOC entry 3464 (class 1259 OID 3639926)
-- Name: pwvm_matrix_source_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pwvm_matrix_source_gist ON pwvm_matrix USING gist (source_geom);


--
-- TOC entry 3516 (class 1259 OID 6720965)
-- Name: roadstable_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roadstable_the_geom_gist ON roadstable USING gist (the_geom);


--
-- TOC entry 3500 (class 1259 OID 3639927)
-- Name: smarttrack_logs_gist_index; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX smarttrack_logs_gist_index ON smarttrack_logs USING gist (the_geom);


--
-- TOC entry 3427 (class 1259 OID 188388939)
-- Name: tbl_kgs5_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_kgs5_idx ON kgs5 USING btree (kgs5);


--
-- TOC entry 3424 (class 1259 OID 3639928)
-- Name: tvz_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tvz_the_geom_gist ON gis_verkehrszelle USING gist (the_geom);


--
-- TOC entry 3511 (class 1259 OID 3639929)
-- Name: visumbezirke_berlin_the_geom_gist; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX visumbezirke_berlin_the_geom_gist ON visumbezirk USING gist (the_geom);


--
-- TOC entry 3517 (class 2606 OID 3639930)
-- Name: business_wz; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_business
    ADD CONSTRAINT business_wz FOREIGN KEY (wz_1steller) REFERENCES wz_abschnitt(wz);


--
-- TOC entry 3522 (class 2606 OID 3639935)
-- Name: kgs5_x_kid_wz_kgs5_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs5_x_kid_wz
    ADD CONSTRAINT kgs5_x_kid_wz_kgs5_fkey FOREIGN KEY (kgs5) REFERENCES kgs5(kgs5);


--
-- TOC entry 3523 (class 2606 OID 3639940)
-- Name: kgs5_x_kid_wz_wz_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kgs5_x_kid_wz
    ADD CONSTRAINT kgs5_x_kid_wz_wz_fkey FOREIGN KEY (wz) REFERENCES wz_abschnitt(wz);


--
-- TOC entry 3524 (class 2606 OID 3639945)
-- Name: kgs_fahrten_fahrzeugid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY kid_fahrt
    ADD CONSTRAINT kgs_fahrten_fahrzeugid_fkey FOREIGN KEY (fahrzeugid) REFERENCES kid_fahrzeug(fahrzeugid);


--
-- TOC entry 3536 (class 2606 OID 3639950)
-- Name: pwvm_aufkommenstabelle_economic_sector_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_aufkommenstabelle
    ADD CONSTRAINT pwvm_aufkommenstabelle_economic_sector_fkey FOREIGN KEY (economic_sector) REFERENCES wz_abschnitt(wz);


--
-- TOC entry 3537 (class 2606 OID 3639955)
-- Name: pwvm_aufkommenstabelle_headcountclass_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_aufkommenstabelle
    ADD CONSTRAINT pwvm_aufkommenstabelle_headcountclass_fkey FOREIGN KEY (headcountclass) REFERENCES pwvm_theadcountclass(id);


--
-- TOC entry 3518 (class 2606 OID 3639960)
-- Name: pwvm_business_house_coordinate_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_business
    ADD CONSTRAINT pwvm_business_house_coordinate_fkey FOREIGN KEY (house_coordinate) REFERENCES gis_housecoordinate(s2);


--
-- TOC entry 3520 (class 2606 OID 3639965)
-- Name: pwvm_household_house_coordinate_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_household
    ADD CONSTRAINT pwvm_household_house_coordinate_fkey FOREIGN KEY (house_coordinate) REFERENCES gis_housecoordinate(s2);


--
-- TOC entry 3530 (class 2606 OID 3639970)
-- Name: pwvm_lb_trip_dest_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook_trip
    ADD CONSTRAINT pwvm_lb_trip_dest_type_fkey FOREIGN KEY (dest_type) REFERENCES pwvm_tlocation(id);


--
-- TOC entry 3525 (class 2606 OID 3639975)
-- Name: pwvm_logbook_business_headcountclass_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT pwvm_logbook_business_headcountclass_fkey FOREIGN KEY (business_headcountclass) REFERENCES pwvm_theadcountclass(id);


--
-- TOC entry 3526 (class 2606 OID 3639980)
-- Name: pwvm_logbook_business_wz_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT pwvm_logbook_business_wz_fkey FOREIGN KEY (business_wz) REFERENCES wz_abschnitt(wz);


--
-- TOC entry 3527 (class 2606 OID 3639985)
-- Name: pwvm_logbook_kid_vehicleId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT "pwvm_logbook_kid_vehicleId_fkey" FOREIGN KEY ("kid_vehicleId") REFERENCES kid_fahrzeug(fahrzeugid);


--
-- TOC entry 3528 (class 2606 OID 3639990)
-- Name: pwvm_logbook_source_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT pwvm_logbook_source_type_fkey FOREIGN KEY (source_type) REFERENCES pwvm_tlocation(id);


--
-- TOC entry 3531 (class 2606 OID 3639995)
-- Name: pwvm_logbook_trip_logbookId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook_trip
    ADD CONSTRAINT "pwvm_logbook_trip_logbookId_fkey" FOREIGN KEY ("logbookId") REFERENCES pwvm_logbook(id);


--
-- TOC entry 3532 (class 2606 OID 3640000)
-- Name: pwvm_logbook_trip_purpose_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook_trip
    ADD CONSTRAINT pwvm_logbook_trip_purpose_fkey FOREIGN KEY (purpose) REFERENCES pwvm_tpurpose(id);


--
-- TOC entry 3529 (class 2606 OID 3640005)
-- Name: pwvm_logbook_vehicletype_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_logbook
    ADD CONSTRAINT pwvm_logbook_vehicletype_fkey FOREIGN KEY (vehicletype) REFERENCES pwvm_tvehicle(id);


--
-- TOC entry 3533 (class 2606 OID 3640010)
-- Name: pwvm_matrix_business_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix
    ADD CONSTRAINT pwvm_matrix_business_id_fkey FOREIGN KEY (business_id) REFERENCES pwvm_business(id);


--
-- TOC entry 3534 (class 2606 OID 3640015)
-- Name: pwvm_matrix_purpose_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix
    ADD CONSTRAINT pwvm_matrix_purpose_fkey FOREIGN KEY (purpose) REFERENCES pwvm_tpurpose(id);


--
-- TOC entry 3535 (class 2606 OID 3640020)
-- Name: pwvm_matrix_vehicletype_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_matrix
    ADD CONSTRAINT pwvm_matrix_vehicletype_fkey FOREIGN KEY (vehicletype) REFERENCES pwvm_tvehicle(id);


--
-- TOC entry 3521 (class 2606 OID 3640025)
-- Name: tapas_household_tvz_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_household
    ADD CONSTRAINT tapas_household_tvz_fkey FOREIGN KEY (tvz) REFERENCES gis_teilverkehrszelle(tvz);


--
-- TOC entry 3519 (class 2606 OID 3640030)
-- Name: wivsim_business_kgs_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pwvm_business
    ADD CONSTRAINT wivsim_business_kgs_fkey FOREIGN KEY (kgs) REFERENCES kgs(kgs);


-- Completed on 2013-03-20 13:12:31

--
-- PostgreSQL database dump complete
--

